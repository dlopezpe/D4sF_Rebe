{"remainingRequest":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\src\\views\\ParcelsList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\src\\views\\ParcelsList.vue","mtime":1671529918057},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ParcelsList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"group-list\">\r\n        <cv-data-table\r\n            :sortable=\"sortable\"\r\n            :columns=\"[\r\n            {\r\n            key: 'name',\r\n            label: this.$t('parcelas.nombre'),\r\n            sortable: true\r\n            },\r\n            {\r\n            key: 'description',\r\n            label: this.$t('parcelas.descrip')\r\n            },\r\n            {\r\n            key: 'heactareas',\r\n            label: this.$t('parcelas.hectareas'),\r\n            sortable: true\r\n            },\r\n            {\r\n            key: '',\r\n            label: ''\r\n            },\r\n        ]\"\r\n            @sort=\"onSort\"\r\n            :title=\"$t('parcelas.parcel_list')\"\r\n            ref=\"table\"\r\n            :pagination=\"{ numberOfItems: usuarios.length, pageSizes: [10, 15, 20, 25, usuarios.length] }\" @pagination=\"actionOnPagination\"\r\n            @search=\"onFilter\" searchLabel=\"Filter\" searchPlaceholder=\"Filter\" searchClearLabel=\"Clear filter\"\r\n        >\r\n            <template v-if=\"true\" slot=\"actions\">\r\n                <cv-search :placeholder=\"$t('parcelas.place_buscar')\" @input=\"onBuscar\"></cv-search>\r\n                <cv-button small @click=\"actionNew\" :disabled=\"disabledAddNewParcel\" :title=\"titleDisabledAddNewParcel\">{{$t(\"parcelas.place_nuevo\")}}</cv-button>\r\n            </template>\r\n            <template v-if=\"use_batchActions\" slot=\"batch-actions\">\r\n                <cv-button @click=\"onBatchAction1\">\r\n                    {{$t(\"parcelas.eliminar\")}}\r\n                    <TrashCan32 class=\"bx--btn__icon\" />\r\n                </cv-button>\r\n                <cv-button @click=\"onBatchAction2\">\r\n                    {{$t(\"parcelas.editar\")}}\r\n                    <Edit32 class=\"bx--btn__icon\" />\r\n                </cv-button>\r\n                <cv-button @click=\"onBatchAction3\" v-if=\"false\">\r\n                    Descargar\r\n                    <Download16 class=\"bx--btn__icon\" />\r\n                </cv-button>\r\n            </template>\r\n            <template slot=\"data\">\r\n                <cv-data-table-row\r\n                    v-for=\"usuario in usuarios.slice(start, start+length)\"\r\n                    :key=\"`${usuario.id}`\"\r\n                    :value=\"`${usuario.id}`\"\r\n                    :aria-label-for-batch-checkbox=\"`Custom aria label for row ${usuario.id} batch`\"\r\n                >\r\n                    <cv-data-table-cell>{{usuario.properties.name}}</cv-data-table-cell>\r\n                    <cv-data-table-cell>{{usuario.properties.description}}</cv-data-table-cell>\r\n                    <cv-data-table-cell>{{formateaHectareas(usuario.properties.area)}}</cv-data-table-cell>\r\n                    <cv-data-table-cell>\r\n                        <cv-overflow-menu flip-menu style=\"margin: 0 auto;\">\r\n                            <cv-overflow-menu-item @click=\"editarRow(usuario.id)\">{{$t(\"parcelas.editar\")}}</cv-overflow-menu-item>\r\n                            <cv-overflow-menu-item @click=\"eliminaRow(usuario.id)\">{{$t(\"parcelas.eliminar\")}}</cv-overflow-menu-item>\r\n                        </cv-overflow-menu>\r\n                    </cv-data-table-cell>\r\n                </cv-data-table-row>\r\n            </template>\r\n        </cv-data-table>\r\n        <EditarParcel2 ref=\"modal\" :userSeleccionado=\"userSeleccionado\" :key=\"componentKey\" />\r\n        <Alertas :tituloAlert=\"mensajeAlerta\" ref=\"alerta\" />\r\n        <AlertaGeneral ref=\"alertaGeneral\" :tituloAlert=\"mensajeAlerta\" :tipoAlert=\"tipoAlerta\" />\r\n        <cv-modal\r\n        ref=\"alerta_eliminar\"\r\n        kind=\"danger\"\r\n        :visible=\"visibleAlertaEliminar\"\r\n        @primary-click=\"actionPrimary\">\r\n            <template slot=\"label\">{{$t(\"parcelas.seguro\")}}</template>\r\n            <template slot=\"title\">{{$t(\"parcelas.eliminar\")}}</template>\r\n            <template slot=\"content\">\r\n            <p>{{$t(\"parcelas.seguro_parcel_del\")}}</p>\r\n            </template>\r\n            <template slot=\"secondary-button\">{{$t(\"parcelas.cancelar\")}}</template>\r\n            <template slot=\"primary-button\">{{$t(\"parcelas.eliminar\")}}</template>\r\n        </cv-modal>\r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nimport Alertas from \"../components/Alertas.vue\";\r\nimport EditarParcel2 from \"../components/EditarParcel2.vue\";\r\nimport AlertaGeneral from \"../components/AlertaGeneral\";\r\nexport default {\r\n    name: \"ParcelsList\",\r\n    props: {},\r\n    components: {\r\n        Alertas,\r\n        EditarParcel2,\r\n        AlertaGeneral\r\n    },\r\n    data() {\r\n        return {\r\n        sortable: false,\r\n        start: 0,\r\n        length: 10,\r\n        columns3: [\r\n            {\r\n            key: \"name\",\r\n            label: this.$t('parcelas.nombre'),\r\n            sortable: true\r\n            },\r\n            {\r\n            key: \"description\",\r\n            label: this.$t('parcelas.descrip')\r\n            },\r\n            {\r\n            key: \"heactareas\",\r\n            label: this.$t('parcelas.hectareas'),\r\n            sortable: true\r\n            },\r\n            {\r\n            key: \"\",\r\n            label: \"\"\r\n            },\r\n        ],\r\n        usuarios: [],\r\n        basicPagination: false,\r\n        use_batchActions: true,\r\n        hasExpandingRows: false,\r\n        use_slottedData: true,\r\n        mensajeAlerta: \"\", \r\n        userSeleccionado: '',\r\n        visibleAlertaEliminar: false,\r\n        componentKey: 0,\r\n        busqueda: ``,\r\n        columa: ``,\r\n        ordena: ``,\r\n        total_hectares_enterprise: 0,\r\n        disabledAddNewParcel: false,\r\n        titleDisabledAddNewParcel: ``\r\n        };\r\n    },\r\n    methods: {\r\n        formateaHectareas(area){\r\n            if(this.enterprise.type_metric == \"Acre\"){\r\n                return area\r\n            } else {\r\n            return Math.round((area + Number.EPSILON) * 100) / 100\r\n            }\r\n\r\n        },\r\n            metricaparcela(area){\r\n\r\n            if(this.enterprise.type_metric == \"Acre\"){\r\n                const onehecttoAcre = 2.4710538146717\r\n                const acre = onehecttoAcre * area\r\n                this.metric = \"Acre\"\r\n                     console.log(acre.toFixed(4));\r\n                return  acre.toFixed(4)\r\n            }\r\n            return area\r\n        \r\n        },\r\n        editarRow(row){\r\n            this.$refs.table.selectedRows.forEach(()=>{\r\n                this.$refs.table.selectedRows.pop()\r\n            })\r\n            this.$refs.table.selectedRows.push(row)\r\n            this.onBatchAction2()\r\n        },\r\n        eliminaRow(row){\r\n            this.$refs.table.selectedRows.forEach(()=>{\r\n                this.$refs.table.selectedRows.pop()\r\n            })\r\n            this.$refs.table.selectedRows.push(row)\r\n            this.onBatchAction1()\r\n        },\r\n        showAlert(){\r\n            this.mensajeAlerta = this.$t('parcelas.desarrollo')\r\n            this.tipoAlerta = 'info'\r\n            this.$refs.alertaGeneral.verAlerta()\r\n        },\r\n        actionOnPagination(ev){\r\n            this.start = ev.start-1\r\n            this.length = ev.length\r\n        },\r\n        getUsers() {\r\n            if(this.$route.query.enterprise){\r\n                const path = `${this.$apiURL}/enterprises/${this.$route.query.enterprise}/?size=1000000000&page=1`;\r\n                axios.defaults.headers.common['Authorization'] = \"Bearer \"+sessionStorage.getItem(\"apiAccess\")\r\n                axios\r\n                    .get(path)\r\n                    .then(response => {\r\n                        this.enterprise = response.data\r\n                        console.log(response.data);\r\n                        console.log(this.enterprise.type_metric);\r\n                        this.metric = this.enterprise.type_metric\r\n                        this.usuarios = response.data.parcels.features;\r\n                        this.usuarios.forEach(parcel =>{\r\n                            this.total_hectares_enterprise += parcel.properties.area\r\n                            parcel.properties.area = this.metricaparcela(parcel.properties.area)\r\n                        })\r\n                        \r\n                        const porcentaje = (parseFloat(this.total_hectares_enterprise) / parseFloat(response.data.hectares_available)  * 100)\r\n                        if(porcentaje >= 100.00){\r\n                            this.disabledAddNewParcel = true\r\n                            this.titleDisabledAddNewParcel = this.$t('parcelas.parcel_limit')\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        console.warn(error);\r\n                    });\r\n            }else{\r\n                const path = `${this.$apiURL}/parcels/`;\r\n                axios.defaults.headers.common['Authorization'] = \"Bearer \"+sessionStorage.getItem(\"apiAccess\")\r\n                axios\r\n                    .get(path)\r\n                    .then(response => {\r\n                        this.usuarios = response.data.features;\r\n                    })\r\n                    .catch(error => {\r\n                        console.error(error);\r\n                    });\r\n            }\r\n            this.total_hectares_enterprise\r\n        },\r\n        \r\n        onBatchAction2() {\r\n        const rowSeleccionado = this.$refs.table.selectedRows;\r\n        if (rowSeleccionado.length > 1) {\r\n            this.mensajeAlerta = this.$t('parcelas.parcel_sel_alert');\r\n            this.$refs.alerta.verAlerta()\r\n        } else {\r\n            this.userSeleccionado = rowSeleccionado[0]\r\n            this.$refs.modal.openModal(this.userSeleccionado)\r\n        }\r\n        },\r\n        onBatchAction1(){\r\n        \r\n        this.$refs.alerta_eliminar.dataVisible = true\r\n        console.warn(this.$refs.alerta_eliminar.dataVisible)\r\n        \r\n        },\r\n        actionPrimary(){\r\n        \r\n        const rowSeleccionado = this.$refs.table.selectedRows\r\n        let flag = false\r\n        rowSeleccionado.forEach(element => {\r\n            console.log(element)\r\n            const path = `${this.$apiURL}/parcels/${element}/`\r\n            axios.defaults.headers.common['Authorization'] = \"Bearer \"+sessionStorage.getItem(\"apiAccess\")\r\n            axios\r\n            .delete(path)\r\n            .then(() => {\r\n                this.getUsers();\r\n            })\r\n            .catch(response =>{\r\n                flag = true\r\n                console.log(response.error)\r\n            });\r\n        });\r\n        if(flag){\r\n            console.error('error')\r\n            this.mensajeAlerta = this.$t('parcelas.parcel_del_error');\r\n            this.$refs.alerta.verAlerta()\r\n        }else{\r\n            this.$refs.alerta_eliminar.hide()\r\n        }\r\n        \r\n        },\r\n        doClose() {\r\n        this.visibleAlerta = false;\r\n        },\r\n        actionNew(){\r\n        this.$refs.modal.openModal()\r\n        },\r\n        onBuscar(search){\r\n            this.busqueda = search\r\n            const path = `${this.$apiURL}/enterprises/${this.$route.query.enterprise}/?size=1000000000&page=1&parcel_mame=${search}&colum_name=${this.columa}&order=${this.ordena}`\r\n            axios.defaults.headers.common['Authorization'] = \"Bearer \"+sessionStorage.getItem(\"apiAccess\")\r\n            axios\r\n            .get(path)\r\n            .then(response =>{\r\n                this.usuarios = response.data.parcels.features;\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n        },\r\n        onSort(order) {\r\n            const index = order.index\r\n            let column = ``\r\n            const orden = order.order\r\n            \r\n            switch (index) {\r\n                case '0':\r\n                    column = `name`\r\n                    break\r\n                case '2':\r\n                    column = 'area'\r\n                    break\r\n                default:\r\n                    column = `name`\r\n            }\r\n            this.columa = column\r\n            this.ordena = orden\r\n            const path = `${this.$apiURL}/enterprises/${this.$route.query.enterprise}/?size=1000000000&page=1&parcel_mame=${this.busqueda}&colum_name=${column}&order=${orden}`;\r\n            axios.defaults.headers.common['Authorization'] = \"Bearer \"+sessionStorage.getItem(\"apiAccess\")\r\n            axios\r\n            .get(path)\r\n            .then(response => {\r\n                this.usuarios = response.data.parcels.features;\r\n            })\r\n            .catch(error => {\r\n                console.warn(error);\r\n            });\r\n            \r\n        },\r\n    },\r\n    created() {\r\n        this.getUsers();\r\n    }\r\n};\r\n</script>\r\n<style scoped>\r\n</style>"],"sourceRoot":"src/views"}]}