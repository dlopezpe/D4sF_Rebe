{"remainingRequest":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\src\\components\\adminActions\\GenGraficosComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\src\\components\\adminActions\\GenGraficosComponent.vue","mtime":1709553265785},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\babel.config.js","mtime":1681217492507},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["getProfile","getPermisos","getAllEnterprises","getEnterprise","createInformes","getFechasParcelsPreCreate","getFechasParcelsBBOX","getAllActiveEnterprises","getAllCooperatives","getCooperative","AlertaGeneral","name","components","data","selectValueEmpresa","flagIndicatingDataHasBeenLoadedInVariables","is_superuser","is_staff","is_systemadmin","is_enterpriseadmin","is_coop_user","arrEmpresas","arrEmpresasList","arrCooperativas","allParcelsOfEnterprises","allParcelsOfEnterprisesFilter","activeEmpresas","start","length","rowSelects","selectValueCapa","SentinelLayer","calOptions","time","valueDates","valueRange","timeValuesArr","nombreInforme","getNow","checked_clouds","tipoAlerta","mensajeAlerta","fechasParcelasNumImages","verCargandoImagenes","disabledGenerar","verErrorIntervalo","verCargandoFechasBbox","initialStep","steps","open","verTimeoutNumImg","scrollPosition","methods","keepPositionScroll","window","scrollY","putPositionScroll","setTimeout","scrollTo","getSortedCooperativa","cooperativa","enterprises","slice","sort","a","b","localeCompare","actionChangeAccordeon","ev","$refs","acc","state","map","item","index","changedIndex","fetchActiveempresas","then","response","catch","error","console","getFechas","alertaGenerall","verAlerta","fechasNum","info","Object","entries","forEach","entry","key","value","log","resultados","getFechasSentBBOX","respuesta","fechasArray","Array","feature","push","properties","date","reverse","getData","result","filter","parcel","String","id","fechas","porcentNubesHigh","uniqueFechas","resultado","cloudCoverPercentage","Set","toGenerar","id_enterprise","is_cooperative","modal_procesando","show","generarInforme","results","includes","enterprisesInResults","enterprise_id","uniqueEmpresas","enterprisesInResultsCoop","cooperative","enterprise","uniqueCoops","actionChangeDateRange","range","startDate","endDate","chageCapas","capa","seleccionaEmpresa","empresa","arrParcels","parcels","features","split","today","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","dateTime","getNameEnterprise","onBuscar","busqueda","toUpperCase","actionOnPagination","onSort","order","column","orden","parseFloat","mounted","beforeCreate","user","cooperative_user","isActiveLoading","isVisibleLoad"],"sources":["src/components/adminActions/GenGraficosComponent.vue"],"sourcesContent":["<template>\r\n    <div class=\"bx--grid\" @mousedown=\"keepPositionScroll\" @mouseup=\"putPositionScroll\">\r\n        <div id=\"txt-explicativo\" class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <h2>Generador de Informes <img src=\"../../assets/crop-growth.svg\" style=\"width: 40px;\"></h2>\r\n                <p>{{$t(\"adminEnterprise.info_nav\")}}</p>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <cv-select\r\n                    theme=\"\"\r\n                    :label=\"$t('map.listado_empresas')\"\r\n                    :hide-label=\"false\"\r\n                    :inline=\"false\"\r\n                    :disabled=\"false\"\r\n                    @change=\"seleccionaEmpresa\"\r\n                    v-model=\"selectValueEmpresa\"\r\n                >\r\n                    <cv-select-option :value=\"''\" disabled selected hidden>{{$t(\"map.sel_empresa\")}}</cv-select-option>\r\n                    <cv-select-optgroup label=\"Todas las Empresas\" v-if=\"is_superuser || is_systemadmin\">\r\n                        <cv-select-option :value=\"`all`\" v-if=\"is_superuser || is_systemadmin\">{{$t(\"map.most_todas_empresas\")}}</cv-select-option>\r\n                        <cv-select-option v-for=\"empresa in arrEmpresasList\" :value=\"String(empresa.id)\" v-bind:key=\"empresa.id\">\r\n                            {{empresa.name}}\r\n                        </cv-select-option>\r\n                    </cv-select-optgroup>\r\n                    <cv-select-optgroup :label=\"`Cooperativa ${cooperativa.name}`\" v-bind:key=\"cooperativa.id\" v-for=\"cooperativa in arrCooperativas\">\r\n                        <cv-select-option :value=\"`coop_${cooperativa.id}`\">{{$t(\"map.most_todas_empresas\")}}</cv-select-option>\r\n                        <cv-select-option v-for=\"empresa in getSortedCooperativa(cooperativa).enterprises\" :value=\"String(empresa.id)\"  v-bind:key=\"empresa.id\">\r\n                            {{empresa.name}}\r\n                        </cv-select-option>\r\n                    </cv-select-optgroup>\r\n                </cv-select>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col-sm-2 bx--col-md-2 bx--col-lg-2\">\r\n                <cv-progress\r\n                :initial-step=\"rowSelects.length ? selectValueCapa.length ? timeValuesArr.length ?  3 : 2 : 1 : 0\"\r\n                :steps=\"steps\"\r\n                :vertical=\"true\"></cv-progress>\r\n            </div>\r\n            <div class=\"bx--col\">\r\n                <cv-accordion @change=\"actionChangeAccordeon\" ref=\"acc\">\r\n                    <cv-accordion-item :open=\"open[0]\">\r\n                        <template slot=\"title\">Nombre de informe y Selección de Parcelas </template>\r\n                        <template slot=\"content\">\r\n                            <!-- Nombre de informe -->\r\n                            <div class=\"bx--row\">\r\n                                <div class=\"bx--col\">\r\n                                    <p style=\"font-size: 14px\">Indica a continuación el nombre que le quieres poner al informe que se va a generar.</p>\r\n                                    <br>\r\n                                    <cv-text-input\r\n                                        :label=\"$t('graficos.nombre_informe')\"\r\n                                        v-model=\"nombreInforme\"\r\n                                        :disabled=\"false\"\r\n                                    ></cv-text-input>\r\n                                </div>\r\n                            </div>\r\n                            <!-- Tabla de parcelas -->\r\n                            <br>\r\n                            <div class=\"bx--row\">\r\n                                <div class=\"bx--col\">\r\n                                    <div id=\"sentinelLayersList\">\r\n                                        <p style=\"font-size: 14px\">Selecciona a continuación las parcelas sobre las que quieres realizar la consulta. Puedes utilizar el buscador para encontrar la/s parcela/s que necesitas. Para poder ver el nombre de todas las parcelas, por favor utiliza el selector que encontrarás en la parte inferior de la tabla.</p>\r\n                                        <br>\r\n                                        <cv-data-table\r\n                                            :sortable=\"false\"\r\n                                            :pagination=\"{ \r\n                                                numberOfItems: allParcelsOfEnterprisesFilter.length, \r\n                                                pageSizes: [\r\n                                                    {\r\n                                                        value: 10,\r\n                                                        label: '10'\r\n                                                    }, \r\n                                                    {\r\n                                                        value: 15,\r\n                                                        label: '15'\r\n                                                    },\r\n                                                    {\r\n                                                        value: 20,\r\n                                                        label: '20'\r\n                                                    }, \r\n                                                    {\r\n                                                        value: 25,\r\n                                                        label: '25'\r\n                                                    }, \r\n                                                    {\r\n                                                        value: allParcelsOfEnterprisesFilter.length,\r\n                                                        label: 'Todas'\r\n                                                    }\r\n                                                ] \r\n                                            }\" \r\n                                            @pagination=\"actionOnPagination\"\r\n                                            :columns=\"[\r\n                                                {\r\n                                                    key: 'name',\r\n                                                    label: this.$t('graficos.nombre'),\r\n                                                    'sortable': false\r\n                                                },\r\n                                                {\r\n                                                    key: 'description',\r\n                                                    label: this.$t('graficos.descrip'),\r\n                                                    'sortable': false\r\n                                                },\r\n                                                {\r\n                                                    key: 'heactareas',\r\n                                                    label: this.$t('graficos.hectareas'),\r\n                                                    'sortable': false\r\n                                                },\r\n                                                {\r\n                                                    key: 'enterprise',\r\n                                                    label: 'Empresa',\r\n                                                    'sortable': false\r\n                                                },\r\n                                            ]\"\r\n                                            :title=\"$t('graficos.parcel_list')\"\r\n                                            @sort=\"onSort\"\r\n                                            v-model=\"rowSelects\"\r\n                                            ref=\"tableLstadoT2MultiCoop\"\r\n                                            searchLabel=\"Filter\" searchPlaceholder=\"Filter\" searchClearLabel=\"Clear filter\"\r\n                                        >\r\n                                            <template v-if=\"true\" slot=\"actions\">\r\n                                                <cv-search :placeholder=\"$t('graficos.buscar_nombre')\" @input=\"onBuscar\"></cv-search>\r\n                                            </template>\r\n                                            <template v-if=\"true\" slot=\"batch-actions\">\r\n                                                <cv-button>\r\n                                                    Revisa la tabla-resumen de la parte inferior para generar el Informe\r\n                                                </cv-button>  \r\n                                            </template>\r\n                                            <template slot=\"data\">\r\n                                                <cv-data-table-row\r\n                                                    v-for=\"feature in allParcelsOfEnterprisesFilter.slice(start, start+length)\"\r\n                                                    :key=\"`${feature.id}`\"\r\n                                                    :value=\"`${feature.id}`\"\r\n                                                    :aria-label-for-batch-checkbox=\"`Custom aria label for row ${feature.id} batch`\"\r\n                                                >\r\n                                                    <cv-data-table-cell>{{is_superuser ? feature.id+' - ' : ''}}{{feature.properties.name}}</cv-data-table-cell>\r\n                                                    <cv-data-table-cell>{{feature.properties.description}}</cv-data-table-cell>\r\n                                                    <cv-data-table-cell>{{feature.properties.area}}</cv-data-table-cell>\r\n                                                    <cv-data-table-cell>{{getNameEnterprise(feature.properties.enterprise_id)}}</cv-data-table-cell>\r\n                                                </cv-data-table-row>\r\n                                            </template>\r\n                                        </cv-data-table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </template>\r\n                    </cv-accordion-item>\r\n                    <cv-accordion-item :open=\"open[1]\">\r\n                        <template slot=\"title\">Selección de capas y Nubes</template>\r\n                        <template slot=\"content\" style=\"padding-right: 0\">\r\n                            <!-- Capas -->\r\n                            <div class=\"bx--row\">\r\n                                <div class=\"bx--col-sm-4 bx--col-md-4 bx--col-lg-4\">\r\n                                    <p style=\"font-size: 14px\">¿Qué información quieres consultar? Elige a continuación una de las opciones que se muestran.</p>\r\n                                    <br>\r\n                                    <cv-select :label=\"$t('graficos.sel_layer_sen')\" v-model=\"selectValueCapa\">\r\n                                        <cv-select-option value=\"NDVI\">{{$t(\"graficos.NDVI\")}}</cv-select-option>\r\n                                        <cv-select-option value=\"MOISTURE_INDEX\">{{$t(\"graficos.mostisture_index\")}}</cv-select-option>\r\n                                    </cv-select>\r\n                                </div>\r\n                                <div class=\"bx--col\">\r\n                                    <p style=\"font-size: 14px\">¿Quieres incluir detección de nubes en el informe? Esta información se verá reflejada en el informe, añadiendo una nueva imagen real y marcando en rojo la zona con cualquier tipo de nube así como el porcentaje de nubes.</p>\r\n                                    <br>\r\n                                    <cv-toggle\r\n                                        :checked=\"checked_clouds\"\r\n                                        v-model=\"checked_clouds\"\r\n                                        label=\"Incluir análisis de Nubes\"\r\n                                        value=\"check-clouds\"\r\n                                        :small=\"false\"\r\n                                        :disabled=\"false\"\r\n                                        :hide-label=\"false\">\r\n                                        <template v-if=\"true\" slot=\"text-left\">No</template>\r\n                                        <template v-if=\"true\" slot=\"text-right\">Sí</template>\r\n                                    </cv-toggle>\r\n                                </div>\r\n                            </div>\r\n                            <!-- Nubes -->\r\n                        </template>\r\n                    </cv-accordion-item>\r\n                    <cv-accordion-item :open=\"open[2]\">\r\n                        <template slot=\"title\">Selección de Fechas</template>\r\n                        <template slot=\"content\" style=\"padding-right: 0\">\r\n                            <div class=\"bx--row\">\r\n                                <div class=\"bx--col\">\r\n                                    <p style=\"font-size: 14px\">Especifica a continuación el intervalo de fechas sobre el que quieres realizar la consulta. A la hora de generar el informe se mostrarán únicamente las imágenes de fechas disponibles en Sentinel.</p>\r\n                                    <br>\r\n                                    <cv-date-picker\r\n                                        kind=\"range\"\r\n                                        :dateLabel=\"$t('graficos.fecha_incio')\"\r\n                                        :date-end-label=\"$t('graficos.fecha_fin')\"\r\n                                        :cal-options=\"calOptions\"\r\n                                        @change=\"actionChangeDateRange\"\r\n                                        :value=\"valueRange\">\r\n                                    </cv-date-picker>\r\n                                    <p style=\"font-size: 12px; color: red\" v-if=\"verErrorIntervalo\">No se ha seleccionado ningún intervalo de fechas</p>\r\n                                </div>\r\n                            </div>\r\n                            <br>\r\n                            <div class=\"bx--row\">\r\n                                <div class=\"bx--col\">\r\n                                    <p style=\"font-size: 14px\">Utilizando la siguiente opción se puede ver las fechas en las que hay fotografías dentro del intervalo de fechas escogido.</p>\r\n                                    <br>\r\n                                    <cv-date-picker\r\n                                        kind=\"single\"\r\n                                        :cal-options=\"calOptions\"\r\n                                        :dateLabel=\"`Consultar fechas disponibles`\"\r\n                                        :value=\"valueDates\"\r\n                                        placeholder=\"mm/dd/yyyy\"\r\n                                        ref=\"cambiosFechas\"\r\n                                        style=\"width: 100%!important\"\r\n                                    ></cv-date-picker>\r\n                                    <cv-button kind=\"primary\" :disabled=\"false\" v-if=\"rowSelects.length && timeValuesArr.length\" @click=\"getFechasSentBBOX()\">Consultar</cv-button>\r\n                                    <cv-inline-loading\r\n                                    :ending-text=\"`Cargado`\"\r\n                                    :error-text=\"`Error`\"\r\n                                    :loading-text=\"`Cargando..`\"\r\n                                    :loaded-text=\"`Cargando..`\"\r\n                                    :state=\"`loading`\"\r\n                                    v-if=\"verCargandoFechasBbox\"></cv-inline-loading>\r\n                                </div>\r\n                            </div>\r\n                        </template>\r\n                    </cv-accordion-item>\r\n                    <cv-accordion-item :open=\"open[3]\">\r\n                        <template slot=\"title\">Resumen de Informe</template>\r\n                        <template slot=\"content\" style=\"padding-right: 0\">\r\n                                <div class=\"bx--row\"  v-if=\"rowSelects.length\">\r\n                                    <div class=\"bx--col\">\r\n                                        <p style=\"font-size: 14px\">Puedes utilizar el botón de Ver número de imágenes para que se haga una comprobación a Sentinel de las imágenes disponibles en el intervalo de fechas seleccionado así como las fechas en las que hay imagen del satélite.</p>\r\n                                    </div>\r\n                                </div>\r\n                                <br>\r\n                                <div class=\"bx--row\">\r\n                                    <div class=\"bx--col\">\r\n                                        <p style=\"font-size: 14px; color: red\" v-if=\"disabledGenerar\">En el intervalo de fechas seleccionado no hay ninguna imagen disponible para generar. Por favor, especifica otro intervalo de fechas en la zona superior.</p>\r\n                                        <br>\r\n                                        <cv-button kind=\"primary\" v-if=\"rowSelects.length\" @click=\"getFechas()\">Ver número de imágenes</cv-button>\r\n                                        <cv-inline-loading\r\n                                        :ending-text=\"`Cargado`\"\r\n                                        :error-text=\"`Error`\"\r\n                                        :loading-text=\"`Cargando..`\"\r\n                                        :loaded-text=\"`Cargando..`\"\r\n                                        :state=\"`loading`\"\r\n                                        v-if=\"verCargandoImagenes\"></cv-inline-loading>\r\n                                        <p style=\"font-size: 14px; color: red\" v-if=\"verTimeoutNumImg\">Sentinel no ha podido procesar la previsualización de la obtención del número total de imágenes debido al volumen de datos. Esta previsualización es independiente de la generación del informe, por favor procede con la generación mediante el botón de Generar.</p>\r\n                                    </div>\r\n                                </div>\r\n                                <br>\r\n                                <div class=\"bx--row\" v-if=\"rowSelects.length\">\r\n                                    <div class=\"bx--col\">\r\n                                        <cv-data-table\r\n                                            :columns=\"[\r\n                                                    {\r\n                                                        key: 'name',\r\n                                                        label: this.$t('graficos.nombre'),\r\n                                                        'sortable': false\r\n                                                    },\r\n                                                    {\r\n                                                        key: 'imgnum',\r\n                                                        label: 'Número de Imagenes',\r\n                                                        'sortable': false\r\n                                                    },\r\n                                                    {\r\n                                                        key: 'fecha',\r\n                                                        label: 'Fechas',\r\n                                                        'sortable': false\r\n                                                    },\r\n                                                    {\r\n                                                        key: 'fecha',\r\n                                                        label: 'Max. Porcentaje Nubes Encontrado',\r\n                                                        'sortable': false\r\n                                                    }\r\n                                                ]\"\r\n                                        >\r\n                                            <template slot=\"data\">\r\n                                                <cv-data-table-row\r\n                                                    v-for=\"feature in rowSelects\"\r\n                                                    :key=\"`${feature}`\"\r\n                                                    :value=\"`${feature}`\"\r\n                                                    :aria-label-for-batch-checkbox=\"`Custom aria label for row ${feature} batch`\"\r\n                                                    v-html=\"getData(feature)\"\r\n                                                >\r\n                                                    \r\n                                                </cv-data-table-row>\r\n                                            </template>\r\n                                        </cv-data-table>\r\n                                    </div>\r\n                                </div>\r\n                                <br>\r\n                                <div class=\"bx--row\"  v-if=\"rowSelects.length\">\r\n                                    <div class=\"bx--col\">\r\n                                        <p style=\"font-size: 14px\">Tomando como base las pruebas realizadas, el tiempo estimado de procesado será el siguiente</p>\r\n                                    </div>\r\n                                </div>\r\n                                <br>\r\n                                <div class=\"bx--row\" v-if=\"rowSelects.length\">\r\n                                    <div class=\"bx--col\">\r\n                                        <div class=\"bx--grid\">\r\n                                            <cv-list :ordered=\"false\">\r\n                                                <cv-list-item>50 imágenes – 2 minutos</cv-list-item>\r\n                                                <cv-list-item>100 imágenes – 4 minutos</cv-list-item>\r\n                                                <cv-list-item>200 imágenes – 8 minutos</cv-list-item>\r\n                                                <cv-list-item>400 imágenes – 16 minutos</cv-list-item>\r\n                                            </cv-list>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <br>\r\n                                <div class=\"bx--row\">\r\n                                    <div class=\"bx--col\">\r\n                                        <cv-button kind=\"primary\" :disabled=\"disabledGenerar\" v-if=\"rowSelects.length\" @click=\"generarInforme()\">{{$t(\"graficos.generar\")}}</cv-button>\r\n                                    </div>\r\n                                </div>\r\n                        </template>\r\n                    </cv-accordion-item>\r\n                </cv-accordion>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <br>\r\n        <cv-modal ref=\"modal_procesando\">\r\n        <template slot=\"label\">{{this.$t('graficos.gen_iformes')}}</template>\r\n        <template slot=\"title\">{{this.$t('graficos.gen_iformes')}}</template>\r\n        <template slot=\"content\"\r\n            ><p>\r\n                {{this.$t('graficos.grafico_procensandose')}}\r\n            </p></template\r\n            >\r\n            <template slot=\"primary-button\">{{this.$t('graficos.gen_informes_acceptar')}}</template>\r\n        </cv-modal>\r\n        <AlertaGeneral ref=\"alertaGenerall\" :tituloAlert=\"mensajeAlerta\" :tipoAlert=\"tipoAlerta\" />\r\n    </div>\r\n</template>\r\n<script>\r\n//import {getParcelsNotSentinelInstance, postParcelsNotSentinelInstance} from '@/crudFunctions/crudSentinel.js'\r\nimport {getProfile, getPermisos} from '@/auth/index'\r\nimport {getAllEnterprises, getEnterprise, createInformes, getFechasParcelsPreCreate, getFechasParcelsBBOX, getAllActiveEnterprises} from '@/crudFunctions/crudEnterprise'//getFechasSentinelForInformes\r\nimport {getAllCooperatives, getCooperative} from '@/crudFunctions/crudCooperativas'\r\nimport AlertaGeneral from \"@/components/AlertaGeneral\";\r\nexport default {\r\n    name: 'ParcelsToSentinelComponent',\r\n    components: {\r\n        AlertaGeneral\r\n    },\r\n    data(){\r\n        return {\r\n            selectValueEmpresa: '',\r\n            //\r\n            flagIndicatingDataHasBeenLoadedInVariables: false,\r\n            //Usuario\r\n            is_superuser: false,\r\n            is_staff: false,\r\n            is_systemadmin: false,\r\n            is_enterpriseadmin: false,\r\n            is_coop_user: false,\r\n            //Empresas sel\r\n            arrEmpresas: [],\r\n            arrEmpresasList: [],\r\n            arrCooperativas: [],\r\n            allParcelsOfEnterprises: [],\r\n            allParcelsOfEnterprisesFilter: [],\r\n            activeEmpresas: [],\r\n            //\r\n            start: 0,\r\n            length: 10,\r\n            //\r\n            rowSelects: [],\r\n            selectValueCapa: '',\r\n            //\r\n            SentinelLayer: 'NDVI',\r\n            calOptions: {\r\n                \"dateFormat\": \"Y-m-d\"\r\n            },\r\n            time: ``,\r\n            valueDates: [],\r\n            valueRange: [],\r\n            timeValuesArr: [],\r\n            nombreInforme: `Gráfico - ${this.getNow()}`,\r\n            checked_clouds: false,\r\n            //\r\n            tipoAlerta: `error`,\r\n            mensajeAlerta: '',\r\n            //\r\n            fechasParcelasNumImages: {},\r\n            verCargandoImagenes: false,\r\n            //\r\n            disabledGenerar: false,\r\n            //\r\n            verErrorIntervalo: false,\r\n            verCargandoFechasBbox: false,\r\n            //\r\n            initialStep: 1,\r\n            steps: [\r\n                \"Nombre de informe y Selección de Parcelas\",\r\n                \"Selección de capas y Nubes\",\r\n                \"Selección de Fechas\",\r\n                \"Resumen de Informe\",\r\n            ],\r\n            open: [false, false, false, false],\r\n            verTimeoutNumImg: false,\r\n            scrollPosition: 0,\r\n        }\r\n    },\r\n    methods: {\r\n        keepPositionScroll(){\r\n            this.scrollPosition = window.scrollY;\r\n        },\r\n        putPositionScroll(){\r\n            setTimeout(() => {\r\n            window.scrollTo(0, this.scrollPosition);\r\n            }, 0);\r\n        },\r\n        // para ordenar las empresas de la cooperativa alfabéticamente\r\n        getSortedCooperativa(cooperativa) {\r\n            return {\r\n                ...cooperativa,\r\n                enterprises: cooperativa.enterprises.slice().sort((a, b) => {\r\n                return a.name.localeCompare(b.name);\r\n                }),\r\n            };\r\n        },\r\n        actionChangeAccordeon(ev){\r\n            this.open = this.$refs.acc.state.map((item, index) => index === ev.changedIndex);\r\n        },\r\n        fetchActiveempresas(){\r\n            getAllActiveEnterprises()\r\n                .then(response => {\r\n                    this.activeEmpresas = response.data;  // Asigna las empresas activas a tu variable de datos\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error al obtener empresas activas:', error);\r\n                });\r\n        },\r\n        getFechas(){\r\n            this.verTimeoutNumImg = false\r\n            if(this.timeValuesArr.length === 0){\r\n                this.mensajeAlerta = 'No se ha seleccionado ningún intervalo de fechas'\r\n                this.tipoAlerta = 'error'\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                this.verErrorIntervalo = true\r\n                return false\r\n            }\r\n            this.verCargandoImagenes = true\r\n            let fechasNum = 0\r\n            getFechasParcelsPreCreate(this.rowSelects, this.timeValuesArr)\r\n            .then(response => {\r\n                console.info(response.data)\r\n                this.fechasParcelasNumImages = response.data\r\n                //getFechasSentinelForInformes(response.data.toString())\r\n                //.then(response => {console.info(response.data)})\r\n                /*\r\n                \r\n                */\r\n\r\n                this.verCargandoImagenes = false\r\n                console.info(response.data, Object.entries(response.data))\r\n                Object.entries(response.data).forEach(entry => {\r\n                    const [key, value] = entry;\r\n                    console.log(key, value);\r\n                    fechasNum = fechasNum + value.resultados.length\r\n                });\r\n                if(fechasNum === 0){\r\n                    this.disabledGenerar = true\r\n                }else{\r\n                    this.disabledGenerar = false\r\n                }\r\n            })\r\n            .catch(() => {this.verCargandoImagenes = false; this.verTimeoutNumImg = true})\r\n            \r\n        },\r\n        getFechasSentBBOX(){\r\n            this.verCargandoFechasBbox = true\r\n            getFechasParcelsBBOX(this.rowSelects, this.timeValuesArr)\r\n            .then(response => {\r\n                console.info(response.data)\r\n\r\n                const respuesta = response.data\r\n                    const fechasArray = Array()\r\n                    respuesta.forEach(feature =>{\r\n                        fechasArray.push(feature.properties.date)\r\n                    })\r\n                    this.valueDates = fechasArray.reverse()\r\n                /*\r\n                getFechasSentinelForInformes(response.data.toString())\r\n                .then(response => {\r\n                    \r\n                })\r\n                */\r\n                this.verCargandoFechasBbox = false\r\n            })\r\n            .catch(() => this.verCargandoFechasBbox = false)\r\n            \r\n            \r\n        },\r\n        getData(feature){\r\n            const result = this.allParcelsOfEnterprisesFilter.filter(parcel => feature == (String(parcel.id)))\r\n            const fechas = []\r\n            let porcentNubesHigh = 0\r\n            let uniqueFechas = []\r\n            if(this.fechasParcelasNumImages[feature]){\r\n                this.fechasParcelasNumImages[feature].resultados.map(resultado => {\r\n                    if(resultado.properties.cloudCoverPercentage > porcentNubesHigh){\r\n                        porcentNubesHigh = resultado.properties.cloudCoverPercentage \r\n                    }\r\n                    fechas.push(resultado.properties.date)\r\n                })\r\n                uniqueFechas = [...new Set(fechas)];\r\n            }\r\n            \r\n            return `<td>${result[0].properties.name}</td>\r\n            <td>${this.fechasParcelasNumImages[feature] ? uniqueFechas.length : ''}</td>\r\n            <td>${this.fechasParcelasNumImages[feature] ? uniqueFechas : ''}</td>\r\n            <td>${this.checked_clouds ? this.fechasParcelasNumImages[feature] ? porcentNubesHigh +'%' : '' : 'n/a'}</td>`\r\n            \r\n        },\r\n        toGenerar(id_enterprise, is_cooperative){\r\n            if(!this.nombreInforme){\r\n                this.mensajeAlerta = 'El campo Nombre de Informe no debe estar vacío'\r\n                this.tipoAlerta = 'error'\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                return false\r\n            }\r\n            if(this.timeValuesArr.length === 0){\r\n                this.mensajeAlerta = 'No se ha seleccionado ningún intervalo de fechas'\r\n                this.tipoAlerta = 'error'\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                this.verErrorIntervalo = true\r\n                return false\r\n            }\r\n            if(this.selectValueCapa.length === 0){\r\n                this.mensajeAlerta = 'No se ha seleccionado ninguna capa de Sentinel'\r\n                this.tipoAlerta = 'error'\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                this.verErrorIntervalo = true\r\n                return false\r\n            }\r\n            createInformes(this.nombreInforme, this.selectValueCapa, this.timeValuesArr, this.rowSelects, is_cooperative, id_enterprise, this.checked_clouds)\r\n            .then(() => {\r\n                this.$refs.modal_procesando.show()\r\n            })\r\n            \r\n        },\r\n        generarInforme(){\r\n            const results = this.allParcelsOfEnterprisesFilter.filter(parcel => this.rowSelects.includes(String(parcel.id)))\r\n            const enterprisesInResults = []\r\n            results.map(result => {\r\n                enterprisesInResults.push(result.properties.enterprise_id)\r\n            })\r\n            console.info('Resultados empresa => ',enterprisesInResults)\r\n            const uniqueEmpresas = [...new Set(enterprisesInResults)]\r\n            console.info('Unificamos empresa => ',uniqueEmpresas)\r\n            if(uniqueEmpresas.length > 1){\r\n                //*Es multiempresa\r\n                console.info('Seleccion Multiempresa')\r\n                //Comprobar si es cooperativa\r\n                const enterprisesInResultsCoop = []\r\n                this.arrCooperativas.map(cooperative => {\r\n                    cooperative.enterprises.map(enterprise => {\r\n                        if(uniqueEmpresas.includes(enterprise.id)){\r\n                            enterprisesInResultsCoop.push(cooperative.id)\r\n                        }\r\n                    })\r\n                })\r\n                console.info('Resultado Cooperativas => ',enterprisesInResultsCoop)\r\n                if(enterprisesInResultsCoop.length == uniqueEmpresas.length){\r\n                    console.info('Todas las empresas Pertenecen a cooperativas')\r\n                    const uniqueCoops = [...new Set(enterprisesInResultsCoop)]\r\n                    if(uniqueCoops.length > 1){\r\n                        console.info('MultiCoop')\r\n                        console.info('Cooperativas', uniqueCoops)\r\n                        console.info('No se puede generar el informe, parcelas de distintas Cooperativas')\r\n                        this.mensajeAlerta = 'No se puede generar el informe, parcelas seleccionadas de distintas Cooperativas'\r\n                        this.tipoAlerta = 'error'\r\n                        this.$refs.alertaGenerall.verAlerta()\r\n                    }else{\r\n                        console.info('UniCoop')\r\n                        console.info('Cooperativa', uniqueCoops)\r\n                        this.toGenerar(uniqueCoops[0], true)\r\n                    }\r\n                }else{\r\n                    console.info('No se puede generar el informe, Hay una empresa que no pertenece a ninguna cooperativa')\r\n                    this.mensajeAlerta = 'No se puede generar el informe, en la selección hay parcelas que no pertenecen a ninguna cooperativa'\r\n                    this.tipoAlerta = 'error'\r\n                    this.$refs.alertaGenerall.verAlerta()\r\n                }\r\n            }else{\r\n                console.info('Seleccion Uniempresa')\r\n                this.toGenerar(uniqueEmpresas[0], false)\r\n            }\r\n        },\r\n        actionChangeDateRange(range){\r\n            this.disabledGenerar = false\r\n            this.verErrorIntervalo = false\r\n            console.info(range)\r\n            this.timeValuesArr = [range.startDate, range.endDate]\r\n            console.info(this.timeValuesArr)\r\n            this.time = `${range.startDate}/${range.endDate}`\r\n        },\r\n        chageCapas(capa){\r\n            this.SentinelLayer = capa\r\n        },\r\n        seleccionaEmpresa(empresa){\r\n            const arrParcels = []\r\n            if(empresa == 'all'){\r\n                getAllEnterprises()\r\n                    .then(async response => {\r\n                        response.data.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.arrEmpresas = response.data\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n            }else{\r\n                const result = empresa.split('_')\r\n                if(result[0] == 'coop'){\r\n                    getCooperative(result[1])\r\n                    .then(response => {\r\n                        response.data.enterprises.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.arrEmpresas = response.data.enterprises\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n                }else{\r\n                    getEnterprise(empresa)\r\n                    .then(async response => {\r\n                        response.data.parcels.features.map(parcel => {\r\n                            arrParcels.push(parcel)\r\n                        })\r\n                        this.arrEmpresas = [response.data]\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        getNow() {\r\n            const today = new Date();\r\n            const date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n            const time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n            const dateTime = date +' '+ time;\r\n            //this.timestamp = dateTime;\r\n            console.info(dateTime)\r\n            return date\r\n        },\r\n        getNameEnterprise(value){\r\n            const result = this.arrEmpresas.filter(enterprise => enterprise.id == value)\r\n            return result[0].name\r\n        },\r\n        onBuscar(busqueda){\r\n            if(busqueda){\r\n                const result = this.allParcelsOfEnterprises.filter(parcel => parcel.properties.name.toUpperCase().includes(busqueda.toUpperCase()))\r\n                this.allParcelsOfEnterprisesFilter = result\r\n            }else{\r\n                this.allParcelsOfEnterprisesFilter = this.allParcelsOfEnterprises\r\n            }\r\n        },\r\n        actionOnPagination(ev){\r\n            this.start = ev.start-1\r\n            this.length = ev.length\r\n        },\r\n        onSort(order) {\r\n            const index = order.index\r\n            let column = ``\r\n            const orden = order.order\r\n            \r\n            switch (index) {\r\n                case '0':\r\n                    column = `name`\r\n                    break\r\n                case '1':\r\n                    column = `name`\r\n                    break\r\n                case '2':\r\n                    column = 'area'\r\n                    break\r\n                case '3':\r\n                    column = 'enterprise'\r\n                    break\r\n                default:\r\n                    column = `name`\r\n            }\r\n            if(orden == 'ascending'){\r\n                this.allParcelsOfEnterprisesFilter.sort((a, b) => parseFloat(a.name) - parseFloat(b.name));\r\n            }\r\n            console.info(column)\r\n        },\r\n    },\r\n    mounted: function () {\r\n        console.info(this.$refs.acc)\r\n        this.getNow()\r\n        this.fetchActiveempresas();\r\n        //console.info('User Logged')\r\n    },\r\n    beforeCreate(){\r\n        getProfile()\r\n        .then(response => {\r\n            const user = response.data[0]\r\n            getPermisos(response.data[0].user)\r\n            .then(response => {\r\n                this.is_superuser = response.data.is_superuser\r\n                this.is_staff = response.data.is_staff\r\n                this.is_systemadmin = response.data.is_systemadmin\r\n                this.is_enterpriseadmin = response.data.is_enterpriseadmin\r\n                this.is_coop_user = user.cooperative_user\r\n                /*\r\n                //*Obtenemos la empresa del usuario\r\n                const enterprise_id = user.enterprise_id\r\n                getEnterprise(enterprise_id)\r\n                .then(async response => {\r\n                    this.parcelas = response.data.parcels\r\n                    await this.arrEmpresas.push(response.data)\r\n                    this.flagIndicatingDataHasBeenLoadedInVariables = false\r\n                    this.timestamp()\r\n                })\r\n                */\r\n                \r\n                if(this.is_superuser || this.is_systemadmin){\r\n                    console.info('entra')\r\n                    getAllActiveEnterprises()\r\n                    .then(async response => {\r\n                        this.arrEmpresas = response.data\r\n                        //this.arrEmpresasList = response.data\r\n                        this.arrEmpresasList = response.data.slice().sort((a, b) => {\r\n                            return a.name.localeCompare(b.name);\r\n                        });\r\n                        \r\n                        const arrParcels = []\r\n                        response.data.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                }else if((this.is_enterpriseadmin || this.is_staff) && !this.is_coop_user){ \r\n                    getEnterprise(user.enterprise_id)\r\n                    .then(async response => {\r\n                        this.arrEmpresas = [response.data]\r\n                        this.arrEmpresasList = [response.data]\r\n                        const arrParcels = []\r\n                        response.data.parcels.features.map(parcel => {\r\n                            arrParcels.push(parcel)\r\n                        })\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                }else if(this.is_coop_user){\r\n                    getCooperative(user.enterprise_id)\r\n                    .then(response => {\r\n                        this.arrCooperativas = [response.data]\r\n                        //this.arrEmpresas = response.data.enterprises\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                }\r\n\r\n                if(this.is_superuser || this.is_systemadmin){\r\n                    getAllCooperatives()\r\n                    .then(async response => {\r\n                        this.arrCooperativas = response.data\r\n                    })\r\n                }\r\n                this.isActiveLoading = false\r\n                this.isVisibleLoad = false\r\n            })\r\n        })\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n    .bx--accordion__content{\r\n        padding-right: 0px!important;\r\n    }\r\n</style>"],"mappings":"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","ignoreList":[]}]}