{"remainingRequest":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\src\\components\\MapComponent4.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\src\\components\\MapComponent4.vue","mtime":1652784450691},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MapComponent4.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <cv-loading\r\n            :small=\"true\"\r\n            :active=\"true\"\r\n            :overlay=\"false\" v-if=\"true\" id=\"cargando\"></cv-loading>\r\n        <vl-map\r\n            :load-tiles-while-animating=\"false\"\r\n            :load-tiles-while-interacting=\"false\"\r\n            data-projection=\"EPSG:4326\"\r\n            style=\"height: 400px\"\r\n            id=\"map\"\r\n            class=\"mapa\"\r\n            ref=\"map\"\r\n            \r\n        >\r\n            <vl-view :zoom.sync=\"zoom\" :center=\"center\"></vl-view> \r\n            \r\n            \r\n\r\n            \r\n            <vl-layer-tile :id=\"`wmts_${enterprise.id}`\" :opacity=\"opacitylayer\" v-bind:key=\"`${enterprise.id}_layers_${timestampSentinel}`\" v-for=\"enterprise in arrEmpresas\" :z-index=\"2\">\r\n                <vl-source-wms\r\n                    v-if=\"enterprise.parcels.features.length\"\r\n                    :key=\"`${enterprise.id}_${timestampSentinel}`\" \r\n                    :url=\"`${urlSentinel}${enterprise.sentinel_instance}/?MAXCC=100&v=${timestampSentinel}&`\"\r\n                    :urlProcessingApi=\"`${urlSentinel}${enterprise.sentinel_instance}/?MAXCC=100&&v=${timestampSentinel}&`\"\r\n                    maxcc=\"100\"\r\n                    :minZoom=\"minZoom\"\r\n                    :maxZoom=\"maxZoom\"\r\n                    :preset=\"preset\"\r\n                    :layers=\"SentinelLayer\"\r\n                    :time.sync=\"time\"\r\n                    :serverType=\"serverType\"\r\n                    :opacity=\"opacitylayer\"\r\n                    :transition='transition'\r\n                    :tiled = false\r\n                />\r\n            </vl-layer-tile>\r\n            \r\n            <vl-layer-vector v-for=\"enterprise in arrEmpresas\" v-bind:key=\"`${enterprise.id}_1_${timestamp}`\" :z-index=\"3\">\r\n                <vl-source-vector ref=\"drawTarget\" v-if=\"enterprise.parcels\" :features=\"enterprise.parcels.features\" />\r\n                <vl-style-func :factory=\"pointsStyleFunc\" />\r\n            </vl-layer-vector>\r\n            \r\n            <vl-interaction-select v-if=\"verCrearParcel\" :id=\"`modify_target_${timestamp}`\" ref=\"selectInteraction\" ident=\"modify-target\" @select=\"selecionaPolygon\" :key=\"timestampSentinel\"></vl-interaction-select>\r\n            <vl-interaction-modify v-if=\"verCrearParcel\" source=\"modify-target\" @modifyend=\"editado\"></vl-interaction-modify>\r\n            \r\n            <vl-layer-vector :z-index=\"4\" v-bind:key=\"`the_source_indent_${timestampDrawPolygon}`\">\r\n                <vl-source-vector ident=\"the-source\" :features.sync=\"featuresNewPolygon\"></vl-source-vector>\r\n                <vl-style-box>\r\n                    <vl-style-stroke color=\"green\"></vl-style-stroke>\r\n                    <vl-style-fill color=\"rgba(255,255,255,0.5)\"></vl-style-fill>\r\n                </vl-style-box>\r\n            </vl-layer-vector>\r\n\r\n            <vl-interaction-draw v-bind:key=\"`the_source_${timestampDrawPolygon}`\" type=\"Polygon\" source=\"the-source\" v-if=\"!verCrearParcel && !verCrearParcelDraw\" @drawend=\"terminadoNewPolygon\"></vl-interaction-draw>\r\n\r\n            <vl-feature v-if=\"!olcultarInconoUbi\">\r\n                <vl-geom-point :coordinates.sync=\"coordenadasPunto\"></vl-geom-point>\r\n                <vl-style-box>\r\n                    <vl-style-icon src=\"https://d4smartfarming.smartbits-es.com/imgMail/icono-mapa.png\"></vl-style-icon>\r\n                </vl-style-box>\r\n            </vl-feature>\r\n            \r\n            <vl-layer-tile id=\"bingmaps\">\r\n                <vl-source-bingmaps :api-key=\"apiKeyBing\" :imagery-set=\"imagerySetBing\" :maxZoom=\"maxZoomBing\"></vl-source-bingmaps>\r\n            </vl-layer-tile>\r\n            \r\n        </vl-map>\r\n        \r\n        <template v-if=\"flagIndicatingDataHasBeenLoadedInVariables\">\r\n            <ControllerPanel\r\n                v-if=\"!isMobile()\"\r\n                :username=\"name\" \r\n                :arr-enterprises=\"arrEmpresas4List\"\r\n                :arr-cooperativas=\"arrCooperativas\"\r\n                :is_superuser=\"is_superuser\"\r\n                :is_systemadmin=\"is_systemadmin\"\r\n                :is_staff=\"is_staff\"\r\n                :is_enterpriseadmin=\"is_enterpriseadmin\"\r\n                :is_coop_user=\"is_coop_user\"\r\n                :checked-toggle-mostar-texto=\"checkedToggleMostarTexto\"\r\n                :layers-selector=\"layersSelector\"\r\n                :map-component=\"$refs.map.$map\"\r\n                :all-parcels-of-enterprises=\"allParcelsOfEnterprises\"\r\n                :all-parcels-of-enterprises-filter=\"allParcelsOfEnterprisesFilter\"\r\n                :sentinel-layer=\"SentinelLayer\"\r\n\r\n                v-on:setCenter=\"center = $event\"  \r\n                v-on:setCenterLocation=\"coordenadasPunto = $event\"  \r\n                v-on:setToggleMostrarTexto=\"checkedToggleMostarTexto = $event, getNow()\"\r\n                v-on:setEnterprise=\"arrEmpresas = $event, getNow(), arrEmpresas4List = $event\"\r\n                v-on:setSentinelLayer=\"getNowSentinel(), SentinelLayer = $event\"\r\n                v-on:setSentinelClearCache=\"getNowSentinel()\"\r\n                v-on:setSentinelOpacity=\"opacitylayer = $event\"\r\n                v-on:setFechaSentinel=\"time = $event\"\r\n                v-on:setAllParcelsOfEnterprises=\"allParcelsOfEnterprises = $event, allParcelsOfEnterprisesFilter = $event\"\r\n                v-on:setAllParcelsOfEnterprisesFilter=\"allParcelsOfEnterprisesFilter = $event\"\r\n                v-on:setOcultarInconoUbi=\"olcultarInconoUbi = $event\"\r\n            />\r\n            <ControllerPanel4Mobile\r\n                v-if=\"isMobile()\"\r\n                :username=\"name\" \r\n                :arr-enterprises=\"arrEmpresas4List\"\r\n                :arr-cooperativas=\"arrCooperativas\"\r\n                :is_superuser=\"is_superuser\"\r\n                :is_systemadmin=\"is_systemadmin\"\r\n                :checked-toggle-mostar-texto=\"checkedToggleMostarTexto\"\r\n                :layers-selector=\"layersSelector\"\r\n                :map-component=\"$refs.map.$map\"\r\n                :all-parcels-of-enterprises=\"allParcelsOfEnterprises\"\r\n                :all-parcels-of-enterprises-filter=\"allParcelsOfEnterprisesFilter\"\r\n                :sentinel-layer=\"SentinelLayer\"\r\n\r\n                v-on:setCenter=\"center = $event\"  \r\n                v-on:setToggleMostrarTexto=\"checkedToggleMostarTexto = $event, getNow()\"\r\n                v-on:setEnterprise=\"arrEmpresas = $event, getNow(), arrEmpresas4List = $event\"\r\n                v-on:setSentinelLayer=\"getNowSentinel(), SentinelLayer = $event\"\r\n                v-on:setSentinelClearCache=\"getNowSentinel()\"\r\n                v-on:setSentinelOpacity=\"opacitylayer = $event\"\r\n                v-on:setFechaSentinel=\"time = $event\"\r\n                v-on:setAllParcelsOfEnterprises=\"allParcelsOfEnterprises = $event, allParcelsOfEnterprisesFilter = $event\"\r\n                v-on:setAllParcelsOfEnterprisesFilter=\"allParcelsOfEnterprisesFilter = $event\"\r\n            />\r\n            <ControllerQuickEdit \r\n                v-if=\"ifQuickEdit && !is_coop_user && !is_staff\"\r\n                :parcel-selected=\"parcelSelected\"\r\n                :error-draw-msg=\"errorDrawMsg\"\r\n                :ver-error-draw=\"verErrorDraw\"\r\n                :coordinates-poly=\"coordinatesPoly\"\r\n                :value-name=\"valueName\"\r\n                :value-desc=\"valueDesc\"\r\n                :arr-enterprises=\"arrEmpresas\"\r\n                :arr-cooperativas=\"arrCooperativas\"\r\n                :area-for-new-polygon=\"areaForNewPolygon\"\r\n\r\n                v-on:setcoordinatesPoly=\"coordinatesPoly = $event, featuresNewPolygon = []\"\r\n                v-on:setifQuickEdit=\"ifQuickEdit = $event\"\r\n                v-on:setverErrorDraw=\"verErrorDraw = $event\"\r\n                v-on:setSentinelClearCache=\"getNowSentinel()\"\r\n                v-on:setClearParcels=\"getNow()\"\r\n                v-on:setEnterprise=\"arrEmpresas = $event, getNow(), arrEmpresas4List = $event\"\r\n                v-on:setAllParcelsOfEnterprises=\"allParcelsOfEnterprises = $event, allParcelsOfEnterprisesFilter = $event\"\r\n\r\n            />\r\n            <ControllerGoogleSearch\r\n                v-on:setCenter=\"center = $event, coordenadasPunto = $event\"  \r\n            />\r\n            \r\n            <ControllerQuickCreate \r\n                v-if=\"!ifQuickEdit && !is_coop_user && !is_staff\"\r\n                :ver-crear-parcel=\"verCrearParcel\"\r\n                :error-draw-msg=\"errorDrawMsg\"\r\n                :ver-error-draw=\"verErrorDraw\"\r\n                :coordinates-poly=\"coordinatesPoly\"\r\n                :arr-enterprises=\"arrEmpresas4List\"\r\n                :arr-enterprises-selected=\"empresaSelForCreateParcel ? empresaSelForCreateParcel : arrEmpresas\"\r\n                :arr-cooperativas=\"arrCooperativas\"\r\n                :is_superuser=\"is_superuser\"\r\n                :is_systemadmin=\"is_systemadmin\"\r\n                :area-for-new-polygon=\"areaForNewPolygon\"\r\n                :user=\"user\"\r\n\r\n                v-on:setVerCrearParcel=\"verCrearParcel = $event\"\r\n                v-on:setverErrorDraw=\"verErrorDraw = $event\"\r\n                v-on:setEnterpriseSelect=\"empresaSelForCreateParcel = $event\"\r\n                v-on:setClearFeatures=\"featuresNewPolygon = []\"\r\n                v-on:setVerCrearParcelDraw=\"verCrearParcelDraw = $event\"\r\n                v-on:clearCacheDraw=\"getNowRefreshDrawPolygon()\"\r\n                v-on:setSentinelClearCache=\"getNowSentinel()\"\r\n                v-on:setcoordinatesPoly=\"coordinatesPoly = $event, featuresNewPolygon = []\"\r\n                v-on:setEnterprise=\"arrEmpresas = $event, getNow(), arrEmpresas4List = $event\"\r\n                v-on:setAllParcelsOfEnterprises=\"allParcelsOfEnterprises = $event, allParcelsOfEnterprisesFilter = $event\"\r\n            />\r\n        </template>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {getProfile, getPermisos} from '@/auth/index'\r\nimport {getAllEnterprises, getLayersFromSentinel, getEnterprise} from '@/crudFunctions/crudEnterprise'//getEnterprise\r\nimport {getAllCooperatives, getCooperative} from '@/crudFunctions/crudCooperativas'\r\nimport ControllerPanel from '@/components/mapController/ControllerPanel.vue'\r\nimport ControllerPanel4Mobile from '@/components/mapController/ControllerPanel4Mobile.vue'\r\nimport ControllerQuickEdit from '@/components/mapController/ControllerQuickEdit.vue'\r\nimport ControllerGoogleSearch from '@/components/mapController/ControllerGoogleSearch.vue'\r\nimport ControllerQuickCreate from '@/components/mapController/ControllerQuickCreate.vue'\r\nimport {checkValidPolygon} from '@/crudFunctions/crudEnterprise'\r\nimport proj4 from 'proj4'\r\nimport Style from 'ol/style/Style'\r\nimport Text from 'ol/style/Text'\r\nimport Fill from 'ol/style/Fill'\r\nimport Stroke from 'ol/style/Stroke'\r\nimport L from 'leaflet'\r\nimport { getArea } from 'ol/sphere';\r\nimport axios from 'axios'\r\n//import Polygon from 'ol/geom/Polygon'\r\nexport default {\r\n    name: 'MapComponent4',\r\n    components: {ControllerPanel, ControllerQuickEdit, ControllerGoogleSearch,ControllerPanel4Mobile, ControllerQuickCreate\r\n    },\r\n    data() {\r\n        return {\r\n            flagIndicatingDataHasBeenLoadedInVariables: false,\r\n            //Usuario\r\n            is_superuser: false,\r\n            is_staff: false,\r\n            is_systemadmin: false,\r\n            is_enterpriseadmin: false,\r\n            is_coop_user: false,\r\n            //BingMap\r\n            apiKeyBing: this.$apiKeyBing,\r\n            imagerySetBing: `AerialWithLabels`,\r\n            zoom: 15,\r\n            center: [-3.8225970954841486, 40.28385074244977 ],\r\n            maxZoomBing: 20,\r\n            isActiveLoading: false,\r\n            isVisibleLoad: false,\r\n            name: 'pruebas',\r\n            //Parcelas\r\n            parcelas: {},\r\n            //Empresas sel\r\n            arrEmpresas: [],\r\n            arrCooperativas: [],\r\n            arrEmpresas4List: [],\r\n            //Sentinel layer tile controller\r\n            urlSentinel: `${this.$sentinelURL}/ogc/wms/`,\r\n            minZoom:6,\r\n            maxZoom:16,\r\n            preset:'AGRICULTURE',\r\n            layers:'AGRICULTURE',\r\n            time:`2019-01-01/${this.getNow()}`,\r\n            serverType: 'geoserver',\r\n            opacitylayer: 0.5,\r\n            transition: 0,\r\n            SentinelLayer: 'AGRICULTURE',\r\n            timestamp: 0,\r\n            timestampSentinel: 0,\r\n            timestampDrawPolygon: 0,\r\n            checkedToggleMostarTexto: false,\r\n            layersSelector: [],\r\n            //ModificarParcela\r\n            keyModificar: 0,\r\n            allParcelsOfEnterprises: [],\r\n            allParcelsOfEnterprisesFilter: [],\r\n            //if\r\n            ifQuickEdit: false,\r\n            //\r\n            parcelSelected: Object,\r\n            verErrorDraw: false,\r\n            errorDrawMsg: '',\r\n            coordinatesPoly: '',\r\n            //Crear Parcela\r\n            featuresNewPolygon: [],\r\n            verCrearParcel: true,\r\n            verCrearParcelDraw: false,\r\n            empresaSelForCreateParcel: '',\r\n            refreshDibujo: 0,\r\n            //editarParcel\r\n            valueDesc: '',\r\n            valueName: '',\r\n            areaForNewPolygon: 0,\r\n            //\r\n            user: '',\r\n            coordenadasPunto: [0, 0],\r\n            olcultarInconoUbi: false\r\n        }\r\n    },\r\n    methods: {\r\n        isMobile() {\r\n            if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        },\r\n        getNowSentinel() {\r\n            const today = new Date();\r\n            const date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n            const time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n            const dateTime = date +' '+ time;\r\n            this.timestampSentinel = dateTime;\r\n        },\r\n        getNowRefreshDrawPolygon() {\r\n            const today = new Date();\r\n            const date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n            const time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n            const dateTime = date +' '+ time;\r\n            this.timestampDrawPolygon = dateTime;\r\n        },\r\n        getNow() {\r\n            const today = new Date();\r\n            const date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n            const time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n            const dateTime = date +' '+ time;\r\n            this.timestamp = dateTime;\r\n        },\r\n        pointsStyleFunc(){\r\n            return feature => {\r\n                let baseStyle = new Style({\r\n                    fill: new Fill({\r\n                        color: \"rgba(255,255,255,0.0)\",\r\n                    }),\r\n                    stroke: new Stroke({\r\n                        color: \"rgba(0, 0, 255, 1)\",\r\n                        with: 5\r\n                    }),\r\n                    text: new Text({\r\n                        overflow: this.checkedToggleMostarTexto,\r\n                        text: `${feature.get('name')} \\n ${feature.get('description') ? feature.get('description') : ''} \\n ${feature.get('area') ? feature.get('area').toFixed(2)+'Ha' : '' } / ${feature.get('area') ? this.metricaparcela(feature.get('area'))+'Acre' : '' }`,\r\n                        font: \"14px IBM Plex Sans\",\r\n                        fill: new Fill({\r\n                            //color: \"#161616\",\r\n                            color: \"#FFFFFF\",\r\n                        }),\r\n                        stroke: new Stroke({\r\n                            color: \"#161616\",\r\n                            width: 4.5\r\n                        }),\r\n                    }),\r\n                })\r\n                return [\r\n                    baseStyle,\r\n                ]\r\n            }\r\n        },\r\n        metricaparcela(area){\r\n            const onehecttoAcre = 2.4710538146717\r\n            const acre = onehecttoAcre * area\r\n            this.metric = \"Acre\"\r\n            return  acre.toFixed(2)\r\n        \r\n        },\r\n\r\n        selecionaPolygon(po){\r\n            this.ifQuickEdit = true\r\n            this.coordinatesPoly = ''\r\n            this.verErrorDraw = true\r\n            this.verErrorDraw = true\r\n            const result = this.allParcelsOfEnterprises.filter(parcel => parcel.id == po.id_)\r\n            this.parcelSelected = result[0]\r\n            const coordenadasGeometricas = po.getGeometry().getExtent()\r\n            const ex = coordenadasGeometricas[0] + (coordenadasGeometricas[2]-coordenadasGeometricas[0])/2;\r\n            const ye = coordenadasGeometricas[1] + (coordenadasGeometricas[3]-coordenadasGeometricas[1])/2;\r\n            var source = new proj4.Proj('EPSG:3785'); \r\n            var dest = new proj4.Proj('EPSG:4326');  \r\n            const newCenter = proj4(source, dest, [ex, ye])\r\n            this.center = [newCenter[0], newCenter[1]]\r\n            const enterprise_id = po.values_.enterprise_id\r\n            this.valueName = po.values_.name\r\n            this.valueDesc = po.values_.description\r\n            this.comprobarCoordenadas(po.getGeometry().getCoordinates(), enterprise_id, po.id_)\r\n        },\r\n        terminadoNewPolygon(p){\r\n            console.info(p)\r\n            this.verCrearParcelDraw = true\r\n            this.areaForNewPolygon = (Math.round((getArea(p.feature.getGeometry())/ 10000) * 10000) / 10000)\r\n            const coordinatesEditadas = p.feature.getGeometry().getCoordinates()\r\n            this.comprobarCoordenadas(coordinatesEditadas, (this.empresaSelForCreateParcel ? this.empresaSelForCreateParcel[0].id : this.arrEmpresas[0].id), 0)\r\n        },\r\n        editado(p){\r\n            const enterprise_id = p.features.array_[0].values_.enterprise_id\r\n            const coordinatesEditadas = p.features.array_[0].getGeometry().getCoordinates()\r\n            this.areaForNewPolygon = (Math.round((getArea(p.features.array_[0].getGeometry())/ 10000) * 10000) / 10000)\r\n            //const area = (Math.round((getArea(p.features.array_[0].getGeometry()) / 10000) * 10000) / 10000)\r\n            this.comprobarCoordenadas(coordinatesEditadas, enterprise_id, p.features.array_[0].id_)\r\n            //if(this.parcelaSeleccionada){\r\n                //this.coordinatesBuenas(this.coordinatesEditadas)\r\n            //}\r\n            \r\n            //this.verErrorDraw = false\r\n        },\r\n        getBBOX(parcel){\r\n            const polygon = L.polygon(parcel.geometry.coordinates)\r\n\r\n            const bboxP = `${polygon.getBounds()._northEast.lng},${polygon.getBounds()._northEast.lat},${polygon.getBounds()._southWest.lng},${polygon.getBounds()._southWest.lat}`\r\n            return bboxP\r\n        },\r\n        getBBOX2(parcel){\r\n            const polygon = L.polygon(parcel.geometry.coordinates)\r\n\r\n            const bboxP = [polygon.getBounds()._northEast.lng,polygon.getBounds()._northEast.lat,polygon.getBounds()._southWest.lng,polygon.getBounds()._southWest.lat]\r\n            return bboxP\r\n        },\r\n        comprobarCoordenadas(coords, enterprise, idParcela){\r\n            var source = new proj4.Proj('EPSG:3785'); \r\n            var dest = new proj4.Proj('EPSG:4326'); \r\n            let newCenter = Array;\r\n            let polygonObject= 'POLYGON(('\r\n            for (var i = 0; i < coords[0].length; i++) {\r\n                newCenter = proj4(source, dest, [coords[0][i][0], coords[0][i][1]])\r\n                polygonObject += newCenter[0]+' '+newCenter[1]\r\n                if(i != (coords[0].length-1)){\r\n                    polygonObject += ', '\r\n                }\r\n            }\r\n            polygonObject += '))';\r\n\r\n            checkValidPolygon(polygonObject, enterprise)\r\n            .then(response => {\r\n                if(response.data.features.length){\r\n                    const result = response.data.features.filter(feature => {\r\n                        if(feature.id != idParcela){\r\n                            return feature\r\n                        }\r\n                    })\r\n                    if(result.length){\r\n                        let parcelsName = ''\r\n                        result.map(resultado => {\r\n                            parcelsName += resultado.properties.name + ' '\r\n                        })\r\n                        this.errorDrawMsg = this.$t('map.parcela_solapada_con') + '' + parcelsName\r\n                        this.verErrorDraw = true\r\n                        this.coordinatesPoly = ''\r\n                    }else{\r\n                        this.verErrorDraw = false\r\n                        this.errorDrawMsg = ''\r\n                        this.coordinatesPoly = polygonObject\r\n                        this.compruebaParcelaSimple(polygonObject)\r\n                    }\r\n                }else{\r\n                    this.verErrorDraw = false\r\n                    this.errorDrawMsg = ''\r\n                    this.coordinatesPoly = polygonObject\r\n                    this.compruebaParcelaSimple(polygonObject)\r\n                }\r\n            })\r\n        },\r\n        compruebaParcelaSimple(polygonObject){\r\n            let path = `${this.$apiURL}/parcel_valid/?polygon=${polygonObject}`;\r\n            axios.defaults.headers.common['Authorization'] = \"Bearer \"+sessionStorage.getItem(\"apiAccess\")\r\n            axios\r\n            .get(path)\r\n            .then(response=>{\r\n                if(response.data == \"False\"){\r\n                    this.errorDrawMsg = this.$t('map.parcela_solapada_misma')\r\n                    this.verErrorDraw = true\r\n                }else{\r\n                    this.verErrorDraw = false\r\n                    this.errorDrawMsg = ''\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n        },\r\n    },\r\n    mounted: function () {\r\n        \r\n        //console.info('User Logged')\r\n    },\r\n    beforeCreate(){\r\n        this.isActiveLoading = false\r\n        this.isVisibleLoad = false\r\n        //* 1 - Obtenemos la info del usuario, a que empresa pertenece y si es administrador\r\n        getProfile()\r\n        .then(response => {\r\n            const user = response.data[0]\r\n            console.info(user)\r\n            this.user = user\r\n            getPermisos(response.data[0].user)\r\n            .then(response => {\r\n                this.is_superuser = response.data.is_superuser\r\n                this.is_staff = response.data.is_staff\r\n                this.is_systemadmin = response.data.is_systemadmin\r\n                this.is_enterpriseadmin = response.data.is_enterpriseadmin\r\n                this.is_coop_user = user.cooperative_user\r\n                /*\r\n                //*Obtenemos la empresa del usuario\r\n                const enterprise_id = user.enterprise_id\r\n                getEnterprise(enterprise_id)\r\n                .then(async response => {\r\n                    this.parcelas = response.data.parcels\r\n                    await this.arrEmpresas.push(response.data)\r\n                    this.flagIndicatingDataHasBeenLoadedInVariables = false\r\n                    this.timestamp()\r\n                })\r\n                */\r\n                \r\n                if(this.is_superuser || this.is_systemadmin){\r\n                    getAllEnterprises()\r\n                    .then(async response => {\r\n                        this.arrEmpresas = [response.data[0]]\r\n                        this.arrEmpresas4List = response.data\r\n                        const arrParcels = []\r\n                        //carga de la primera empresa\r\n                        const empresaFirst = [response.data[0]]\r\n                        //response.data[0].map(enterprise => {\r\n                        empresaFirst.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                }else if((this.is_enterpriseadmin || this.is_staff) && !this.is_coop_user){ \r\n                    getEnterprise(user.enterprise_id)\r\n                    .then(async response => {\r\n                        this.arrEmpresas = [response.data]\r\n                        this.arrEmpresas4List = [response.data]\r\n                        const arrParcels = []\r\n                        response.data.parcels.features.map(parcel => {\r\n                            arrParcels.push(parcel)\r\n                        })\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                }else if(this.is_coop_user){\r\n                    getCooperative(user.enterprise_id)\r\n                    .then(response => {\r\n                        this.arrCooperativas = [response.data]\r\n                        //this.arrEmpresas = response.data.enterprises\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                }\r\n\r\n                if(this.is_superuser || this.is_systemadmin){\r\n                    getAllCooperatives()\r\n                    .then(async response => {\r\n                        this.arrCooperativas = response.data\r\n                    })\r\n                }\r\n                this.isActiveLoading = false\r\n                this.isVisibleLoad = false\r\n            })\r\n        })\r\n        getLayersFromSentinel().then(response => {\r\n            this.layersSelector = response.data\r\n        })\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n    #map{\r\n        width: 100%; height: 100%; position:fixed\r\n    }\r\n    \r\n    .mapa{\r\n        width: 100%; height: 100%!important; position: fixed\r\n    }\r\n    #cargando{\r\n        position:fixed\r\n    }\r\n</style>"],"sourceRoot":"src/components"}]}