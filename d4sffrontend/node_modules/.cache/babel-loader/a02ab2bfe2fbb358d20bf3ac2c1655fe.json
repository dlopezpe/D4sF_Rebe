{"remainingRequest":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\src\\components\\adminActions\\ParcelsToCheckHasComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\src\\components\\adminActions\\ParcelsToCheckHasComponent.vue","mtime":1709553265786},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\babel.config.js","mtime":1681217492507},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["getAllEnterprises","getEnterprise","getCooperative","getArea","Feature","Polygon","XLSX","name","components","data","selectValueEmpresa","arrEmpresas","arrEmpresasList","arrCooperativas","allParcelsOfEnterprises","allParcelsOfEnterprisesFilter","start","length","rowSelects","listadoParcelas","Array","listadoParcelasFilter","rowSize","autoWidth","sortable","title","actionBarAriaLabel","batchCancelLabel","zebra","columns","key","label","$t","methods","keepPositionScroll","scrollPosition","window","scrollY","putPositionScroll","setTimeout","scrollTo","crear_excel","result","filter","parcel","includes","String","id","forEach","x","push","properties","getPuntos","area","toFixed","getCalculateHas","getNameEnterprise","enterprise_id","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","comprobar","console","info","geometry","feature","coordinates","getGeometry","transform","areaForNewPolygon","Math","round","idParcel","poligono","flatCoordinates","value","enterprise","actionOnPagination","ev","onBuscar","busqueda","toUpperCase","seleccionaEmpresa","empresa","arrParcels","then","response","map","parcels","features","split","enterprises","mounted","beforeCreate","flagIndicatingDataHasBeenLoadedInVariables"],"sources":["src/components/adminActions/ParcelsToCheckHasComponent.vue"],"sourcesContent":["<template>\r\n    <div class=\"bx--grid\" @mousedown=\"keepPositionScroll\" @mouseup=\"putPositionScroll\">\r\n        <div id=\"txt-explicativo\" class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <p>Check las has de la parcelas</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <cv-select\r\n                    theme=\"\"\r\n                    :label=\"$t('map.listado_empresas')\"\r\n                    :hide-label=\"false\"\r\n                    :inline=\"false\"\r\n                    :disabled=\"false\"\r\n                    @change=\"seleccionaEmpresa\"\r\n                    v-model=\"selectValueEmpresa\"\r\n                >\r\n                    <cv-select-option :value=\"''\" disabled selected hidden>{{$t(\"map.sel_empresa\")}}</cv-select-option>\r\n                    <cv-select-optgroup label=\"Todas las Empresas\">\r\n                        <cv-select-option :value=\"`all`\">{{$t(\"map.most_todas_empresas\")}}</cv-select-option>\r\n                        <cv-select-option v-for=\"empresa in arrEmpresasList\" :value=\"String(empresa.id)\"  v-bind:key=\"empresa.id\">\r\n                            {{empresa.name}}\r\n                        </cv-select-option>\r\n                    </cv-select-optgroup>\r\n                    <cv-select-optgroup :label=\"`Cooperativa ${cooperativa.name}`\" v-bind:key=\"cooperativa.id\" v-for=\"cooperativa in arrCooperativas\">\r\n                        <cv-select-option :value=\"`coop_${cooperativa.id}`\">{{$t(\"map.most_todas_empresas\")}}</cv-select-option>\r\n                        <cv-select-option v-for=\"empresa in cooperativa.enterprises\" :value=\"String(empresa.id)\"  v-bind:key=\"empresa.id\">\r\n                            {{empresa.name}}\r\n                        </cv-select-option>\r\n                    </cv-select-optgroup>\r\n                </cv-select>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <div id=\"sentinelLayersList\">\r\n                    <p style=\"font-size: 14px\">Selecciona a continuación las parcelas sobre las que quieres realizar la consulta. Puedes utilizar el buscador para encontrar la/s parcela/s que necesitas. Para poder ver el nombre de todas las parcelas, por favor utiliza el selector que encontrarás en la parte inferior de la tabla.</p>\r\n                    <br>\r\n                    <cv-data-table\r\n                        :sortable=\"false\"\r\n                        @pagination=\"actionOnPagination\"\r\n                        :pagination=\"{ \r\n                            numberOfItems: allParcelsOfEnterprisesFilter.length, \r\n                            pageSizes: [\r\n                                {\r\n                                    value: 10,\r\n                                    label: '10'\r\n                                }, \r\n                                {\r\n                                    value: 15,\r\n                                    label: '15'\r\n                                },\r\n                                {\r\n                                    value: 20,\r\n                                    label: '20'\r\n                                }, \r\n                                {\r\n                                    value: 25,\r\n                                    label: '25'\r\n                                }, \r\n                                {\r\n                                    value: allParcelsOfEnterprisesFilter.length,\r\n                                    label: 'Todas'\r\n                                }\r\n                            ] \r\n                        }\"\r\n                        :columns=\"[\r\n                            {\r\n                                key: 'name',\r\n                                label: this.$t('graficos.nombre'),\r\n                                'sortable': false\r\n                            },\r\n                            {\r\n                                key: 'description',\r\n                                label: this.$t('graficos.descrip'),\r\n                                'sortable': false\r\n                            },\r\n                            {\r\n                                key: 'Puntos',\r\n                                label: this.$t('graficos.puntos'),\r\n                                'sortable': false\r\n                            },\r\n                            {\r\n                                key: 'heactareas en BBDD',\r\n                                label: 'Back',\r\n                                'sortable': false\r\n                            },\r\n                            {\r\n                                key: 'heactareas Recalculadas',\r\n                                label: 'Front',\r\n                                'sortable': false\r\n                            },\r\n                            {\r\n                                key: 'enterprise',\r\n                                label: 'Empresa',\r\n                                'sortable': false\r\n                            },\r\n                        ]\"\r\n                        :title=\"$t('graficos.parcel_list')\"\r\n                        v-model=\"rowSelects\"\r\n                        ref=\"tableLstadoT2MultiCoop\"\r\n                        searchLabel=\"Filter\" searchPlaceholder=\"Filter\" searchClearLabel=\"Clear filter\"\r\n                    >\r\n                        <template v-if=\"true\" slot=\"actions\">\r\n                            <cv-search :placeholder=\"$t('graficos.buscar_nombre')\" @input=\"onBuscar\"></cv-search>\r\n                        </template>\r\n                        <!-- <template v-if=\"true\" slot=\"batch-actions\">\r\n                            <cv-button @click=\"comprobar\">\r\n                                Pruebas\r\n                            </cv-button>  \r\n                        </template> -->\r\n                        <template v-if=\"true\" slot=\"batch-actions\">\r\n                            <cv-button @click=\"crear_excel\">\r\n                                Exportar Excel\r\n                            </cv-button>  \r\n                        </template>\r\n                        <template slot=\"data\">\r\n                            <cv-data-table-row\r\n                                v-for=\"feature in allParcelsOfEnterprisesFilter.slice(start, start+length)\"\r\n                                :key=\"`${feature.id}`\"\r\n                                :value=\"`${feature.id}`\"\r\n                                :aria-label-for-batch-checkbox=\"`Custom aria label for row ${feature.id} batch`\"\r\n                            >\r\n                                <cv-data-table-cell>{{feature.id+' - '}}{{feature.properties.name}}</cv-data-table-cell>\r\n                                <cv-data-table-cell>{{feature.properties.description}}</cv-data-table-cell>\r\n                                <cv-data-table-cell :class=\"{'errorDraw': getPuntos(feature.id) > 80}\" >{{getPuntos(feature.id)}}</cv-data-table-cell>\r\n                                <cv-data-table-cell>{{feature.properties.area.toFixed(2)}}</cv-data-table-cell>\r\n                                <cv-data-table-cell>{{getCalculateHas(feature.id)}} {{getCalculateHas(feature.id) != feature.properties.area.toFixed(2) ? '⚠' : ''}}</cv-data-table-cell>\r\n                                <cv-data-table-cell>{{getNameEnterprise(feature.properties.enterprise_id)}} </cv-data-table-cell>\r\n                            </cv-data-table-row>\r\n                        </template>\r\n                    </cv-data-table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport {getAllEnterprises, getEnterprise} from '@/crudFunctions/crudEnterprise'//getFechasSentinelForInformes\r\nimport {getCooperative} from '@/crudFunctions/crudCooperativas'\r\nimport { getArea } from 'ol/sphere';\r\nimport Feature from 'ol/Feature';\r\nimport Polygon from 'ol/geom/Polygon';\r\nimport * as XLSX from 'xlsx';\r\nexport default {\r\n    name: 'ParcelsToSentinelComponent',\r\n    components: {\r\n    },\r\n    data(){\r\n        return {\r\n            selectValueEmpresa: '',\r\n            //Empresas sel\r\n            arrEmpresas: [],\r\n            arrEmpresasList: [],\r\n            arrCooperativas: [],\r\n            allParcelsOfEnterprises: [],\r\n            allParcelsOfEnterprisesFilter: [],\r\n            start: 0,\r\n            length: 10,\r\n\r\n            rowSelects: [],\r\n            listadoParcelas: Array,\r\n            listadoParcelasFilter: Array,\r\n            rowSize: \"\",\r\n            autoWidth: false,\r\n            sortable: false,\r\n            title: \"Listado de parcelas sin Instancia en Sentinel\",\r\n            actionBarAriaLabel: \"Custom action bar aria label\",\r\n            batchCancelLabel: \"Cancel\",\r\n            zebra: true,\r\n            columns: [\r\n                {\r\n                    key: 'name',\r\n                    label: this.$t('graficos.nombre'),\r\n                },\r\n                {\r\n                    key: 'description',\r\n                    label: this.$t('graficos.descrip')\r\n                },\r\n                {\r\n                    key: 'heactareas',\r\n                    label: this.$t('graficos.hectareas'),\r\n                },\r\n                {\r\n                    key: 'enterprise',\r\n                    label: `Empresa`,\r\n                },\r\n            ],\r\n        }\r\n    },\r\n    methods: {\r\n        keepPositionScroll(){\r\n            this.scrollPosition = window.scrollY;\r\n        },\r\n        putPositionScroll(){\r\n            setTimeout(() => {\r\n                window.scrollTo(0, this.scrollPosition);\r\n            }, 0);\r\n        },\r\n        crear_excel() {\r\n            var data=[]\r\n            const result = this.allParcelsOfEnterprises.filter(parcel => this.rowSelects.includes(String(parcel.id)))\r\n            result.forEach((x)=>{\r\n                data.push({\"Nombre de la parcela\":x.properties.name,\"Numero de puntos\":this.getPuntos(x.id),\"Back\":x.properties.area.toFixed(2),\"Front\":this.getCalculateHas(x.id),\"Empresa\":this.getNameEnterprise(x.properties.enterprise_id)})\r\n            })\r\n            const ws = XLSX.utils.json_to_sheet(data);\r\n            const wb = XLSX.utils.book_new();\r\n            XLSX.utils.book_append_sheet(wb, ws, 'Hectareas por empresa');\r\n            XLSX.writeFile(wb, 'data.xlsx');\r\n        },\r\n        comprobar(){\r\n            console.info(this.rowSelects)\r\n            const result = this.allParcelsOfEnterprises.filter(parcel => this.rowSelects.includes(String(parcel.id)))\r\n            console.info(result)\r\n            console.info(result[0].geometry)\r\n            const feature = new Feature({\r\n                geometry: new Polygon(result[0].geometry.coordinates)\r\n            })\r\n            feature.getGeometry().transform('EPSG:4326', 'EPSG:3857')\r\n            console.info(feature.getGeometry())\r\n            const areaForNewPolygon = (Math.round((getArea(feature.getGeometry())/ 10000) * 10000) / 10000)\r\n            console.info(areaForNewPolygon)\r\n        },\r\n        getCalculateHas(idParcel){\r\n            const result = this.allParcelsOfEnterprises.filter(parcel => idParcel == parcel.id)\r\n            const feature = new Feature({\r\n                geometry: new Polygon(result[0].geometry.coordinates)\r\n            })\r\n            feature.getGeometry().transform('EPSG:4326', 'EPSG:3857')\r\n            return (Math.round((getArea(feature.getGeometry())/ 10000) * 10000) / 10000).toFixed(2)\r\n        }\r\n        ,\r\n        getPuntos(idParcel){\r\n            const result = this.allParcelsOfEnterprises.filter(parcel => idParcel == parcel.id)\r\n            const feature = new Feature({\r\n                geometry: new Polygon(result[0].geometry.coordinates)\r\n            })\r\n            feature.getGeometry().transform('EPSG:4326', 'EPSG:3857')\r\n            const poligono = feature.getGeometry();\r\n            //Dividimos entre 2 porque cada punto son 2 coordenadas\r\n            return poligono.flatCoordinates.length / 2 \r\n        },\r\n        getNameEnterprise(value){\r\n            const result = this.arrEmpresas.filter(enterprise => enterprise.id == value)\r\n            return result[0].name\r\n        },\r\n        actionOnPagination(ev){\r\n            this.start = ev.start-1\r\n            this.length = ev.length\r\n        },\r\n        onBuscar(busqueda){\r\n            if(busqueda){\r\n                const result = this.allParcelsOfEnterprises.filter(parcel => parcel.properties.name.toUpperCase().includes(busqueda.toUpperCase()))\r\n                this.allParcelsOfEnterprisesFilter = result\r\n            }else{\r\n                this.allParcelsOfEnterprisesFilter = this.allParcelsOfEnterprises\r\n            }\r\n        },\r\n        seleccionaEmpresa(empresa){\r\n            const arrParcels = []\r\n            if(empresa == 'all'){\r\n                getAllEnterprises()\r\n                    .then(async response => {\r\n                        response.data.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.arrEmpresas = response.data\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n            }else{\r\n                const result = empresa.split('_')\r\n                if(result[0] == 'coop'){\r\n                    getCooperative(result[1])\r\n                    .then(response => {\r\n                        response.data.enterprises.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.arrEmpresas = response.data.enterprises\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n                }else{\r\n                    getEnterprise(empresa)\r\n                    .then(async response => {\r\n                        response.data.parcels.features.map(parcel => {\r\n                            arrParcels.push(parcel)\r\n                        })\r\n                        this.arrEmpresas = [response.data]\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n                }\r\n            }\r\n        },\r\n    },\r\n    mounted: function () {\r\n        //console.info('User Logged')\r\n    },\r\n    beforeCreate(){\r\n        getAllEnterprises()\r\n        .then(async response => {\r\n            this.arrEmpresas = response.data\r\n            this.arrEmpresasList = response.data\r\n            const arrParcels = []\r\n            response.data.map(enterprise => {\r\n                enterprise.parcels.features.map(parcel => {\r\n                    arrParcels.push(parcel)\r\n                })\r\n            })\r\n            this.allParcelsOfEnterprises = arrParcels\r\n            this.allParcelsOfEnterprisesFilter = arrParcels\r\n            this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n        })\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n    .errorDraw{\r\n        color: #da1e28;\r\n        font-weight: 400;\r\n    }\r\n</style>"],"mappings":"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","ignoreList":[]}]}