{"remainingRequest":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\src\\components\\adminActions\\SentinelInstancesRefreshParcels.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\src\\components\\adminActions\\SentinelInstancesRefreshParcels.vue","mtime":1681217492554},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\babel.config.js","mtime":1681217492507},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681731147886},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1681731147886},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1681731156386},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681731147886},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1681731148945}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCB7IGdldEFsbEVudGVycHJpc2VzLCBzZXRQYXJjZWxzRm9ySW5zdGFuY2UgfSBmcm9tICdAL2NydWRGdW5jdGlvbnMvY3J1ZEVudGVycHJpc2UnOyAvL2dldEVudGVycHJpc2UKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUGFyY2Vsc1RvU2VudGluZWxDb21wb25lbnQnLAogIGNvbXBvbmVudHM6IHt9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICByb3dTZWxlY3RzOiBbXSwKICAgICAgbGlzdGFkb1BhcmNlbGFzOiBBcnJheSwKICAgICAgbGlzdGFkb1BhcmNlbGFzRmlsdGVyOiBBcnJheSwKICAgICAgYXJyRW1wcmVzYXM6IFtdLAogICAgICByb3dTaXplOiAiIiwKICAgICAgYXV0b1dpZHRoOiBmYWxzZSwKICAgICAgc29ydGFibGU6IGZhbHNlLAogICAgICB0aXRsZTogIkxpc3RhZG8gZGUgRW1wcmVzYXMiLAogICAgICBhY3Rpb25CYXJBcmlhTGFiZWw6ICJDdXN0b20gYWN0aW9uIGJhciBhcmlhIGxhYmVsIiwKICAgICAgYmF0Y2hDYW5jZWxMYWJlbDogIkNhbmNlbCIsCiAgICAgIHplYnJhOiB0cnVlLAogICAgICBjb2x1bW5zOiBbewogICAgICAgIGtleTogJ2lkJywKICAgICAgICBsYWJlbDogJ0lEJwogICAgICB9LCB7CiAgICAgICAga2V5OiAnbmFtZScsCiAgICAgICAgbGFiZWw6ICdOb21icmUgZGUgbGEgZW1wcmVzYScKICAgICAgfSwgewogICAgICAgIGtleTogJ3NlbnRpbmVsX2luc3RhbmNlJywKICAgICAgICBsYWJlbDogYEluc3RhbmNpYSBkZSBzZW50aW5lbGAKICAgICAgfV0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICByZWZyZXNjYXJJbnNhbmNpYSgpIHsKICAgICAgY29uc3QgcmVzdWx0ID0gdGhpcy5hcnJFbXByZXNhcy5maWx0ZXIoZW1wcmVzYSA9PiB0aGlzLnJvd1NlbGVjdHMuaW5jbHVkZXMoZW1wcmVzYS5pZCkpOwogICAgICBjb25zb2xlLmluZm8ocmVzdWx0KTsKICAgICAgcmVzdWx0Lm1hcChhc3luYyBlbnRlcnByaXNlID0+IHsKICAgICAgICBjb25zdCBhbGxDb29yZGluYXRlcyA9IEFycmF5KCk7CiAgICAgICAgZW50ZXJwcmlzZS5wYXJjZWxzLmZlYXR1cmVzLm1hcChwYXJjZWwgPT4gewogICAgICAgICAgYWxsQ29vcmRpbmF0ZXMucHVzaChwYXJjZWwuZ2VvbWV0cnkuY29vcmRpbmF0ZXMpOwogICAgICAgIH0pOwogICAgICAgIGNvbnNvbGUuaW5mbyhgcGFyY2VsYXMgZGUgJHtlbnRlcnByaXNlLm5hbWV9YCwgYWxsQ29vcmRpbmF0ZXMpOwogICAgICAgIGF3YWl0IHNldFBhcmNlbHNGb3JJbnN0YW5jZShlbnRlcnByaXNlLm5hbWUsIGFsbENvb3JkaW5hdGVzLCBlbnRlcnByaXNlLnNlbnRpbmVsX2luc3RhbmNlKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgIGNvbnNvbGUuaW5mbyhgT0sgcmVmcmVzY2FkbyBwYXJjZWxhcyBkZSAke2VudGVycHJpc2UubmFtZX1gLCByZXNwb25zZS5kYXRhKTsKICAgICAgICB9KS5jYXRjaChlcnIgPT4gY29uc29sZS5pbmZvKGBFUlJPUiByZWZyZXNjYWRvIHBhcmNlbGFzIGRlICR7ZW50ZXJwcmlzZS5uYW1lfWAsIGVycikpOwogICAgICB9KTsKICAgICAgLy9wb3N0UGFyY2Vsc05vdFNlbnRpbmVsSW5zdGFuY2UodGhpcy5yb3dTZWxlY3RzKQogICAgfQogIH0sCgogIG1vdW50ZWQ6IGZ1bmN0aW9uICgpIHsKICAgIC8vY29uc29sZS5pbmZvKCdVc2VyIExvZ2dlZCcpCiAgfSwKICBiZWZvcmVDcmVhdGUoKSB7CiAgICBnZXRBbGxFbnRlcnByaXNlcygpLnRoZW4oYXN5bmMgcmVzcG9uc2UgPT4gewogICAgICB0aGlzLmFyckVtcHJlc2FzID0gcmVzcG9uc2UuZGF0YTsKICAgICAgdGhpcy5mbGFnSW5kaWNhdGluZ0RhdGFIYXNCZWVuTG9hZGVkSW5WYXJpYWJsZXMgPSB0cnVlOwogICAgfSk7CiAgfQp9Ow=="},{"version":3,"names":["getAllEnterprises","setParcelsForInstance","name","components","data","rowSelects","listadoParcelas","Array","listadoParcelasFilter","arrEmpresas","rowSize","autoWidth","sortable","title","actionBarAriaLabel","batchCancelLabel","zebra","columns","key","label","methods","refrescarInsancia","result","filter","empresa","includes","id","console","info","map","enterprise","allCoordinates","parcels","features","parcel","push","geometry","coordinates","sentinel_instance","then","response","catch","err","mounted","beforeCreate","flagIndicatingDataHasBeenLoadedInVariables"],"sources":["src/components/adminActions/SentinelInstancesRefreshParcels.vue"],"sourcesContent":["<template>\r\n    <div class=\"bx--grid\">\r\n        <template id=\"txt-explicativo\" class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <p>Procesado de las instancias de Sentinel para volver a cargar todas las parcelas en la instancia de nuevo</p>\r\n            </div>\r\n        </template>\r\n        <template class=\"bx--row\">\r\n            <cv-data-table\r\n                :row-size=\"rowSize\"\r\n                :auto-width=\"autoWidth\"\r\n                :sortable=\"sortable\"\r\n                :title=\"title\"\r\n                :action-bar-aria-label=\"actionBarAriaLabel\"\r\n                :batch-cancel-label=\"batchCancelLabel\"\r\n                :zebra=\"zebra\"\r\n                :columns=\"columns\"\r\n                v-model=\"rowSelects\"\r\n            >\r\n            <template v-if=\"true\" slot=\"batch-actions\">\r\n                <cv-button @click=\"refrescarInsancia\">\r\n                    Refrescar Instancia\r\n                    <Analytics20 class=\"bx--btn__icon\" />\r\n                </cv-button> \r\n            </template>\r\n            <template slot=\"data\" v-if=\"listadoParcelas\">\r\n                <cv-data-table-row\r\n                    v-for=\"enterprise in arrEmpresas\"\r\n                    :key=\"`${enterprise.id}`\"\r\n                    :value=\"`${enterprise.id}`\"\r\n                >\r\n                    <cv-data-table-cell>{{enterprise.id}}</cv-data-table-cell>\r\n                    <cv-data-table-cell>{{enterprise.name}}</cv-data-table-cell>\r\n                    <cv-data-table-cell>{{enterprise.sentinel_instance}}</cv-data-table-cell>\r\n                </cv-data-table-row>\r\n            </template>\r\n            </cv-data-table>\r\n        </template>\r\n    </div>\r\n</template>\r\n<script>\r\nimport {getAllEnterprises, setParcelsForInstance} from '@/crudFunctions/crudEnterprise'//getEnterprise\r\n\r\nexport default {\r\n    name: 'ParcelsToSentinelComponent',\r\n    components: {\r\n    },\r\n    data(){\r\n        return {\r\n            rowSelects: [],\r\n            listadoParcelas: Array,\r\n            listadoParcelasFilter: Array,\r\n            arrEmpresas: [],\r\n            rowSize: \"\",\r\n            autoWidth: false,\r\n            sortable: false,\r\n            title: \"Listado de Empresas\",\r\n            actionBarAriaLabel: \"Custom action bar aria label\",\r\n            batchCancelLabel: \"Cancel\",\r\n            zebra: true,\r\n            columns: [\r\n                {\r\n                    key: 'id',\r\n                    label: 'ID',\r\n                },\r\n                {\r\n                    key: 'name',\r\n                    label: 'Nombre de la empresa',\r\n                },\r\n                {\r\n                    key: 'sentinel_instance',\r\n                    label: `Instancia de sentinel`,\r\n                },\r\n            ],\r\n        }\r\n    },\r\n    methods: {\r\n        refrescarInsancia(){\r\n            const result = this.arrEmpresas.filter(empresa => this.rowSelects.includes(empresa.id))\r\n            console.info(result)\r\n            result.map( async enterprise => {\r\n                const allCoordinates = Array();\r\n                enterprise.parcels.features.map(parcel => {\r\n                    allCoordinates.push(parcel.geometry.coordinates)\r\n                })\r\n                console.info(`parcelas de ${enterprise.name}`, allCoordinates)\r\n                await setParcelsForInstance(enterprise.name, allCoordinates, enterprise.sentinel_instance)\r\n                    .then(response => {\r\n                        console.info(`OK refrescado parcelas de ${enterprise.name}`, response.data)\r\n                    })\r\n                    .catch(err => console.info(`ERROR refrescado parcelas de ${enterprise.name}`, err))\r\n            })\r\n            //postParcelsNotSentinelInstance(this.rowSelects)\r\n        }\r\n    },\r\n    mounted: function () {\r\n        //console.info('User Logged')\r\n    },\r\n    beforeCreate(){\r\n        getAllEnterprises()\r\n            .then(async response => {\r\n                this.arrEmpresas = response.data\r\n                this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n            })\r\n    }\r\n}\r\n</script>"],"mappings":";AAyCA,SAAAA,iBAAA,EAAAC,qBAAA;;AAEA;EACAC,IAAA;EACAC,UAAA,GACA;EACAC,KAAA;IACA;MACAC,UAAA;MACAC,eAAA,EAAAC,KAAA;MACAC,qBAAA,EAAAD,KAAA;MACAE,WAAA;MACAC,OAAA;MACAC,SAAA;MACAC,QAAA;MACAC,KAAA;MACAC,kBAAA;MACAC,gBAAA;MACAC,KAAA;MACAC,OAAA,GACA;QACAC,GAAA;QACAC,KAAA;MACA,GACA;QACAD,GAAA;QACAC,KAAA;MACA,GACA;QACAD,GAAA;QACAC,KAAA;MACA;IAEA;EACA;EACAC,OAAA;IACAC,kBAAA;MACA,MAAAC,MAAA,QAAAb,WAAA,CAAAc,MAAA,CAAAC,OAAA,SAAAnB,UAAA,CAAAoB,QAAA,CAAAD,OAAA,CAAAE,EAAA;MACAC,OAAA,CAAAC,IAAA,CAAAN,MAAA;MACAA,MAAA,CAAAO,GAAA,OAAAC,UAAA;QACA,MAAAC,cAAA,GAAAxB,KAAA;QACAuB,UAAA,CAAAE,OAAA,CAAAC,QAAA,CAAAJ,GAAA,CAAAK,MAAA;UACAH,cAAA,CAAAI,IAAA,CAAAD,MAAA,CAAAE,QAAA,CAAAC,WAAA;QACA;QACAV,OAAA,CAAAC,IAAA,gBAAAE,UAAA,CAAA5B,IAAA,IAAA6B,cAAA;QACA,MAAA9B,qBAAA,CAAA6B,UAAA,CAAA5B,IAAA,EAAA6B,cAAA,EAAAD,UAAA,CAAAQ,iBAAA,EACAC,IAAA,CAAAC,QAAA;UACAb,OAAA,CAAAC,IAAA,8BAAAE,UAAA,CAAA5B,IAAA,IAAAsC,QAAA,CAAApC,IAAA;QACA,GACAqC,KAAA,CAAAC,GAAA,IAAAf,OAAA,CAAAC,IAAA,iCAAAE,UAAA,CAAA5B,IAAA,IAAAwC,GAAA;MACA;MACA;IACA;EACA;;EACAC,OAAA,WAAAA,CAAA;IACA;EAAA,CACA;EACAC,aAAA;IACA5C,iBAAA,GACAuC,IAAA,OAAAC,QAAA;MACA,KAAA/B,WAAA,GAAA+B,QAAA,CAAApC,IAAA;MACA,KAAAyC,0CAAA;IACA;EACA;AACA"}]}