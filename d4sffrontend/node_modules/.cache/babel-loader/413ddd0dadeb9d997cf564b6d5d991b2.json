{"remainingRequest":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\src\\components\\adminActions\\GenGraficosAnterioresComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\src\\components\\adminActions\\GenGraficosAnterioresComponent.vue","mtime":1671551934604},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["GenGraficosAnterioresComponent.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"bx--grid\">\r\n        <div id=\"txt-explicativo\" class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <h2>Informes Anteriores <img src=\"../../assets/agriculture-analytics.svg\" style=\"width: 40px;\"></h2>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <cv-select\r\n                    theme=\"\"\r\n                    :label=\"$t('map.listado_empresas')\"\r\n                    :hide-label=\"false\"\r\n                    :inline=\"false\"\r\n                    :disabled=\"false\"\r\n                    @change=\"seleccionaEmpresa\"\r\n                    v-model=\"selectValueEmpresa\"\r\n                >\r\n                    <cv-select-option :value=\"''\" disabled selected hidden>{{$t(\"map.sel_empresa\")}}</cv-select-option>\r\n                    <cv-select-optgroup label=\"Todas las Empresas\" v-if=\"is_superuser || is_systemadmin\">\r\n                        <cv-select-option :value=\"`all`\" v-if=\"is_superuser || is_systemadmin\">{{$t(\"map.most_todas_empresas\")}}</cv-select-option>\r\n                        <cv-select-option v-for=\"empresa in arrEmpresasList\" :value=\"String(empresa.id)\"  v-bind:key=\"empresa.id\">\r\n                            {{empresa.name}}\r\n                        </cv-select-option>\r\n                    </cv-select-optgroup>\r\n                    <cv-select-optgroup :label=\"`Cooperativa ${cooperativa.name}`\" v-bind:key=\"cooperativa.id\" v-for=\"cooperativa in arrCooperativas\">\r\n                        <cv-select-option :value=\"`coop_${cooperativa.id}`\">{{$t(\"map.most_todas_empresas\")}}</cv-select-option>\r\n                        <cv-select-option v-for=\"empresa in cooperativa.enterprises\" :value=\"String(empresa.id)\"  v-bind:key=\"empresa.id\">\r\n                            {{empresa.name}}\r\n                        </cv-select-option>\r\n                    </cv-select-optgroup>\r\n                </cv-select>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div id=\"txt-explicativo\" class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <p><strong><u>IMPORTANTE:</u></strong> Los informes anteriores al 04-08-2022 (incluido) se van a descargar siempre con imágenes, la opción de descargar los informes con/sin imágenes se implementó a partir de esa fecha.</p>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <div id=\"sentinelLayersList\">\r\n                    <cv-data-table\r\n                        :sortable=\"false\"\r\n                        :pagination=\"{ numberOfItems: historicoAnterior.length, pageSizes: [10, 15, 20, 25, historicoAnterior.length] }\" @pagination=\"actionOnPagination\"\r\n                        :columns=\"columnas\"\r\n                        :title=\"`Informes Generados`\"\r\n                        @sort=\"onSort\"\r\n                        v-model=\"rowSelects\"\r\n                        ref=\"tableLstadoT2MultiCoop\"\r\n                        searchLabel=\"Filter\" searchPlaceholder=\"Filter\" searchClearLabel=\"Clear filter\"\r\n                        @row-select-change=\"changeRowsUnique\"\r\n                    >\r\n                        <template v-if=\"true\" slot=\"actions\">\r\n                            <cv-search :placeholder=\"$t('graficos.buscar_nombre')\" @input=\"onBuscar\"></cv-search>\r\n                        </template>\r\n                        <template v-if=\"rowSelects.length == 1\" slot=\"batch-actions\">\r\n                            <cv-button @click=\"verDatosFecha\">\r\n                                {{$t(\"graficos.ver_datos\")}} Ordenado por Fecha\r\n                                <Charbar20 class=\"bx--btn__icon\"/>\r\n                            </cv-button> \r\n                        </template>\r\n                        <template v-if=\"rowSelects.length == 1\" slot=\"batch-actions\">\r\n                            <cv-button @click=\"verDatosParcelas\">\r\n                                {{$t(\"graficos.ver_datos\")}} Agrupado por Parcelas\r\n                                <Charbar20 class=\"bx--btn__icon\"/>\r\n                            </cv-button> \r\n                        </template>\r\n                        <template v-if=\"rowSelects.length == 1\" slot=\"batch-actions\">\r\n                            <cv-button @click=\"descargaExcel\" v-if=\"true\">\r\n                                {{$t(\"graficos.desc_excel\")}}\r\n                                <Download16 class=\"bx--btn__icon\"/>\r\n                            </cv-button>\r\n                        </template>\r\n                        <template v-if=\"rowSelects.length == 1\" slot=\"batch-actions\">\r\n                            <cv-button @click=\"descargaExcelConImagenes\" v-if=\"true\">\r\n                                {{$t(\"graficos.desc_excel_img\")}}\r\n                                <Download16 class=\"bx--btn__icon\"/>\r\n                            </cv-button>\r\n                        </template>            \r\n                        <template v-if=\"rowSelects.length == 1\" slot=\"batch-actions\">\r\n                            <cv-button @click=\"showEditarInforme\" >\r\n                                {{$t(\"graficos.editar\")}}\r\n                                <Edit32 class=\"bx--btn__icon\" />\r\n                            </cv-button>\r\n                        </template>\r\n                        <template v-if=\"rowSelects.length > 1\" slot=\"batch-actions\">\r\n                            <cv-button @click=\"showModificarInformes\" >\r\n                                {{$t(\"graficos.unificar_informes\")}}\r\n                                <AppConnectivity32 class=\"bx--btn__icon\"/>\r\n                            </cv-button>\r\n                        </template>\r\n                        <template v-if=\"true\" slot=\"batch-actions\">\r\n                            <cv-button @click=\"delInforme\">\r\n                                {{$t(\"graficos.del_informe\")}}\r\n                                <TrashCan32 class=\"bx--btn__icon\" />\r\n                            </cv-button>\r\n                        </template>\r\n                        <template slot=\"data\">\r\n                            <cv-data-table-row\r\n                                v-for=\"feature in historicoAnterior.slice(start, start+length)\"\r\n                                :key=\"`${feature.id}`\"\r\n                                :value=\"`${feature.id}`\"\r\n                                :aria-label-for-batch-checkbox=\"`Custom aria label for row ${feature.id} batch`\"\r\n                            >\r\n                                <cv-data-table-cell>{{feature.nombre}}</cv-data-table-cell>\r\n                                <cv-data-table-cell>{{feature.capa}}</cv-data-table-cell>\r\n                                <cv-data-table-cell>{{dateFormat(feature.created)}}</cv-data-table-cell>\r\n                                <cv-data-table-cell>{{getEstado(feature)}} <img src=\"../../assets/information--square--filled.svg\" style=\"width: 15px; cursor:pointer\" title=\"Parcelas reportadas por Sentinel\" @click=\"modalerrores(feature)\" v-if=\"feature.error\"> </cv-data-table-cell>\r\n                                <cv-data-table-cell>{{feature.fechaInicio}} - {{feature.fechaFin}}</cv-data-table-cell>\r\n                                <cv-data-table-cell style=\"text-aling: center\">\r\n                                    <img src=\"../../assets/mostly-cloudy.svg\" style=\"width: 15px;\" v-if=\"feature.includeClouds\"> \r\n                                    <img src=\"../../assets/outlook-severe.svg\" style=\"width: 15px;\" v-else>\r\n                                    <label v-if=\"feature.includeClouds\">  Sí</label>\r\n                                    <label v-else>  No</label>\r\n                                </cv-data-table-cell>\r\n                                <cv-data-table-cell v-if=\"is_superuser\">{{getUserName(feature.user_created)}}</cv-data-table-cell>\r\n                                <cv-data-table-cell>{{getEnterpriseName(feature.enterprise_id)}}</cv-data-table-cell>\r\n                            </cv-data-table-row>\r\n                        </template>\r\n                    </cv-data-table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <ChartLine :datos=\"graficoData\" v-if=\"verGraficNDVI\" :key=\"`chart_line_ndvi_${timestamp}`\"/>\r\n                <ChartLineMois :datos=\"graficoData\" v-if=\"verGraficMois\" :key=\"`chart_line_mois_${timestamp}`\"/>\r\n            </div>\r\n        </div>\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <ChartBar :datos=\"graficoData\" v-if=\"verGraficNDVI\" :key=\"`chart_bar_ndvi_${timestamp}`\"/>\r\n                <ChartBarMois :datos=\"graficoData\" v-if=\"verGraficMois\" :key=\"`chart_bar_mois_${timestamp}`\"/>\r\n            </div>\r\n        </div>\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <TableColors :urlMedia=\"$apiURLMedia\" :datos=\"graficoData\" v-if=\"verGraficNDVI\" :key=\"`table_ndvi_${timestamp}`\"/>\r\n                <TableColorsMois :urlMedia=\"$apiURLMedia\" :datos=\"graficoData\" v-if=\"verGraficMois\" :key=\"`table_mois_${timestamp}`\"/>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <SentImage :urlMedia=\"$apiURLMedia\" :datos=\"graficoData\" v-if=\"verImagenSent\" :key=\"`imgs_${timestamp}`\"/>\r\n            </div>\r\n        </div>\r\n        <cv-modal\r\n        ref=\"alerta_eliminar\"\r\n        kind=\"danger\"\r\n        @primary-click=\"eliminarInformesConfirm\">\r\n            <template slot=\"label\">{{$t(\"graficos.seguro\")}}</template>\r\n            <template slot=\"title\">{{$t(\"graficos.eliminar\")}}</template>\r\n            <template slot=\"content\">\r\n            <p>{{$t(\"graficos.seguro_parcel_del\")}}</p>\r\n            </template>\r\n            <template slot=\"secondary-button\">{{$t(\"graficos.cancelar\")}}</template>\r\n            <template slot=\"primary-button\">{{$t(\"graficos.eliminar\")}}</template>\r\n        </cv-modal>\r\n\r\n        <cv-modal\r\n            ref=\"editar_informe\"\r\n            @primary-click=\"changeNameInforme\"\r\n        >\r\n            <template slot=\"label\">{{$t('graficos.modifica_infor')}}</template>\r\n            <template slot=\"title\">{{$t('graficos.modifica_infor')}}</template>\r\n            <template slot=\"content\">\r\n                <div class=\"bx--grid bx--grid--condensed\">\r\n                    <div class=\"bx--row\">\r\n                        <div class=\"bx--col\">\r\n                            <!-- Nombre de Informe -->\r\n                            <div class=\"bx--form-item\">\r\n                                <label for=\"text-input-Nombre\" class=\"bx--label\">{{$t('graficos.nombre_informe')}}</label>\r\n                                <input v-model=\"nombreInformeNew\" id=\"text-input-Nombre\" type=\"text\" class=\"bx--text-input\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </template>\r\n            <template slot=\"secondary-button\">{{$t(\"graficos.cancelar\")}}</template>\r\n            <template slot=\"primary-button\">{{$t('graficos.guardar')}}</template>\r\n        </cv-modal>\r\n        <cv-modal\r\n            ref=\"unificarInformeForm\"\r\n            @primary-click=\"unificaInformes\"\r\n            @secondary-click=\"$refs.unificarInformeForm.hide()\"\r\n        >\r\n            <template v-if=\"true\" slot=\"label\"></template>\r\n            <template v-if=\"true\" slot=\"title\">{{$t('graficos.unificar_informes')}}</template>\r\n            <template v-if=\"true\" slot=\"content\" id=\"contenido\">\r\n                <div class=\"bx--grid bx--grid--condensed\">\r\n                    <div class=\"bx--row\">\r\n                        <!-- Nombre de Informe -->\r\n                        <div class=\"bx--form-item\">\r\n                            <label for=\"text-input-Nombre\" class=\"bx--label\">{{$t('graficos.nombre')}}</label>\r\n                            <input v-model=\"nombreInformeNewUnificado\" id=\"text-input-Nombre\" type=\"text\" class=\"bx--text-input\" :placeholder=\"$t('graficos.nombre')\">\r\n                        </div>\r\n                    </div>\r\n                    <br>\r\n                    <div class=\"bx--row\">\r\n                        <div class=\"bx--col\">\r\n                            <div class=\"bx--form-item\">\r\n                                <cv-checkbox\r\n                                    :label=\"$t('graficos.eliminar_informe_origin')\"\r\n                                    :checked=\"false\"\r\n                                    value=\"true\"\r\n                                    :mixed=\"false\"\r\n                                    v-model=\"checkDellInforme\"\r\n                                >\r\n                                </cv-checkbox>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <br>\r\n                    <div class=\"bx--row\">\r\n                        <div class=\"bx--col\">\r\n                            <h4>{{$t(\"graficos.resumen_unifica\")}}</h4>\r\n                            <cv-data-table\r\n                                :columns=\"[\r\n                                    this.$t('graficos.parcelas'),\r\n                                    'Capa',\r\n                                    this.$t('graficos.rango_fechas_sel'),\r\n                                    {\r\n                                        'label': this.$t('graficos.creado'),\r\n                                    },\r\n                                ]\"\r\n                            >\r\n                                <template slot=\"data\">\r\n                                    <cv-data-table-row  v-for=\"informe in informesSeleccionados\" :value=\"String(informe.id)\" :key=\"String(informe.id)\">\r\n                                        <cv-data-table-cell>{{informe.nombre}}</cv-data-table-cell>\r\n                                        <cv-data-table-cell>{{informe.capa}}</cv-data-table-cell>\r\n                                        <cv-data-table-cell>{{dateFormat(informe.created)}}</cv-data-table-cell>\r\n                                        <cv-data-table-cell>{{informe.fechaInicio}} - {{informe.fechaFin}}</cv-data-table-cell>\r\n                                    </cv-data-table-row>\r\n                                </template>\r\n                            </cv-data-table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </template>\r\n            <template v-if=\"true\" slot=\"secondary-button\">{{$t(\"graficos.cancelar\")}}</template>\r\n            <template v-if=\"true\" slot=\"primary-button\">{{$t(\"graficos.unificar\")}}</template>\r\n        </cv-modal>\r\n        <cv-modal\r\n        ref=\"errores\"\r\n        @primary-click=\"$refs.errores.hide()\"\r\n        >\r\n            <template slot=\"title\">Parcelas reportadas por Sentinel</template>\r\n            <template slot=\"content\">\r\n            <p style=\"white-space: pre-line\">Sentinel ha reportado algún posible error al obtener los datos de la/s parcela/s:\r\n            <br> \r\n            {{getErrores(informeErrores)}}\r\n            Por favor, revisa el informe y solicita de nuevo esas parcelas en caso de que falte algún dato.</p>\r\n            </template>\r\n            <template slot=\"primary-button\">OK</template>\r\n        </cv-modal>\r\n        <AlertaGeneral ref=\"alertaGenerall\" :tituloAlert=\"mensajeAlerta\" :tipoAlert=\"tipoAlerta\" />\r\n    </div>\r\n</template>\r\n<script>\r\n//import {getParcelsNotSentinelInstance, postParcelsNotSentinelInstance} from '@/crudFunctions/crudSentinel.js'\r\nimport {getProfile, getPermisos} from '@/auth/index'\r\nimport {getAllEnterprises, getEnterprise, createInformes, getInformesAnterioresNew,\r\ngetInformeAnteriorData, delInformesAnterioresNew,putInformesUnificarNew, putInformesAnterioresNew, getUsersList, getUsersListProfiles, generarinforme} from '@/crudFunctions/crudEnterprise'\r\nimport {getAllCooperatives, getCooperative} from '@/crudFunctions/crudCooperativas'\r\nimport SentImage from '@/components/charts_new/imageSent.vue'\r\nimport TableColors from '@/components/charts_new/tableColors.vue'\r\nimport TableColorsMois from '@/components/charts_new/tableColorsMois.vue'\r\nimport ChartLine from '@/components/charts_new/chartLine.vue'\r\nimport ChartLineMois from '@/components/charts_new/chartLineMois.vue'\r\nimport ChartBar from '@/components/charts_new/chartBar.vue'\r\nimport ChartBarMois from '@/components/charts_new/chartBarMois.vue'\r\nimport AlertaGeneral from \"@/components/AlertaGeneral\"\r\nexport default {\r\n    name: 'ParcelsToSentinelComponent',\r\n    components: {\r\n        SentImage,\r\n        TableColors,\r\n        TableColorsMois,\r\n        ChartLine,\r\n        ChartBar,\r\n        ChartBarMois,\r\n        ChartLineMois,\r\n        AlertaGeneral\r\n    },\r\n    data(){\r\n        return {\r\n            //\r\n            selectValueEmpresa: '',\r\n            //\r\n            flagIndicatingDataHasBeenLoadedInVariables: false,\r\n            //Usuario\r\n            is_superuser: false,\r\n            is_staff: false,\r\n            is_systemadmin: false,\r\n            is_enterpriseadmin: false,\r\n            is_coop_user: false,\r\n            //Empresas sel\r\n            arrEmpresas: [],\r\n            arrEmpresasList: [],\r\n            arrCooperativas: [],\r\n            allParcelsOfEnterprises: [],\r\n            allParcelsOfEnterprisesFilter: [],\r\n            //\r\n            start: 0,\r\n            length: 10,\r\n            //\r\n            rowSelects: [],\r\n            //\r\n            SentinelLayer: 'NDVI',\r\n            calOptions: {\r\n                \"dateFormat\": \"Y-m-d\"\r\n            },\r\n            time: `${this.getNow()}/${this.getNow()}`,\r\n            valueDates: [],\r\n            valueRange: [],\r\n            timeValuesArr: [this.getNow(), this.getNow()],\r\n            nombreInforme: `Gráfico - ${this.getNow()}`,\r\n            historicoAnterior: Array(),\r\n            historicoAnteriorCoop: Array(),\r\n            historicoSell: {},\r\n            verGraficNDVI: false,\r\n            verGraficMois: false,\r\n            graficoData: {},\r\n            verImagenSent: false,\r\n            keyTableColors: 0,\r\n            timestamp: 0,\r\n            mostrar:true,\r\n            //\r\n            tipoAlerta: `error`,\r\n            mensajeAlerta: '',\r\n            //\r\n            nombreInformeNew: '',\r\n            //\r\n            showUnificarInformes: false,\r\n            //\r\n            nombreInformeNewUnificado: `Gráfico Unificado - ${this.getNow()}`,\r\n            checkDellInforme: false,\r\n            informesSeleccionados: [],\r\n            uniqueEmpresasUnificarId: '',\r\n            uniqueCapaUnificar: '',\r\n            usersList: [],\r\n            usersListProfile: [],\r\n            informeErrores:{},\r\n            columnas:[\r\n                            {\r\n                                key: 'name',\r\n                                label: this.$t('graficos.nombre'),\r\n                                'sortable': false\r\n                            },\r\n                            {\r\n                                key: 'capa',\r\n                                label: this.$t('graficos.capa'),\r\n                                'sortable': true\r\n                            },\r\n                            {\r\n                                'label': this.$t('graficos.creado'),\r\n                                'sortable': true\r\n                            },\r\n                            {\r\n                                'label': this.$t('graficos.estado'),\r\n                                'sortable': false\r\n                            },\r\n                            {\r\n                                'label': this.$t('graficos.rango_fechas_sel'),\r\n                                'sortable': false\r\n                            },\r\n                            {\r\n                                'label': this.$t('graficos.analisis_nubes'),\r\n                                'sortable': true\r\n                            },\r\n                            {\r\n                                'label': this.$t('graficos.empresa'),\r\n                                'sortable': false\r\n                            },\r\n                        ]\r\n        }\r\n    },\r\n    methods: {\r\n        getUserName(user_id){\r\n            if(this.usersList && this.usersListProfile){\r\n                const resultName = this.usersList.filter(user => user.id == user_id)\r\n                if(resultName){\r\n                    const resultEmail = this.usersListProfile.filter(user => user.id == resultName[0].user)\r\n                    return `${resultName[0].first_name} - ${resultEmail[0].email}`\r\n                }\r\n            }\r\n        },\r\n        getEnterpriseName(id_empresa){\r\n            const empresa=this.arrEmpresas.filter(y=>y.id==id_empresa)\r\n            return empresa[0].name\r\n        },\r\n        getEstado(informe){\r\n            if(informe.error && informe.estado==3){\r\n                return \"Terminado con posibles errores\"\r\n            }\r\n            switch (informe.estado) {\r\n                case '1':\r\n                    return 'En Proceso (Obteniendo imagenes)'\r\n                case '2':\r\n                    return 'En proceso (Procesando excel)'\r\n                case '3':\r\n                    return 'Terminado'\r\n                default:\r\n                    return `No finalizado (errores en Sentinel)`\r\n            }\r\n        },\r\n        modalerrores(informe){\r\n            this.informeErrores=informe\r\n            this.$refs.errores.dataVisible = true\r\n        },\r\n        getErrores(informe){\r\n            let codigo=\"\"\r\n            if(informe.parcelas_fallidas==null || informe.parcelas_fallidas.length==0){\r\n                return \"No hay datos especificos de que parcelas pueden presentar errores \\n\"\r\n            }\r\n            else{\r\n                const fallidas=informe.parcelas_fallidas.trim().split(\" \")\r\n                for (let i in fallidas){\r\n                    const result=this.allParcelsOfEnterprises.filter(x=>x.id==fallidas[i])\r\n                    codigo+=\"ID= \"+result[0].id+\" Nombre= \"+result[0].properties.name+'\\n'\r\n                }\r\n                console.log(codigo)\r\n                return codigo\r\n            }\r\n        },\r\n        showModificarInformes(){\r\n            if(this.comprobacionrows()){\r\n                //const numSel = this.rowSelects.length\r\n                const results = this.historicoAnterior.filter(historico => this.rowSelects.includes(historico.id) )\r\n                const enterprisesInResults = []\r\n                results.map(result => {\r\n                    enterprisesInResults.push(result.enterprise_id)\r\n                })\r\n                const uniqueEmpresas = [...new Set(enterprisesInResults)]\r\n                if(uniqueEmpresas.length > 1){\r\n                    this.mensajeAlerta = 'Los informes seleccionados pertenecen a distintas empresas'\r\n                    this.tipoAlerta = 'error'\r\n                    this.$refs.alertaGenerall.verAlerta()\r\n                    return false\r\n                }\r\n                const capaInResults = []\r\n                results.map(result => {\r\n                    capaInResults.push(result.capa)\r\n                })\r\n                const uniqueCapa = [...new Set(capaInResults)]\r\n                if(uniqueCapa.length > 1){\r\n                    this.mensajeAlerta = 'Los informes seleccionados son de distintas capas'\r\n                    this.tipoAlerta = 'error'\r\n                    this.$refs.alertaGenerall.verAlerta()\r\n                    return false\r\n                }\r\n                this.uniqueEmpresasUnificarId = uniqueEmpresas[0]\r\n                this.uniqueCapaUnificar = uniqueCapa[0]\r\n                this.informesSeleccionados = results\r\n                this.$refs.unificarInformeForm.dataVisible = true\r\n            }\r\n            else{\r\n                this.mensajeAlerta = `\"Las acciones a realizar sobre el informe se habilitarán una vez se haya generado completamente\"`\r\n                this.tipoAlerta = `error`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n            }\r\n        },\r\n        unificaInformes(){\r\n            //console.info(this.uniqueEmpresasUnificarId, this.informesSeleccionados, this.checkDellInforme, this.nombreInformeNewUnificado)\r\n            putInformesUnificarNew(this.nombreInformeNewUnificado, this.uniqueEmpresasUnificarId, this.informesSeleccionados, this.checkDellInforme, this.uniqueCapaUnificar)\r\n            .then(() => {\r\n                this.mensajeAlerta = `Informe Generado correctamente`\r\n                this.tipoAlerta = 'success'\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                this.seleccionaEmpresa(this.selectValueEmpresa)\r\n            })\r\n            this.$refs.unificarInformeForm.hide()\r\n        },\r\n        showEditarInforme(){\r\n            if(this.comprobacionrows()){\r\n                //console.info('ver editar Informe')\r\n                const result = this.historicoAnterior.filter(historico => this.rowSelects.includes(historico.id) )\r\n                this.nombreInformeNew = result[0].nombre\r\n                this.$refs.editar_informe.dataVisible = true\r\n            }else{\r\n                this.mensajeAlerta = `\"Las acciones a realizar sobre el informe se habilitarán una vez se haya generado completamente\"`\r\n                this.tipoAlerta = `error`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n            }\r\n        },\r\n        changeNameInforme(){\r\n            putInformesAnterioresNew(this.rowSelects[0], this.nombreInformeNew)\r\n            .then(() => {\r\n                this.mensajeAlerta = `Informe Guardado correctamente`\r\n                this.tipoAlerta = 'success'\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                this.seleccionaEmpresa(this.selectValueEmpresa)\r\n            })\r\n            this.$refs.editar_informe.hide()\r\n        },\r\n        eliminarInformesConfirm(){\r\n            delInformesAnterioresNew(this.rowSelects)\r\n            .then(response => {\r\n                console.info(response.data)\r\n                this.seleccionaEmpresa(this.selectValueEmpresa)\r\n                this.mensajeAlerta = this.$t('graficos.del_informe_ok')\r\n                this.tipoAlerta = 'success'\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                this.$refs.alerta_eliminar.hide()\r\n            })\r\n            console.info('Delete Informe/s', this.rowSelects)\r\n        },\r\n        changeRowsUnique(value){\r\n            console.info(value)\r\n        },\r\n        descargaExcel(){\r\n            if(this.rowSelects.length === 1 && this.comprobacionrows()){\r\n                console.info('Correcta descarga de excel')\r\n                const result = this.historicoAnterior.filter(historico => this.rowSelects.includes(historico.id) )\r\n                window.URL = window.URL || window.webkitURL;\r\n                let xhr = new XMLHttpRequest(),\r\n                a = document.createElement('a'), file;\r\n                xhr.open('GET', `${this.$apiURLMedia}/${result[0].xlsxFile}`, true);\r\n                xhr.responseType = 'blob';\r\n                xhr.onload = function () {\r\n                    file = new Blob([xhr.response], { type : 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n                    a.href = window.URL.createObjectURL(file);\r\n                    a.download = `${result[0].nombre}.xlsx`;  // Set to whatever file name you want\r\n                    a.click();\r\n                };\r\n                xhr.send();\r\n            }\r\n            else{\r\n                this.mensajeAlerta = `\"Las acciones a realizar sobre el informe se habilitarán una vez se haya generado completamente\"`\r\n                this.tipoAlerta = `error`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n            }\r\n            console.info('Descarga Excel', this.rowSelects)\r\n        },\r\n        async descargaExcelConImagenes(){\r\n            if (this.comprobacionrows()){\r\n                //TODO ENDPOINT DE CREACION DE INFORME RETRUN NAME\r\n                let nombre=await this.nombreinforme(this.rowSelects[0])\r\n                console.log (nombre)\r\n                await this.descargarinforme(nombre)\r\n            }else{\r\n                this.mensajeAlerta = `\"Las acciones a realizar sobre el informe se habilitarán una vez se haya generado completamente\"`\r\n                this.tipoAlerta = `error`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n            }\r\n        },\r\n        nombreinforme(id){\r\n            return generarinforme(id)\r\n        },\r\n        descargarinforme(nombre){\r\n            window.URL = window.URL || window.webkitURL;\r\n                let xhr = new XMLHttpRequest(),\r\n                a = document.createElement('a'), file;\r\n                xhr.open('GET', `${this.$apiURLMedia}/${nombre['data'].data}`, true);\r\n                xhr.responseType = 'blob';\r\n                xhr.onload = function () {\r\n                    file = new Blob([xhr.response], { type : 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n                    a.href = window.URL.createObjectURL(file);\r\n                    a.download = `${nombre['data'].name}.xlsx`;  // Set to whatever file name you want\r\n                    a.click();\r\n                };\r\n                xhr.send();\r\n        },\r\n        delInforme(){\r\n            if(this.comprobacionrows()){\r\n                this.$refs.alerta_eliminar.dataVisible = true\r\n            }\r\n            else{\r\n                this.mensajeAlerta = `\"Las acciones a realizar sobre el informe se habilitarán una vez se haya generado completamente\"`\r\n                this.tipoAlerta = `error`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n            }\r\n        },\r\n        getNowCache() {\r\n            const today = new Date();\r\n            const date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n            const time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n            const dateTime = date +' '+ time;\r\n            this.timestamp = dateTime;\r\n            //return date\r\n        },\r\n        verDatosFecha(){\r\n            if(this.comprobacionrows()){\r\n                //console.info(this.rowSelects)\r\n                const result = this.historicoAnterior.filter(historico => this.rowSelects.includes(historico.id) )\r\n                //console.info(result)\r\n                this.historicoSell = result[0]\r\n            \r\n                getInformeAnteriorData(`order_${result[0].jsonFile}`)\r\n                .then(response => {\r\n                    //console.info(response.data)\r\n                    this.graficoData = response.data\r\n                    this.verImagenSent = true\r\n                    if(result[0].capa === 'NDVI'){\r\n                        this.verGraficNDVI = true\r\n                        this.verGraficMois = false\r\n                    }else{\r\n                        this.verGraficNDVI = false\r\n                        this.verGraficMois = true\r\n                    }\r\n                    this.getNowCache()\r\n                })\r\n            }\r\n            else{\r\n                this.mensajeAlerta = `\"Las acciones a realizar sobre el informe se habilitarán una vez se haya generado completamente\"`\r\n                this.tipoAlerta = `error`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n            }\r\n        },\r\n        verDatosParcelas(){\r\n            if(this.comprobacionrows()){\r\n                //console.info(this.rowSelects)\r\n                const result = this.historicoAnterior.filter(historico => this.rowSelects.includes(historico.id) )\r\n                //console.info(result)\r\n                this.historicoSell = result[0]\r\n            \r\n                getInformeAnteriorData(`${result[0].jsonFile}`)\r\n                .then(response => {\r\n                    //console.info(response.data)\r\n                    this.graficoData = response.data\r\n                    this.verImagenSent = true\r\n                    if(result[0].capa === 'NDVI'){\r\n                        this.verGraficNDVI = true\r\n                        this.verGraficMois = false\r\n                    }else{\r\n                        this.verGraficNDVI = false\r\n                        this.verGraficMois = true\r\n                    }\r\n                    this.getNowCache()\r\n                })\r\n            }\r\n            else{\r\n                this.mensajeAlerta = `Las acciones a realizar sobre el informe se habilitarán una vez se haya generado completamente`\r\n                this.tipoAlerta = `error`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n            }\r\n        },\r\n        toGenerar(id_enterprise, is_cooperative){\r\n            /*\r\n            console.info('Nombre del Gráfico ', this.nombreInforme)\r\n            console.info('Capa Seleccionada ', this.SentinelLayer)\r\n            console.info('Fechas ', this.timeValuesArr)\r\n            console.info('Parcelas ', this.rowSelects)\r\n            console.info('Es Cooperativa ', is_cooperative)\r\n            console.info('ID ', id_enterprise)\r\n            */\r\n            createInformes(this.nombreInforme, this.SentinelLayer, this.timeValuesArr, this.rowSelects, is_cooperative, id_enterprise)\r\n        },\r\n        dateFormat(date){\r\n            const dts = date.split('.')\r\n            return dts[0]\r\n        },\r\n        generarInforme(){\r\n            //console.info(this.rowSelects)\r\n            const results = this.allParcelsOfEnterprisesFilter.filter(parcel => this.rowSelects.includes(String(parcel.id)))\r\n            //console.info(results)\r\n            const enterprisesInResults = []\r\n            results.map(result => {\r\n                enterprisesInResults.push(result.properties.enterprise_id)\r\n            })\r\n            //console.info('Resultados empresa => ',enterprisesInResults)\r\n            const uniqueEmpresas = [...new Set(enterprisesInResults)]\r\n            //console.info('Unificamos empresa => ',uniqueEmpresas)\r\n            if(uniqueEmpresas.length > 1){\r\n                //*Es multiempresa\r\n                //console.info('Seleccion Multiempresa')\r\n                //Comprobar si es cooperativa\r\n                const enterprisesInResultsCoop = []\r\n                this.arrCooperativas.map(cooperative => {\r\n                    cooperative.enterprises.map(enterprise => {\r\n                        if(uniqueEmpresas.includes(enterprise.id)){\r\n                            enterprisesInResultsCoop.push(cooperative.id)\r\n                        }\r\n                    })\r\n                })\r\n                //console.info('Resultado Cooperativas => ',enterprisesInResultsCoop)\r\n                if(enterprisesInResultsCoop.length == uniqueEmpresas.length){\r\n                    console.info('Todas las empresas Pertenecen a cooperativas')\r\n                    const uniqueCoops = [...new Set(enterprisesInResultsCoop)]\r\n                    if(uniqueCoops.length > 1){\r\n                        console.info('MultiCoop')\r\n                        console.info('Cooperativas', uniqueCoops)\r\n                        console.info('No se puede generar el informe, parcelas de distintas Cooperativas')\r\n                    }else{\r\n                        console.info('UniCoop')\r\n                        console.info('Cooperativa', uniqueCoops)\r\n                        this.toGenerar(uniqueCoops[0], true)\r\n                    }\r\n                }else{\r\n                    console.info('No se puede generar el informe, Hay una empresa que no pertenece a ninguna cooperativa')\r\n                }\r\n            }else{\r\n                console.info('Seleccion Uniempresa')\r\n                this.toGenerar(uniqueEmpresas[0], false)\r\n            }\r\n        },\r\n        actionChangeDateRange(range){\r\n            console.info(range)\r\n            this.timeValuesArr = [range.startDate, range.endDate]\r\n            console.info(this.timeValuesArr)\r\n            this.time = `${range.startDate}/${range.endDate}`\r\n        },\r\n        chageCapas(capa){\r\n            this.SentinelLayer = capa\r\n        },\r\n        seleccionaEmpresa(empresa, columna='created', orden='descending'){\r\n            const arrParcels = []\r\n            if(empresa == 'all'){\r\n                getAllEnterprises()\r\n                    .then(async response => {\r\n                        response.data.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.arrEmpresas = response.data\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n                getInformesAnterioresNew(empresa, columna, orden)\r\n                    .then(response => {\r\n                        console.info(response.data)\r\n                        this.historicoAnterior = response.data\r\n                    })\r\n            }else{\r\n                const result = empresa.split('_')\r\n                if(result[0] == 'coop'){\r\n                    getCooperative(result[1])\r\n                    .then(response => {\r\n                        response.data.enterprises.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.arrEmpresas = response.data.enterprises\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n                    getInformesAnterioresNew(result[1], columna, orden)\r\n                    .then(response => {\r\n                        console.info(response.data)\r\n                        this.historicoAnterior= response.data\r\n                    })\r\n                }else{\r\n                    getEnterprise(empresa)\r\n                    .then(async response => {\r\n                        response.data.parcels.features.map(parcel => {\r\n                            arrParcels.push(parcel)\r\n                        })\r\n                        this.arrEmpresas = [response.data]\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n                    getInformesAnterioresNew(empresa, columna, orden)\r\n                    .then(response => {\r\n                        console.info(response.data)\r\n                        this.historicoAnterior= response.data\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        getNow() {\r\n            const today = new Date();\r\n            const date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n            const time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n            const dateTime = date +' '+ time;\r\n            //this.timestamp = dateTime;\r\n            console.info(dateTime)\r\n            return date\r\n        },\r\n        getNameEnterprise(value){\r\n            const result = this.arrEmpresas.filter(enterprise => enterprise.id == value)\r\n            return result[0].name\r\n        },\r\n        onBuscar(busqueda){\r\n            if(busqueda){\r\n                const result = this.allParcelsOfEnterprises.filter(parcel => parcel.properties.name.toUpperCase().includes(busqueda.toUpperCase()))\r\n                this.allParcelsOfEnterprisesFilter = result\r\n            }else{\r\n                this.allParcelsOfEnterprisesFilter = this.allParcelsOfEnterprises\r\n            }\r\n        },\r\n        actionOnPagination(ev){\r\n            this.start = ev.start-1\r\n            this.length = ev.length\r\n        },\r\n        onSort(order) {\r\n            console.info(order)\r\n            const index = order.index\r\n            let column = ``\r\n            const orden = order.order\r\n            \r\n            switch (index) {\r\n                case '0':\r\n                    column = `nombre`\r\n                    break\r\n                case '1':\r\n                    column = `capa`\r\n                    break\r\n                case '2':\r\n                    column = 'created'\r\n                    break\r\n                case '4':\r\n                    column = 'includeClouds'\r\n                    break\r\n                default:\r\n                    column = 'created'\r\n            }\r\n            this.seleccionaEmpresa(this.selectValueEmpresa, column, orden)\r\n            .then(response => {\r\n                this.historicoAnterior= response.data\r\n            })\r\n            /*\r\n            if(orden == 'ascending'){\r\n                this.allParcelsOfEnterprisesFilter.sort((a, b) => parseFloat(a.name) - parseFloat(b.name));\r\n            }\r\n            */\r\n            console.info(column)\r\n        },\r\n        comprobacionrows(){\r\n            let is_terminado\r\n            const result = this.historicoAnterior.filter(historico => this.rowSelects.includes(historico.id))\r\n            for (let i in result){\r\n                if(result[i].estado==3){\r\n                    is_terminado =true\r\n                }\r\n                else{\r\n                    return false\r\n                }\r\n            }\r\n            console.log(is_terminado)\r\n            return is_terminado\r\n        },\r\n    },\r\n    mounted: function () {\r\n        this.getNow()\r\n        //console.info('User Logged')\r\n    },\r\n    beforeCreate(){\r\n        getProfile()\r\n        .then(response => {\r\n            const user = response.data[0]\r\n            getPermisos(response.data[0].user)\r\n            .then(response => {\r\n                this.is_superuser = response.data.is_superuser\r\n                this.is_staff = response.data.is_staff\r\n                this.is_systemadmin = response.data.is_systemadmin\r\n                this.is_enterpriseadmin = response.data.is_enterpriseadmin\r\n                this.is_coop_user = user.cooperative_user\r\n                /*\r\n                //*Obtenemos la empresa del usuario\r\n                const enterprise_id = user.enterprise_id\r\n                getEnterprise(enterprise_id)\r\n                .then(async response => {\r\n                    this.parcelas = response.data.parcels\r\n                    await this.arrEmpresas.push(response.data)\r\n                    this.flagIndicatingDataHasBeenLoadedInVariables = false\r\n                    this.timestamp()\r\n                })\r\n                */\r\n                if(this.is_superuser){\r\n                    this.columnas.splice(6,0,{'label': this.$t('graficos.solicitante_informe'),'sortable': false },)\r\n                    getUsersList()\r\n                    .then(response => {\r\n                        this.usersList = response.data\r\n                    })\r\n                    getUsersListProfiles()\r\n                    .then(response => {this.usersListProfile = response.data})\r\n                }\r\n                if(this.is_superuser || this.is_systemadmin){\r\n                    console.info('entra')\r\n                    getAllEnterprises()\r\n                    .then(async response => {\r\n                        this.arrEmpresas = response.data\r\n                        this.arrEmpresasList = response.data\r\n                        const arrParcels = []\r\n                        response.data.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                    getInformesAnterioresNew()\r\n                    .then(response => {\r\n                        console.info(response.data)\r\n                        this.historicoAnterior = response.data\r\n                    })\r\n                }else if((this.is_enterpriseadmin || this.is_staff) && !this.is_coop_user){ \r\n                    getEnterprise(user.enterprise_id)\r\n                    .then(async response => {\r\n                        this.arrEmpresas = [response.data]\r\n                        this.arrEmpresasList = [response.data]\r\n                        const arrParcels = []\r\n                        response.data.parcels.features.map(parcel => {\r\n                            arrParcels.push(parcel)\r\n                        })\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                    getInformesAnterioresNew(user.enterprise_id)\r\n                    .then(response => {\r\n                        console.info(response.data)\r\n                        this.historicoAnterior= response.data\r\n                    })\r\n                }else if(this.is_coop_user){\r\n                    getCooperative(user.enterprise_id)\r\n                    .then(response => {\r\n                        this.arrCooperativas = [response.data]\r\n                        //this.arrEmpresas = response.data.enterprises\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                }\r\n\r\n                if(this.is_superuser || this.is_systemadmin){\r\n                    getAllCooperatives()\r\n                    .then(async response => {\r\n                        this.arrCooperativas = response.data\r\n                    })\r\n                }\r\n                this.isActiveLoading = false\r\n                this.isVisibleLoad = false\r\n            })\r\n        })\r\n    }\r\n}\r\n</script>"],"sourceRoot":"src/components/adminActions"}]}