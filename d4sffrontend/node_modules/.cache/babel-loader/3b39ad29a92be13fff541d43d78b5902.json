{"remainingRequest":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\src\\components\\importParcels\\InportCampanaComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\src\\components\\importParcels\\InportCampanaComponent.vue","mtime":1671530138658},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["InportCampanaComponent.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"bx--grid\">\r\n        <br>\r\n        <div id=\"txt-explicativo\" class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <h2>Importar Campaña desde .xlsx <img src=\"../../assets/agriculture-analytics.svg\" style=\"width: 40px;\"></h2>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div id=\"txt-explicativo\" class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <p>Para poder importar los datos de campaña, el Excel debe contener las pestañas \"Parcelas\", \"Datos Producción\" y \"Siembras\"</p>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"bx--row\" style=\"margin-top: 20px;\">\r\n            <div class=\"bx--col-sm-12 bx--col-md-3 bx--col-lg-3\">\r\n                <cv-select\r\n                    theme=\"\"\r\n                    :label=\"$t('map.listado_empresas')\"\r\n                    :hide-label=\"false\"\r\n                    :inline=\"false\"\r\n                    :disabled=\"false\"\r\n                    @change=\"seleccionaEmpresa\"\r\n                    v-model=\"selectValueEmpresa\"\r\n                >\r\n                    <cv-select-option :value=\"''\" disabled selected hidden>{{$t(\"map.sel_empresa\")}}</cv-select-option>\r\n                    <cv-select-optgroup label=\"Todas las Empresas\" v-if=\"is_superuser || is_systemadmin\">\r\n                        <cv-select-option :value=\"`all`\" v-if=\"is_superuser || is_systemadmin\">{{$t(\"map.most_todas_empresas\")}}</cv-select-option>\r\n                        <cv-select-option v-for=\"empresa in arrEmpresasList\" :value=\"String(empresa.id)\"  v-bind:key=\"empresa.id\">\r\n                            {{empresa.name}}\r\n                        </cv-select-option>\r\n                    </cv-select-optgroup>\r\n                    <cv-select-optgroup :label=\"`Cooperativa ${cooperativa.name}`\" v-bind:key=\"cooperativa.id\" v-for=\"cooperativa in arrCooperativas\">\r\n                        <cv-select-option :value=\"`coop_${cooperativa.id}`\">{{$t(\"map.most_todas_empresas\")}}</cv-select-option>\r\n                        <cv-select-option v-for=\"empresa in cooperativa.enterprises\" :value=\"String(empresa.id)\"  v-bind:key=\"empresa.id\">\r\n                            {{empresa.name}}\r\n                        </cv-select-option>\r\n                    </cv-select-optgroup>\r\n                </cv-select>\r\n            </div>\r\n            <div class=\"bx--col-sm-12 bx--col-md-3 bx--col-lg-3\">\r\n                <cv-file-uploader\r\n                kind=\"\"\r\n                label=\"Subir Archivo\"\r\n                helperText=\"El formato permitido es .xlsx o .xls\"\r\n                :accept=\"['.xlsx', '.xls']\"\r\n                :clear-on-reselect=\"false\"\r\n                :initial-state-uploading=\"false\"\r\n                :multiple=\"false\"\r\n                :removable=\"true\"\r\n                @change=\"onChangeFiles\"\r\n                remove-aria-label=\"Custom remove aria label\" ref=\"fileUploader\">\r\n                </cv-file-uploader>\r\n            </div>\r\n            <div class=\"bx--col-sm-12 bx--col-md-3 bx--col-lg-3\">\r\n                <cv-button\r\n                    kind=\"primary\"\r\n                    :disabled=\"false\"\r\n                    @click=\"importarCampana\"\r\n                >\r\n                    Importar\r\n                </cv-button>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <h2>Pestaña parcelas</h2>\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <p>Parcelas importadas {{procesadas.length}}</p>\r\n                <br>\r\n                <cv-data-table :columns=\"['ID', 'PARCELA', 'CULTIVO', 'VARIEDAD', 'PLANTAS POR HA']\">\r\n                    <template slot=\"data\" v-for=\"procesada in procesadas\">\r\n                        <cv-data-table-row \r\n                            v-for=\"feature in procesada\"\r\n                            :key=\"`${feature.id}`\"\r\n                            :value=\"`${feature.id}`\"\r\n                            :aria-label-for-batch-checkbox=\"`Custom aria label for row ${feature.id} batch`\"  >\r\n                            <cv-data-table-cell>{{feature.ID_FINCA}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.PARCELA}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.CULTIVO}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.VARIEDAD}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.PLANTAS_HA}}</cv-data-table-cell>\r\n                        \r\n                        \r\n                        </cv-data-table-row>\r\n                    </template>\r\n                </cv-data-table>\r\n            </div>\r\n            \r\n            <div class=\"bx--col\">\r\n                <p>Errores parcelas {{erroresParcelas.length}}</p>\r\n                <br>\r\n                <cv-data-table :columns=\"['ID FINCA', 'PARCELA', 'ERROR']\">\r\n                    <template slot=\"data\" v-for=\"error in erroresParcelas\">\r\n                        <cv-data-table-row \r\n                            v-for=\"feature in error\"\r\n                            :key=\"`${feature.id}`\"\r\n                            :value=\"`${feature.id}`\"\r\n                            :aria-label-for-batch-checkbox=\"`Custom aria label for row ${feature.id} batch`\"  >\r\n                            <cv-data-table-cell>{{feature.ID_FINCA}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.PARCELA}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.ERROR}}</cv-data-table-cell>\r\n                        </cv-data-table-row>\r\n                    </template>\r\n                </cv-data-table>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <h2>Pestaña siembra</h2>\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <p>Siembras importadas {{siembras.length}}</p>\r\n                <br>\r\n                <cv-data-table :columns=\"['ID', 'PARCELA', 'FECHAS', 'VARIEDAD', 'PLANTAS REALES HA']\">\r\n                    <template slot=\"data\" v-for=\"siembra in siembras\">\r\n                        <cv-data-table-row \r\n                            v-for=\"feature in siembra\"\r\n                            :key=\"`${feature.id}`\"\r\n                            :value=\"`${feature.id}`\"\r\n                            :aria-label-for-batch-checkbox=\"`Custom aria label for row ${feature.id} batch`\"  >\r\n                            <cv-data-table-cell>{{feature.ID_FINCA}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.PARCELA}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.FECHA_INICIO}} - {{feature.FECHA_FIN}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.VARIEDAD}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.PLANTAS_REALES_HA}}</cv-data-table-cell>\r\n                        \r\n                        \r\n                        </cv-data-table-row>\r\n                    </template>\r\n                </cv-data-table>\r\n            </div>\r\n            <div class=\"bx--col\">\r\n                <p>Errores siembras {{erroresSiembras.length}}</p>\r\n                <br>\r\n                <cv-data-table :columns=\"['ID FINCA', 'PARCELA', 'ERROR']\">\r\n                    <template slot=\"data\" v-for=\"error in erroresSiembras\">\r\n                        <cv-data-table-row \r\n                            v-for=\"feature in error\"\r\n                            :key=\"`${feature.id}`\"\r\n                            :value=\"`${feature.id}`\"\r\n                            :aria-label-for-batch-checkbox=\"`Custom aria label for row ${feature.id} batch`\"  >\r\n                            <cv-data-table-cell>{{feature.ID_FINCA}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.PARCELA}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.ERROR}}</cv-data-table-cell>\r\n                        </cv-data-table-row>\r\n                    </template>\r\n                </cv-data-table>\r\n            </div>\r\n        </div>\r\n\r\n        <br>\r\n        <h2>Pestaña Producción</h2>\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <p>Producciones importadas {{producciones.length}}</p>\r\n                <br>\r\n                <cv-data-table :columns=\"['ID', 'PARCELA', 'CULTIVO', 'VARIEDAD', 'PRODUCCION', 'FECHA TERMINO']\">\r\n                    <template slot=\"data\" v-for=\"produccion in producciones\">\r\n                        <cv-data-table-row \r\n                            v-for=\"feature in produccion\"\r\n                            :key=\"`${feature.id}`\"\r\n                            :value=\"`${feature.id}`\"\r\n                            :aria-label-for-batch-checkbox=\"`Custom aria label for row ${feature.id} batch`\"  >\r\n                            <cv-data-table-cell>{{feature.ID_FINCA}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.PARCELA}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.CULTIVO}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.VARIEDAD}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.PRODUCCION}} {{feature.TIPO_UD}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.FECHA_FIN}}</cv-data-table-cell>\r\n                        \r\n                        \r\n                        </cv-data-table-row>\r\n                    </template>\r\n                </cv-data-table>\r\n            </div>\r\n            <div class=\"bx--col\">\r\n                <p>Errores producción {{erroresProducciones.length}}</p>\r\n                <br>\r\n                <cv-data-table :columns=\"['ID FINCA', 'PARCELA', 'ERROR']\">\r\n                    <template slot=\"data\" v-for=\"error in erroresProducciones\">\r\n                        <cv-data-table-row \r\n                            v-for=\"feature in error\"\r\n                            :key=\"`${feature.id}`\"\r\n                            :value=\"`${feature.id}`\"\r\n                            :aria-label-for-batch-checkbox=\"`Custom aria label for row ${feature.id} batch`\"  >\r\n                            <cv-data-table-cell>{{feature.ID_FINCA}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.PARCELA}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.ERROR}}</cv-data-table-cell>\r\n                        </cv-data-table-row>\r\n                    </template>\r\n                </cv-data-table>\r\n            </div>\r\n        </div>\r\n        <br>\r\n\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <cv-button\r\n                    kind=\"primary\"\r\n                    :disabled=\"totalParcelas ? false : true\"\r\n                    @click=\"importarCampanaConfirmar\">\r\n                    Confirmar importación\r\n                </cv-button>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        \r\n        <cv-modal\r\n            close-aria-label=\"Cerrar\"\r\n            size=\"large\"\r\n            :visible=\"visibleModal\"\r\n            @primary-click=\"actionPrimary\"\r\n            @modal-hidden=\"actionVisibleModal(false)\"\r\n            :auto-hide-off=\"false\">\r\n            <template v-if=\"true\" slot=\"title\">Selección de Parcelas</template>\r\n            <template v-if=\"false\" slot=\"title\">{{empresa.name}}</template>\r\n            <template v-if=\"true\" slot=\"content\" style=\"padding-right: 0%\">\r\n                <p>Selecciona a continuación las parcelas sobre las que quieres realizar la consulta. Puedes utilizar el buscador para encontrar la/s parcela/s que necesitas. Para poder ver el nombre de todas las parcelas, por favor utiliza el selector que encontrarás en la parte inferior de la tabla.</p>\r\n                <cv-data-table\r\n                :sortable=\"false\"\r\n                :pagination=\"{ \r\n                    numberOfItems: allParcelsOfEnterprisesFilter.length, \r\n                    pageSizes: [\r\n                        {\r\n                            value: 10,\r\n                            label: '10'\r\n                        }, \r\n                        {\r\n                            value: 15,\r\n                            label: '15'\r\n                        },\r\n                        {\r\n                            value: 20,\r\n                            label: '20'\r\n                        }, \r\n                        {\r\n                            value: 25,\r\n                            label: '25'\r\n                        }, \r\n                        {\r\n                            value: allParcelsOfEnterprisesFilter.length,\r\n                            label: 'Todas'\r\n                        }\r\n                    ] \r\n                }\" \r\n                @pagination=\"actionOnPagination\"\r\n                :columns=\"[\r\n                    {\r\n                        key: 'name',\r\n                        label: this.$t('graficos.nombre'),\r\n                        'sortable': false\r\n                    },\r\n                    {\r\n                        key: 'description',\r\n                        label: this.$t('graficos.descrip'),\r\n                        'sortable': false\r\n                    },\r\n                    {\r\n                        key: 'heactareas',\r\n                        label: this.$t('graficos.hectareas'),\r\n                        'sortable': false\r\n                    },\r\n                    {\r\n                        key: 'enterprise',\r\n                        label: 'Empresa',\r\n                        'sortable': false\r\n                    },\r\n                ]\"\r\n                @sort=\"onSort\"\r\n                v-model=\"rowSelects\"\r\n                ref=\"tableLstadoT2MultiCoop\"\r\n                searchLabel=\"Filter\" searchPlaceholder=\"Filter\" searchClearLabel=\"Clear filter\"\r\n            >\r\n                <template v-if=\"true\" slot=\"actions\">\r\n                    <cv-search :placeholder=\"$t('graficos.buscar_nombre')\" @input=\"onBuscar\"></cv-search>\r\n                </template>\r\n                <template v-if=\"true\" slot=\"batch-actions\">\r\n                    <cv-button>\r\n                        \r\n                    </cv-button>  \r\n                </template>\r\n                <template slot=\"data\">\r\n                    <cv-data-table-row\r\n                        v-for=\"feature in allParcelsOfEnterprisesFilter.slice(start, start+length)\"\r\n                        :key=\"`${feature.id}`\"\r\n                        :value=\"`${feature.id}`\"\r\n                        :aria-label-for-batch-checkbox=\"`Custom aria label for row ${feature.id} batch`\"\r\n                    >\r\n                        <cv-data-table-cell>{{is_superuser ? feature.id+' - ' : ''}}{{feature.properties.name}}</cv-data-table-cell>\r\n                        <cv-data-table-cell>{{feature.properties.description}}</cv-data-table-cell>\r\n                        <cv-data-table-cell>{{feature.properties.area}}</cv-data-table-cell>\r\n                        <cv-data-table-cell>{{getNameEnterprise(feature.properties.enterprise_id)}}</cv-data-table-cell>\r\n                    </cv-data-table-row>\r\n                </template>\r\n            </cv-data-table>\r\n            </template>\r\n            <template slot=\"primary-button\">Seleccionar</template>\r\n        </cv-modal>\r\n        <AlertaGeneral ref=\"alertaGenerall\" :tituloAlert=\"mensajeAlerta\" :tipoAlert=\"tipoAlerta\" />\r\n        <cv-loading\r\n            :active=\"isActiveLoading\"\r\n            :overlay=\"true\">\r\n        </cv-loading>\r\n\r\n    \r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {getProfile, getPermisos} from '@/auth/index'\r\nimport {getAllEnterprises, getEnterprise} from '@/crudFunctions/crudEnterprise'//getFechasSentinelForInformes\r\nimport {getAllCooperatives, getCooperative} from '@/crudFunctions/crudCooperativas'\r\nimport {importCampanaFromFile} from '@/crudFunctions/crudEnterprise'\r\nimport AlertaGeneral from \"@/components/AlertaGeneral\";\r\nexport default {\r\n    name: 'Monitor',\r\n    components: {AlertaGeneral},\r\n    data(){\r\n        return {\r\n            isActiveLoading: false,\r\n            exportarExcel: false,\r\n            //\r\n            keyComponentMonitor: 0,\r\n            visibleModal: false,\r\n            data: {},\r\n            fechasArr: Array(),\r\n            //\r\n            selectValueEmpresa: '',\r\n            //\r\n            flagIndicatingDataHasBeenLoadedInVariables: false,\r\n            //Usuario\r\n            is_superuser: false,\r\n            is_staff: false,\r\n            is_systemadmin: false,\r\n            is_enterpriseadmin: false,\r\n            is_coop_user: false,\r\n            //Empresas sel\r\n            arrEmpresas: [],\r\n            arrEmpresasList: [],\r\n            arrCooperativas: [],\r\n            allParcelsOfEnterprises: [],\r\n            allParcelsOfEnterprisesFilter: [],\r\n            //\r\n            start: 0,\r\n            length: 10,\r\n            //\r\n            rowSelects: [],\r\n            selectValueCapa: '',\r\n            //\r\n            SentinelLayer: 'NDVI',\r\n            calOptions: {\r\n                \"dateFormat\": \"Y-m-d\"\r\n            },\r\n            time: ``,\r\n            valueDates: [],\r\n            valueRange: [],\r\n            timeValuesArr: [],\r\n            nombreInforme: `Gráfico - ${this.getNow()}`,\r\n            checked_clouds: false,\r\n            //\r\n            tipoAlerta: `error`,\r\n            mensajeAlerta: '',\r\n            //\r\n            fechasParcelasNumImages: {},\r\n            verCargandoImagenes: false,\r\n            //\r\n            disabledGenerar: false,\r\n            //\r\n            verErrorIntervalo: false,\r\n            verCargandoFechasBbox: false,\r\n            //\r\n            initialStep: 1,\r\n            steps: [\r\n                \"Nombre de informe y Selección de Parcelas\",\r\n                \"Selección de capas y Nubes\",\r\n                \"Selección de Fechas\",\r\n                \"Resumen de Informe\",\r\n            ],\r\n            open: [false, false, false, false],\r\n            verTimeoutNumImg: false,\r\n            //\r\n            file: null,\r\n            procesadas: [],\r\n            erroresParcelas: [],\r\n            cambiadas: [],\r\n            totalParcelas: 0,\r\n            siembras: [],\r\n            erroresSiembras: [],\r\n            producciones: [],\r\n            erroresProducciones: []\r\n        }\r\n    },\r\n    methods: {\r\n        actionVisibleModal(action){\r\n            this.visibleModal = action\r\n        },\r\n        \r\n        onChangeFiles(file){\r\n            this.file = file\r\n        },\r\n        importarCampana(){\r\n            if(!this.file){\r\n                console.info('No hay archivo')\r\n                this.mensajeAlerta = `Debe seleccionar un archivo`\r\n                this.tipoAlerta = `error`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                return\r\n            }\r\n            if(!this.selectValueEmpresa){\r\n                console.info('No hay empresa')\r\n                this.mensajeAlerta = `Debe seleccionar una empresa`\r\n                this.tipoAlerta = `error`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                return\r\n            }\r\n            console.info('Importando campaña')\r\n            this.isActiveLoading = true\r\n            importCampanaFromFile(this.file[0].file, this.selectValueEmpresa, false)\r\n            .then(response => {\r\n                \r\n                this.isActiveLoading = false\r\n\r\n                const formattedProcesadas = []\r\n                var parcelasTotales = 0\r\n                response.data.campanas.map(item => {\r\n                    formattedProcesadas.push([item])\r\n                    parcelasTotales++\r\n                })\r\n                const formattedErroresParcelas = []\r\n                response.data.erroresParcelas.map(item => {\r\n                    formattedErroresParcelas.push([item])\r\n                })\r\n\r\n                const formattedSiembra = []\r\n                response.data.siembra.map(item => {\r\n                    formattedSiembra.push([item])\r\n                })\r\n                const formattedErroresSiembra = []\r\n                response.data.erroresSiembra.map(item => {\r\n                    formattedErroresSiembra.push([item])\r\n                })\r\n\r\n                const formattedProduccion = []\r\n                response.data.produccion.map(item => {\r\n                    formattedProduccion.push([item])\r\n                })\r\n                const formattedErroresProduccion = []\r\n                response.data.erroresProduccion.map(item => {\r\n                    formattedErroresProduccion.push([item])\r\n                })\r\n\r\n                this.procesadas = formattedProcesadas\r\n                this.erroresParcelas = formattedErroresParcelas\r\n\r\n                this.siembras = formattedSiembra\r\n                this.erroresSiembras = formattedErroresSiembra\r\n\r\n                this.producciones = formattedProduccion\r\n                this.erroresProducciones = formattedErroresProduccion\r\n                this.totalParcelas = parcelasTotales\r\n\r\n\r\n            })\r\n            .catch(error => {\r\n                this.isActiveLoading = false\r\n                console.error(error)\r\n                this.mensajeAlerta = `Error al importar campaña`\r\n                this.tipoAlerta = `error`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n            })\r\n        },\r\n\r\n        importarCampanaConfirmar(){\r\n            if(!this.file){\r\n                console.info('No hay archivo')\r\n                this.mensajeAlerta = `Debe seleccionar un archivo`\r\n                this.tipoAlerta = `error`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                return\r\n            }\r\n            if(!this.selectValueEmpresa){\r\n                console.info('No hay empresa')\r\n                this.mensajeAlerta = `Debe seleccionar una empresa`\r\n                this.tipoAlerta = `error`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                return\r\n            }\r\n            console.info('Importando campaña')\r\n            this.isActiveLoading = true\r\n            importCampanaFromFile(this.file[0].file, this.selectValueEmpresa, true)\r\n            .then(() => {\r\n                this.isActiveLoading = false\r\n                this.mensajeAlerta = `Campaña importada correctamente`\r\n                this.tipoAlerta = `success`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n\r\n            })\r\n            .catch(error => {\r\n                this.isActiveLoading = false\r\n                console.error(error)\r\n                this.mensajeAlerta = `Error al importar campaña`\r\n                this.tipoAlerta = `error`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n            })\r\n        },\r\n        \r\n        seleccionaEmpresa(empresa){\r\n            const arrParcels = []\r\n            if(empresa == 'all'){\r\n                getAllEnterprises()\r\n                    .then(async response => {\r\n                        response.data.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.arrEmpresas = response.data\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n            }else{\r\n                const result = empresa.split('_')\r\n                if(result[0] == 'coop'){\r\n                    getCooperative(result[1])\r\n                    .then(response => {\r\n                        response.data.enterprises.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.arrEmpresas = response.data.enterprises\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n                }else{\r\n                    getEnterprise(empresa)\r\n                    .then(async response => {\r\n                        response.data.parcels.features.map(parcel => {\r\n                            arrParcels.push(parcel)\r\n                        })\r\n                        this.arrEmpresas = [response.data]\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        getNow() {\r\n            const today = new Date();\r\n            const date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n            //const time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n            //const dateTime = date +' '+ time;\r\n            //this.timestamp = dateTime;\r\n            //console.info(dateTime)\r\n            return date\r\n        },\r\n        getNameEnterprise(value){\r\n            const result = this.arrEmpresas.filter(enterprise => enterprise.id == value)\r\n            return result[0].name\r\n        },\r\n        onBuscar(busqueda){\r\n            if(busqueda){\r\n                const result = this.allParcelsOfEnterprises.filter(parcel => parcel.properties.name.toUpperCase().includes(busqueda.toUpperCase()))\r\n                this.allParcelsOfEnterprisesFilter = result\r\n            }else{\r\n                this.allParcelsOfEnterprisesFilter = this.allParcelsOfEnterprises\r\n            }\r\n        },\r\n        actionOnPagination(ev){\r\n            this.start = ev.start-1\r\n            this.length = ev.length\r\n        },\r\n        onSort(order) {\r\n            const index = order.index\r\n            let column = ``\r\n            const orden = order.order\r\n            \r\n            switch (index) {\r\n                case '0':\r\n                    column = `name`\r\n                    break\r\n                case '1':\r\n                    column = `name`\r\n                    break\r\n                case '2':\r\n                    column = 'area'\r\n                    break\r\n                case '3':\r\n                    column = 'enterprise'\r\n                    break\r\n                default:\r\n                    column = `name`\r\n            }\r\n            if(orden == 'ascending'){\r\n                this.allParcelsOfEnterprisesFilter.sort((a, b) => parseFloat(a.name) - parseFloat(b.name));\r\n            }\r\n            console.info(column)\r\n        },\r\n    },\r\n    mounted: function () {\r\n        //console.info(this.$refs.acc)\r\n        this.getNow()\r\n        //console.info('User Logged')\r\n    },\r\n    beforeCreate(){\r\n        getProfile()\r\n        .then(response => {\r\n            const user = response.data[0]\r\n            getPermisos(response.data[0].user)\r\n            .then(response => {\r\n                this.is_superuser = response.data.is_superuser\r\n                this.is_staff = response.data.is_staff\r\n                this.is_systemadmin = response.data.is_systemadmin\r\n                this.is_enterpriseadmin = response.data.is_enterpriseadmin\r\n                this.is_coop_user = user.cooperative_user\r\n                /*\r\n                //*Obtenemos la empresa del usuario\r\n                const enterprise_id = user.enterprise_id\r\n                getEnterprise(enterprise_id)\r\n                .then(async response => {\r\n                    this.parcelas = response.data.parcels\r\n                    await this.arrEmpresas.push(response.data)\r\n                    this.flagIndicatingDataHasBeenLoadedInVariables = false\r\n                    this.timestamp()\r\n                })\r\n                */\r\n                \r\n                if(this.is_superuser || this.is_systemadmin){\r\n                    //console.info('entra')\r\n                    getAllEnterprises()\r\n                    .then(async response => {\r\n                        this.arrEmpresas = response.data\r\n                        this.arrEmpresasList = response.data\r\n                        const arrParcels = []\r\n                        response.data.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                }else if((this.is_enterpriseadmin || this.is_staff) && !this.is_coop_user){ \r\n                    getEnterprise(user.enterprise_id)\r\n                    .then(async response => {\r\n                        this.arrEmpresas = [response.data]\r\n                        this.arrEmpresasList = [response.data]\r\n                        const arrParcels = []\r\n                        response.data.parcels.features.map(parcel => {\r\n                            arrParcels.push(parcel)\r\n                        })\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                }else if(this.is_coop_user){\r\n                    getCooperative(user.enterprise_id)\r\n                    .then(response => {\r\n                        this.arrCooperativas = [response.data]\r\n                        //this.arrEmpresas = response.data.enterprises\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                }\r\n\r\n                if(this.is_superuser || this.is_systemadmin){\r\n                    getAllCooperatives()\r\n                    .then(async response => {\r\n                        this.arrCooperativas = response.data\r\n                    })\r\n                }\r\n                this.isActiveLoading = false\r\n                this.isVisibleLoad = false\r\n            })\r\n        })\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n    .bx--accordion__content{\r\n        padding-right: 0px!important;\r\n    }\r\n</style>"],"sourceRoot":"src/components/importParcels"}]}