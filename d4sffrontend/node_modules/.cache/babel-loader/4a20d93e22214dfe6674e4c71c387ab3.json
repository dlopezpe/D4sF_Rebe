{"remainingRequest":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\src\\components\\MapComponent4.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\src\\components\\MapComponent4.vue","mtime":1709553265780},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\babel.config.js","mtime":1681217492507},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681731147886},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1681731147886},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1681731156386},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681731147886},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1681731148945}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["getProfile","getPermisos","getAllEnterprises","getLayersFromSentinel","getEnterprise","getAllCooperatives","getCooperative","ControllerPanel","ControllerPanel4Mobile","ControllerQuickEdit","ControllerGoogleSearch","ControllerQuickCreate","checkValidPolygon","proj4","Style","Text","Fill","Stroke","L","getArea","axios","name","components","data","flagparcela","zoomParcela","flagIndicatingDataHasBeenLoadedInVariables","is_superuser","is_staff","is_systemadmin","is_enterpriseadmin","is_coop_user","apiKeyBing","$apiKeyBing","imagerySetBing","zoom","center","maxZoomBing","isActiveLoading","isVisibleLoad","parcelas","arrEmpresas","arrCooperativas","arrEmpresas4List","urlSentinel","$sentinelURL","minZoom","maxZoom","preset","layers","time","getNow","serverType","opacitylayer","transition","SentinelLayer","timestamp","timestampSentinel","timestampDrawPolygon","checkedToggleMostarTexto","layersSelector","keyModificar","allParcelsOfEnterprises","allParcelsOfEnterprisesFilter","ifQuickEdit","showSolapamientoAlert","parcelSelected","Object","verErrorDraw","errorDrawMsg","guardadoOKMsg","coordinatesPoly","featuresNewPolygon","verCrearParcel","verCrearParcelDraw","empresaSelForCreateParcel","refreshDibujo","valueDesc","valueName","areaForNewPolygon","user","coordenadasPunto","olcultarInconoUbi","methods","isMobile","test","navigator","userAgent","getNowSentinel","today","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","dateTime","getNowRefreshDrawPolygon","pointsStyleFunc","feature","baseStyle","fill","color","stroke","with","text","overflow","get","toFixed","metricaparcela","font","width","area","onehecttoAcre","acre","metric","selecionaPolygon","po","result","filter","parcel","id","id_","coordenadasGeometricas","getGeometry","getExtent","ex","ye","source","Proj","dest","newCenter","enterprise_id","values_","description","comprobarCoordenadas","getCoordinates","terminadoNewPolygon","p","console","info","Math","round","coordinatesEditadas","editado","warn","features","array_","getBBOX","polygon","geometry","coordinates","bboxP","getBounds","_northEast","lng","lat","_southWest","getBBOX2","coords","enterprise","idParcela","Array","polygonObject","i","length","then","response","parcelsName","map","resultado","properties","$t","compruebaParcelaSimple","path","$apiURL","defaults","headers","common","sessionStorage","getItem","catch","error","mounted","beforeCreate","cooperative_user","arrParcels","empresaFirst","parcels","push"],"sources":["src/components/MapComponent4.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <cv-loading\r\n            :small=\"true\"\r\n            :active=\"true\"\r\n            :overlay=\"false\" v-if=\"true\" id=\"cargando\"></cv-loading>\r\n        <vl-map\r\n            :load-tiles-while-animating=\"false\"\r\n            :load-tiles-while-interacting=\"false\"\r\n            data-projection=\"EPSG:4326\"\r\n            style=\"height: 400px\"\r\n            id=\"map\"\r\n            class=\"mapa\"\r\n            ref=\"map\"\r\n            \r\n        >\r\n            <vl-view :zoom.sync=\"zoom\" :center=\"center\"></vl-view> \r\n            \r\n            \r\n            <!-- manda las solicitudes a https://services.sentinel-hub.com/ogc/wms/ac3c509d-17c1-43b5-8595-45f800ae2e30/?MAXCC= -->\r\n            <vl-layer-tile :id=\"`wmts_${enterprise.id}`\" :opacity=\"opacitylayer\" v-bind:key=\"`${enterprise.id}_layers_${timestampSentinel}`\" v-for=\"enterprise in arrEmpresas\" :z-index=\"2\">\r\n                <vl-source-wms\r\n                    v-if=\"enterprise.parcels.features.length\"\r\n                    :key=\"`${enterprise.id}_${timestampSentinel}`\" \r\n                    :url=\"`${urlSentinel}${enterprise.sentinel_instance}/?MAXCC=100&v=${timestampSentinel}&`\"\r\n                    :urlProcessingApi=\"`${urlSentinel}${enterprise.sentinel_instance}/?MAXCC=100&&v=${timestampSentinel}&`\"\r\n                    maxcc=\"100\"\r\n                    :minZoom=\"minZoom\"\r\n                    :maxZoom=\"maxZoom\"\r\n                    :preset=\"preset\"\r\n                    :layers=\"SentinelLayer\"\r\n                    :time.sync=\"time\"\r\n                    :serverType=\"serverType\"\r\n                    :opacity=\"opacitylayer\"\r\n                    :transition='transition'\r\n                    :tiled = false\r\n                />\r\n            </vl-layer-tile>\r\n            <!-- marca las lineas de la parcelas -->\r\n            <vl-layer-vector v-for=\"enterprise in arrEmpresas\" v-bind:key=\"`${enterprise.id}_1_${timestamp}`\" :z-index=\"3\">\r\n                <vl-source-vector ref=\"drawTarget\" v-if=\"enterprise.parcels\" :features=\"enterprise.parcels.features\" />\r\n                <vl-style-func :factory=\"pointsStyleFunc\" />\r\n            </vl-layer-vector>\r\n            \r\n            <vl-interaction-select v-if=\"verCrearParcel\" :id=\"`modify_target_${timestamp}`\" ref=\"selectInteraction\" ident=\"modify-target\" @select=\"selecionaPolygon\" :key=\"timestampSentinel\"></vl-interaction-select>\r\n            <vl-interaction-modify v-if=\"verCrearParcel\" source=\"modify-target\" @modifyend=\"editado\"></vl-interaction-modify>\r\n            <!-- posiblemente marca con color a las parcelas guardadas -->\r\n            <vl-layer-vector :z-index=\"4\" v-bind:key=\"`the_source_indent_${timestampDrawPolygon}`\">\r\n                <vl-source-vector ident=\"the-source\" :features.sync=\"featuresNewPolygon\"></vl-source-vector>\r\n                <vl-style-box>\r\n                    <vl-style-stroke color=\"green\"></vl-style-stroke>\r\n                    <vl-style-fill color=\"rgba(255,255,255,0.5)\"></vl-style-fill>\r\n                </vl-style-box>\r\n            </vl-layer-vector>\r\n\r\n            <vl-interaction-draw v-bind:key=\"`the_source_${timestampDrawPolygon}`\" type=\"Polygon\" source=\"the-source\" v-if=\"!verCrearParcel && !verCrearParcelDraw\" @drawend=\"terminadoNewPolygon\"></vl-interaction-draw>\r\n\r\n            <vl-feature v-if=\"!olcultarInconoUbi\">\r\n                <vl-geom-point :coordinates.sync=\"coordenadasPunto\"></vl-geom-point>\r\n                <vl-style-box>\r\n                    <vl-style-icon src=\"https://d4smartfarming.smartbits-es.com/imgMail/icono-mapa.png\"></vl-style-icon>\r\n                </vl-style-box>\r\n            </vl-feature>\r\n            <!-- conforma las imagenes del mapa total -->\r\n            <vl-layer-tile id=\"bingmaps\">\r\n                <vl-source-bingmaps :api-key=\"apiKeyBing\" :imagery-set=\"imagerySetBing\" :maxZoom=\"maxZoomBing\"></vl-source-bingmaps>\r\n            </vl-layer-tile>\r\n            \r\n        </vl-map>\r\n        \r\n        <template v-if=\"flagIndicatingDataHasBeenLoadedInVariables\">\r\n            <ControllerPanel\r\n                v-if=\"!isMobile()\"\r\n                :username=\"name\" \r\n                :arr-enterprises=\"arrEmpresas4List\"\r\n                :arr-cooperativas=\"arrCooperativas\"\r\n                :is_superuser=\"is_superuser\"\r\n                :is_systemadmin=\"is_systemadmin\"\r\n                :is_staff=\"is_staff\"\r\n                :is_enterpriseadmin=\"is_enterpriseadmin\"\r\n                :is_coop_user=\"is_coop_user\"\r\n                :checked-toggle-mostar-texto=\"checkedToggleMostarTexto\"\r\n                :layers-selector=\"layersSelector\"\r\n                :map-component=\"$refs.map.$map\"\r\n                :all-parcels-of-enterprises=\"allParcelsOfEnterprises\"\r\n                :all-parcels-of-enterprises-filter=\"allParcelsOfEnterprisesFilter\"\r\n                :sentinel-layer=\"SentinelLayer\"\r\n\r\n                v-on:setToggleAlertSolpamiento=\"showSolapamientoAlert = $event\"\r\n\r\n                v-on:setCenter=\"center = $event\"  \r\n                v-on:setflagparcela=\"zoom=$event\"  \r\n                v-on:setCenterLocation=\"coordenadasPunto = $event\"  \r\n                v-on:setToggleMostrarTexto=\"checkedToggleMostarTexto = $event, getNow()\"\r\n                v-on:setEnterprise=\"arrEmpresas = $event, getNow(), arrEmpresas4List = $event\"\r\n                v-on:setSentinelLayer=\"getNowSentinel(), SentinelLayer = $event\"\r\n                v-on:setSentinelClearCache=\"getNowSentinel()\"\r\n                v-on:setSentinelOpacity=\"opacitylayer = $event\"\r\n                v-on:setFechaSentinel=\"time = $event\"\r\n                v-on:setAllParcelsOfEnterprises=\"allParcelsOfEnterprises = $event, allParcelsOfEnterprisesFilter = $event\"\r\n                v-on:setAllParcelsOfEnterprisesFilter=\"allParcelsOfEnterprisesFilter = $event\"\r\n                v-on:setOcultarInconoUbi=\"olcultarInconoUbi = $event\"\r\n            />\r\n            <ControllerPanel4Mobile\r\n                v-if=\"isMobile()\"\r\n                :username=\"name\" \r\n                :arr-enterprises=\"arrEmpresas4List\"\r\n                :arr-cooperativas=\"arrCooperativas\"\r\n                :is_superuser=\"is_superuser\"\r\n                :is_systemadmin=\"is_systemadmin\"\r\n                :checked-toggle-mostar-texto=\"checkedToggleMostarTexto\"\r\n                :layers-selector=\"layersSelector\"\r\n                :map-component=\"$refs.map.$map\"\r\n                :all-parcels-of-enterprises=\"allParcelsOfEnterprises\"\r\n                :all-parcels-of-enterprises-filter=\"allParcelsOfEnterprisesFilter\"\r\n                :sentinel-layer=\"SentinelLayer\"\r\n\r\n                v-on:setflagparcela=\"zoom=$event\"\r\n                v-on:setCenter=\"center = $event\"  \r\n                v-on:setToggleMostrarTexto=\"checkedToggleMostarTexto = $event, getNow()\"\r\n\r\n                v-on:setToggleAlertSolpamiento=\"showSolapamientoAlert = $event\"\r\n                \r\n                \r\n                v-on:setEnterprise=\"arrEmpresas = $event, getNow(), arrEmpresas4List = $event\"\r\n                v-on:setSentinelLayer=\"getNowSentinel(), SentinelLayer = $event\"\r\n                v-on:setSentinelClearCache=\"getNowSentinel()\"\r\n                v-on:setSentinelOpacity=\"opacitylayer = $event\"\r\n                v-on:setFechaSentinel=\"time = $event\"\r\n                v-on:setAllParcelsOfEnterprises=\"allParcelsOfEnterprises = $event, allParcelsOfEnterprisesFilter = $event\"\r\n                v-on:setAllParcelsOfEnterprisesFilter=\"allParcelsOfEnterprisesFilter = $event\"\r\n            />\r\n            <ControllerQuickEdit \r\n                v-if=\"ifQuickEdit && !is_coop_user && !is_staff\"\r\n                :parcel-selected=\"parcelSelected\"\r\n                :error-draw-msg=\"errorDrawMsg\"\r\n                :ver-error-draw=\"verErrorDraw\"\r\n                :coordinates-poly=\"coordinatesPoly\"\r\n                :value-name=\"valueName\"\r\n                :value-desc=\"valueDesc\"\r\n                :arr-enterprises=\"arrEmpresas\"\r\n                :arr-cooperativas=\"arrCooperativas\"\r\n                :area-for-new-polygon=\"areaForNewPolygon\"\r\n\r\n\r\n                v-on:setClearFeatures=\"featuresNewPolygon = []\"\r\n                v-on:setVerCrearParcel=\"verCrearParcel = $event\"\r\n                v-on:setVerCrearParcelDraw=\"verCrearParcelDraw = $event\"\r\n                \r\n                v-on:setcoordinatesPoly=\"coordinatesPoly = $event, featuresNewPolygon = []\"\r\n                v-on:setifQuickEdit=\"ifQuickEdit = $event\"\r\n                \r\n                v-on:setverErrorDraw=\"verErrorDraw = $event\"\r\n                v-on:setSentinelClearCache=\"getNowSentinel()\"\r\n                v-on:setClearParcels=\"getNow()\"\r\n                v-on:setEnterprise=\"arrEmpresas = $event, getNow(), arrEmpresas4List = $event\"\r\n                v-on:setAllParcelsOfEnterprises=\"allParcelsOfEnterprises = $event, allParcelsOfEnterprisesFilter = $event\"\r\n\r\n            />\r\n            <ControllerGoogleSearch\r\n                v-on:setCenter=\"center = $event, coordenadasPunto = $event\"  \r\n            />\r\n            \r\n            <ControllerQuickCreate \r\n                v-if=\"!ifQuickEdit && !is_coop_user && !is_staff\"\r\n                :ver-crear-parcel=\"verCrearParcel\"\r\n                :error-draw-msg=\"errorDrawMsg\"\r\n                :ver-error-draw=\"verErrorDraw\"\r\n                :coordinates-poly=\"coordinatesPoly\"\r\n                :arr-enterprises=\"arrEmpresas4List\"\r\n                :arr-enterprises-selected=\"empresaSelForCreateParcel ? empresaSelForCreateParcel : arrEmpresas\"\r\n                :arr-cooperativas=\"arrCooperativas\"\r\n                :is_superuser=\"is_superuser\"\r\n                :is_systemadmin=\"is_systemadmin\"\r\n                :area-for-new-polygon=\"areaForNewPolygon\"\r\n                :user=\"user\"\r\n\r\n                v-on:setVerCrearParcel=\"verCrearParcel = $event\"\r\n                v-on:setverErrorDraw=\"verErrorDraw = $event\"\r\n                v-on:setEnterpriseSelect=\"empresaSelForCreateParcel = $event\"\r\n                v-on:setClearFeatures=\"featuresNewPolygon = []\"\r\n                v-on:setVerCrearParcelDraw=\"verCrearParcelDraw = $event\"\r\n                v-on:clearCacheDraw=\"getNowRefreshDrawPolygon()\"\r\n                v-on:setSentinelClearCache=\"getNowSentinel()\"\r\n                v-on:setcoordinatesPoly=\"coordinatesPoly = $event, featuresNewPolygon = []\"\r\n                v-on:setEnterprise=\"arrEmpresas = $event, getNow(), arrEmpresas4List = $event\"\r\n                v-on:setAllParcelsOfEnterprises=\"allParcelsOfEnterprises = $event, allParcelsOfEnterprisesFilter = $event\"\r\n            />\r\n        </template>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {getProfile, getPermisos} from '@/auth/index'\r\nimport {getAllEnterprises, getLayersFromSentinel, getEnterprise} from '@/crudFunctions/crudEnterprise'//getEnterprise\r\nimport {getAllCooperatives, getCooperative} from '@/crudFunctions/crudCooperativas'\r\nimport ControllerPanel from '@/components/mapController/ControllerPanel.vue'\r\nimport ControllerPanel4Mobile from '@/components/mapController/ControllerPanel4Mobile.vue'\r\nimport ControllerQuickEdit from '@/components/mapController/ControllerQuickEdit.vue'\r\nimport ControllerGoogleSearch from '@/components/mapController/ControllerGoogleSearch.vue'\r\nimport ControllerQuickCreate from '@/components/mapController/ControllerQuickCreate.vue'\r\nimport {checkValidPolygon} from '@/crudFunctions/crudEnterprise'\r\nimport proj4 from 'proj4'\r\nimport Style from 'ol/style/Style'\r\nimport Text from 'ol/style/Text'\r\nimport Fill from 'ol/style/Fill'\r\nimport Stroke from 'ol/style/Stroke'\r\nimport L from 'leaflet'\r\nimport { getArea } from 'ol/sphere';\r\nimport axios from 'axios'\r\n//import Polygon from 'ol/geom/Polygon'\r\nexport default {\r\n    name: 'MapComponent4',\r\n    components: {ControllerPanel, ControllerQuickEdit, ControllerGoogleSearch,ControllerPanel4Mobile, ControllerQuickCreate\r\n    },\r\n    data() {\r\n        return {\r\n            flagparcela:false,\r\n            zoomParcela:16.5,\r\n            flagIndicatingDataHasBeenLoadedInVariables: false,\r\n            //Usuario\r\n            is_superuser: false,\r\n            is_staff: false,\r\n            is_systemadmin: false,\r\n            is_enterpriseadmin: false,\r\n            is_coop_user: false,\r\n            //BingMap\r\n            apiKeyBing: this.$apiKeyBing,\r\n            imagerySetBing: `AerialWithLabels`,\r\n            zoom: 15,\r\n            center: [-3.8225970954841486, 40.28385074244977 ],\r\n            maxZoomBing: 20,\r\n            isActiveLoading: false,\r\n            isVisibleLoad: false,\r\n            name: 'pruebas',\r\n            //Parcelas\r\n            parcelas: {},\r\n            //Empresas sel\r\n            arrEmpresas: [],\r\n            arrCooperativas: [],\r\n            arrEmpresas4List: [],\r\n            //Sentinel layer tile controller\r\n            urlSentinel: `${this.$sentinelURL}/ogc/wms/`,\r\n            minZoom:6,\r\n            maxZoom:16,\r\n            preset:'AGRICULTURE',\r\n            layers:'AGRICULTURE',\r\n            time:`2019-01-01/${this.getNow()}`,\r\n            serverType: 'geoserver',\r\n            opacitylayer: 0.5,\r\n            transition: 0,\r\n            SentinelLayer: 'AGRICULTURE',\r\n            timestamp: 0,\r\n            timestampSentinel: 0,\r\n            timestampDrawPolygon: 0,\r\n            checkedToggleMostarTexto: false,\r\n            layersSelector: [],\r\n            //ModificarParcela\r\n            keyModificar: 0,\r\n            allParcelsOfEnterprises: [],\r\n            allParcelsOfEnterprisesFilter: [],\r\n            ifQuickEdit: false,\r\n            showSolapamientoAlert: true,\r\n            \r\n            parcelSelected: Object,\r\n            verErrorDraw: false,\r\n            errorDrawMsg: '',\r\n            guardadoOKMsg: '',\r\n            coordinatesPoly: '',\r\n            //Crear Parcela\r\n            featuresNewPolygon: [],\r\n            verCrearParcel: true,\r\n            verCrearParcelDraw: false,\r\n            empresaSelForCreateParcel: '',\r\n            refreshDibujo: 0,\r\n            //editarParcel\r\n            valueDesc: '',\r\n            valueName: '',\r\n            areaForNewPolygon: 0,\r\n            //\r\n            user: '',\r\n            coordenadasPunto: [0, 0],\r\n            olcultarInconoUbi: false\r\n        }\r\n    },\r\n    methods: {\r\n        isMobile() {\r\n            if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        },\r\n        getNowSentinel() {\r\n            const today = new Date();\r\n            const date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n            const time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n            const dateTime = date +' '+ time;\r\n            this.timestampSentinel = dateTime;\r\n        },\r\n        getNowRefreshDrawPolygon() {\r\n            const today = new Date();\r\n            const date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n            const time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n            const dateTime = date +' '+ time;\r\n            this.timestampDrawPolygon = dateTime;\r\n        },\r\n        getNow() {\r\n            const today = new Date();\r\n            const date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n            const time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n            const dateTime = date +' '+ time;\r\n            this.timestamp = dateTime;\r\n        },\r\n        pointsStyleFunc(){\r\n            return feature => {\r\n                let baseStyle = new Style({\r\n                    fill: new Fill({\r\n                        color: \"rgba(255,255,255,0.0)\",\r\n                    }),\r\n                    stroke: new Stroke({\r\n                        color: \"rgba(0, 0, 255, 1)\",\r\n                        with: 5\r\n                    }),\r\n                    text: new Text({\r\n                        overflow: this.checkedToggleMostarTexto,\r\n                        text: `${feature.get('name')} \\n ${feature.get('description') ? feature.get('description') : ''} \\n ${feature.get('area') ? feature.get('area').toFixed(2)+'Ha' : '' } / ${feature.get('area') ? this.metricaparcela(feature.get('area'))+'Acre' : '' }`,\r\n                        font: \"14px IBM Plex Sans\",\r\n                        fill: new Fill({\r\n                            //color: \"#161616\",\r\n                            color: \"#FFFFFF\",\r\n                        }),\r\n                        stroke: new Stroke({\r\n                            color: \"#161616\",\r\n                            width: 4.5\r\n                        }),\r\n                    }),\r\n                })\r\n                return [\r\n                    baseStyle,\r\n                ]\r\n            }\r\n        },\r\n        metricaparcela(area){\r\n            const onehecttoAcre = 2.4710538146717\r\n            const acre = onehecttoAcre * area\r\n            this.metric = \"Acre\"\r\n            return  acre.toFixed(2)\r\n        \r\n        },\r\n\r\n        selecionaPolygon(po){\r\n            this.ifQuickEdit = true\r\n            this.coordinatesPoly = ''\r\n            this.verErrorDraw = true\r\n            this.verErrorDraw = true\r\n            const result = this.allParcelsOfEnterprises.filter(parcel => parcel.id == po.id_)\r\n            this.parcelSelected = result[0]\r\n            const coordenadasGeometricas = po.getGeometry().getExtent()\r\n            const ex = coordenadasGeometricas[0] + (coordenadasGeometricas[2]-coordenadasGeometricas[0])/2;\r\n            const ye = coordenadasGeometricas[1] + (coordenadasGeometricas[3]-coordenadasGeometricas[1])/2;\r\n            var source = new proj4.Proj('EPSG:3785'); \r\n            var dest = new proj4.Proj('EPSG:4326');  \r\n            const newCenter = proj4(source, dest, [ex, ye])\r\n            this.center = [newCenter[0], newCenter[1]]\r\n            const enterprise_id = po.values_.enterprise_id\r\n            this.valueName = po.values_.name\r\n            this.valueDesc = po.values_.description\r\n            this.comprobarCoordenadas(po.getGeometry().getCoordinates(), enterprise_id, po.id_)\r\n        },\r\n        terminadoNewPolygon(p){\r\n            console.info(p)\r\n            this.verCrearParcelDraw = true\r\n            this.areaForNewPolygon = (Math.round((getArea(p.feature.getGeometry())/ 10000) * 10000) / 10000)\r\n            const coordinatesEditadas = p.feature.getGeometry().getCoordinates()\r\n            this.comprobarCoordenadas(coordinatesEditadas, (this.empresaSelForCreateParcel ? this.empresaSelForCreateParcel[0].id : this.arrEmpresas[0].id), 0)\r\n        },\r\n        editado(p){\r\n            console.warn(\"editado..\")\r\n            \r\n\r\n            const enterprise_id = p.features.array_[0].values_.enterprise_id\r\n            const coordinatesEditadas = p.features.array_[0].getGeometry().getCoordinates()\r\n            console.warn(coordinatesEditadas)\r\n            this.areaForNewPolygon = (Math.round((getArea(p.features.array_[0].getGeometry())/ 10000) * 10000) / 10000)\r\n            \r\n            //const area = (Math.round((getArea(p.features.array_[0].getGeometry()) / 10000) * 10000) / 10000)\r\n            this.comprobarCoordenadas(coordinatesEditadas, enterprise_id, p.features.array_[0].id_)\r\n            //if(this.parcelaSeleccionada){\r\n                //this.coordinatesBuenas(this.coordinatesEditadas)\r\n            //}\r\n            \r\n            //this.verErrorDraw = false\r\n        },\r\n        getBBOX(parcel){\r\n            const polygon = L.polygon(parcel.geometry.coordinates)\r\n\r\n            const bboxP = `${polygon.getBounds()._northEast.lng},${polygon.getBounds()._northEast.lat},${polygon.getBounds()._southWest.lng},${polygon.getBounds()._southWest.lat}`\r\n            return bboxP\r\n        },\r\n        getBBOX2(parcel){\r\n            const polygon = L.polygon(parcel.geometry.coordinates)\r\n\r\n            const bboxP = [polygon.getBounds()._northEast.lng,polygon.getBounds()._northEast.lat,polygon.getBounds()._southWest.lng,polygon.getBounds()._southWest.lat]\r\n            return bboxP\r\n        },\r\n        comprobarCoordenadas(coords, enterprise, idParcela){\r\n            var source = new proj4.Proj('EPSG:3785'); \r\n            var dest = new proj4.Proj('EPSG:4326'); \r\n            let newCenter = Array;\r\n            let polygonObject= 'POLYGON(('\r\n            for (var i = 0; i < coords[0].length; i++) {\r\n                newCenter = proj4(source, dest, [coords[0][i][0], coords[0][i][1]])\r\n                polygonObject += newCenter[0]+' '+newCenter[1]\r\n                if(i != (coords[0].length-1)){\r\n                    polygonObject += ', '\r\n                }\r\n            }\r\n            polygonObject += '))';\r\n\r\n            checkValidPolygon(polygonObject, enterprise)\r\n            .then(response => {\r\n                if(response.data.features.length){\r\n                    const result = response.data.features.filter(feature => {\r\n                        console.info(feature.id, idParcela)\r\n                        if(feature.id != idParcela){\r\n                            return feature\r\n                        }\r\n                    })\r\n                    \r\n                    console.warn(\"result.length\",result.length)\r\n                    console.warn(\"result.ifQuickEdit\",this.ifQuickEdit)\r\n                    console.warn(\"result.showSolapamientoAlert\",this.showSolapamientoAlert)\r\n\r\n                    if(result.length && this.showSolapamientoAlert){ \r\n                        if(this.ifQuickEdit){\r\n                        let parcelsName = ''\r\n                        result.map(resultado => {\r\n                            parcelsName += resultado.properties.name + ' '\r\n                        })\r\n                            \r\n                            this.errorDrawMsg = this.$t('map.parcela_solapada_con') + ' ' + parcelsName\r\n                        this.verErrorDraw = true\r\n                        this.coordinatesPoly = ''\r\n                        }\r\n                        \r\n                    }else{\r\n                        this.verErrorDraw = false\r\n                        this.errorDrawMsg = ''\r\n                        this.coordinatesPoly = polygonObject\r\n                        this.compruebaParcelaSimple(polygonObject)\r\n                    }\r\n                }else{\r\n                    this.verErrorDraw = false\r\n                    this.errorDrawMsg = ''\r\n                    this.coordinatesPoly = polygonObject\r\n                    this.compruebaParcelaSimple(polygonObject)\r\n                }\r\n            })\r\n        },\r\n        compruebaParcelaSimple(polygonObject){\r\n            let path = `${this.$apiURL}/parcel_valid/?polygon=${polygonObject}`;\r\n            axios.defaults.headers.common['Authorization'] = \"Bearer \"+sessionStorage.getItem(\"apiAccess\")\r\n            axios\r\n            .get(path)\r\n            .then(response=>{\r\n                if(response.data == \"False\"){ // todo: quitar el ! para que funcione\r\n                    this.errorDrawMsg = this.$t('map.parcela_solapada_misma')\r\n                    this.verErrorDraw = true\r\n                }else{\r\n                    this.verErrorDraw = false\r\n                    this.errorDrawMsg = ''\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n        },\r\n    },\r\n    mounted: function () {\r\n        \r\n        //console.info('User Logged')\r\n    },\r\n    beforeCreate(){\r\n        this.isActiveLoading = false\r\n        this.isVisibleLoad = false\r\n        //* 1 - Obtenemos la info del usuario, a que empresa pertenece y si es administrador\r\n        getProfile()\r\n        .then(response => {\r\n            const user = response.data[0]\r\n            \r\n            this.user = user\r\n            getPermisos(response.data[0].user)\r\n            .then(response => {\r\n                this.is_superuser = response.data.is_superuser\r\n                this.is_staff = response.data.is_staff\r\n                this.is_systemadmin = response.data.is_systemadmin\r\n                this.is_enterpriseadmin = response.data.is_enterpriseadmin\r\n                this.is_coop_user = user.cooperative_user\r\n                \r\n                \r\n                if(this.is_superuser || this.is_systemadmin){\r\n                    getAllEnterprises()\r\n                    .then(async response => {\r\n                        this.arrEmpresas = [response.data[0]]\r\n                        this.arrEmpresas4List = response.data\r\n                        const arrParcels = []\r\n                        //carga de la primera empresa\r\n                        const empresaFirst = [response.data[0]]\r\n                        //response.data[0].map(enterprise => {\r\n                        empresaFirst.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                }else if((this.is_enterpriseadmin || this.is_staff) && !this.is_coop_user){ \r\n                    getEnterprise(user.enterprise_id)\r\n                    .then(async response => {\r\n                        this.arrEmpresas = [response.data]\r\n                        this.arrEmpresas4List = [response.data]\r\n                        const arrParcels = []\r\n                        response.data.parcels.features.map(parcel => {\r\n                            arrParcels.push(parcel)\r\n                        })\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                }else if(this.is_coop_user){\r\n                    getCooperative(user.enterprise_id)\r\n                    .then(response => {\r\n                        this.arrCooperativas = [response.data]\r\n                        //this.arrEmpresas = response.data.enterprises\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                }\r\n\r\n                if(this.is_superuser || this.is_systemadmin){\r\n                    getAllCooperatives()\r\n                    .then(async response => {\r\n                        this.arrCooperativas = response.data\r\n                    })\r\n                }\r\n                this.isActiveLoading = false\r\n                this.isVisibleLoad = false\r\n            })\r\n        })\r\n        getLayersFromSentinel().then(response => {\r\n            this.layersSelector = response.data\r\n        })\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n    #map{\r\n        width: 100%; height: 100%; position:fixed\r\n    }\r\n    \r\n    .mapa{\r\n        width: 100%; height: 100%!important; position: fixed\r\n    }\r\n    #cargando{\r\n        position:fixed\r\n    }\r\n</style>"],"mappings":"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"}]}