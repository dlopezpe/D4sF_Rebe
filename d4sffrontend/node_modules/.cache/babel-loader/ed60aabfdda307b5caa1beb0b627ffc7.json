{"remainingRequest":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\src\\components\\adminActions\\GenGraficosAnterioresComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\src\\components\\adminActions\\GenGraficosAnterioresComponent.vue","mtime":1681217492538},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\babel.config.js","mtime":1681217492507},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681731147886},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1681731156386},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681731147886},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1681731148945}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["getProfile","getPermisos","getAllEnterprises","getEnterprise","createInformes","getInformesAnterioresNew","getInformeAnteriorData","delInformesAnterioresNew","putInformesUnificarNew","putInformesAnterioresNew","getUsersList","getUsersListProfiles","generarinforme","getAllCooperatives","getCooperative","SentImage","TableColors","TableColorsMois","ChartLine","ChartLineMois","ChartBar","ChartBarMois","AlertaGeneral","name","components","data","selectValueEmpresa","flagIndicatingDataHasBeenLoadedInVariables","is_superuser","is_staff","is_systemadmin","is_enterpriseadmin","is_coop_user","arrEmpresas","arrEmpresasList","arrCooperativas","allParcelsOfEnterprises","allParcelsOfEnterprisesFilter","start","length","rowSelects","SentinelLayer","calOptions","time","getNow","valueDates","valueRange","timeValuesArr","nombreInforme","historicoAnterior","Array","historicoAnteriorCoop","historicoSell","verGraficNDVI","verGraficMois","graficoData","verImagenSent","keyTableColors","timestamp","mostrar","tipoAlerta","mensajeAlerta","nombreInformeNew","showUnificarInformes","nombreInformeNewUnificado","checkDellInforme","informesSeleccionados","uniqueEmpresasUnificarId","uniqueCapaUnificar","usersList","usersListProfile","informeErrores","columnas","key","label","$t","methods","getUserName","user_id","resultName","filter","user","id","resultEmail","first_name","email","getEnterpriseName","id_empresa","empresa","y","getEstado","informe","error","estado","modalerrores","$refs","errores","dataVisible","getErrores","codigo","parcelas_fallidas","fallidas","trim","split","i","result","x","properties","console","log","showModificarInformes","comprobacionrows","results","historico","includes","enterprisesInResults","map","push","enterprise_id","uniqueEmpresas","Set","alertaGenerall","verAlerta","capaInResults","capa","uniqueCapa","unificarInformeForm","unificaInformes","then","seleccionaEmpresa","hide","showEditarInforme","nombre","editar_informe","changeNameInforme","eliminarInformesConfirm","response","info","alerta_eliminar","changeRowsUnique","value","descargaExcel","window","URL","webkitURL","xhr","XMLHttpRequest","a","document","createElement","file","open","$apiURLMedia","xlsxFile","responseType","onload","Blob","type","href","createObjectURL","download","click","send","descargaExcelConImagenes","nombreinforme","descargarinforme","delInforme","getNowCache","today","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","dateTime","verDatosFecha","jsonFile","verDatosParcelas","toGenerar","id_enterprise","is_cooperative","dateFormat","dts","generarInforme","parcel","String","enterprisesInResultsCoop","cooperative","enterprises","enterprise","uniqueCoops","actionChangeDateRange","range","startDate","endDate","chageCapas","columna","orden","arrParcels","parcels","features","getNameEnterprise","onBuscar","busqueda","toUpperCase","actionOnPagination","ev","onSort","order","index","column","is_terminado","mounted","beforeCreate","cooperative_user","splice","isActiveLoading","isVisibleLoad"],"sources":["src/components/adminActions/GenGraficosAnterioresComponent.vue"],"sourcesContent":["<template>\r\n    <div class=\"bx--grid\">\r\n        <div id=\"txt-explicativo\" class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <h2>Informes Anteriores <img src=\"../../assets/agriculture-analytics.svg\" style=\"width: 40px;\"></h2>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <cv-select\r\n                    theme=\"\"\r\n                    :label=\"$t('map.listado_empresas')\"\r\n                    :hide-label=\"false\"\r\n                    :inline=\"false\"\r\n                    :disabled=\"false\"\r\n                    @change=\"seleccionaEmpresa\"\r\n                    v-model=\"selectValueEmpresa\"\r\n                >\r\n                    <cv-select-option :value=\"''\" disabled selected hidden>{{$t(\"map.sel_empresa\")}}</cv-select-option>\r\n                    <cv-select-optgroup label=\"Todas las Empresas\" v-if=\"is_superuser || is_systemadmin\">\r\n                        <cv-select-option :value=\"`all`\" v-if=\"is_superuser || is_systemadmin\">{{$t(\"map.most_todas_empresas\")}}</cv-select-option>\r\n                        <cv-select-option v-for=\"empresa in arrEmpresasList\" :value=\"String(empresa.id)\"  v-bind:key=\"empresa.id\">\r\n                            {{empresa.name}}\r\n                        </cv-select-option>\r\n                    </cv-select-optgroup>\r\n                    <cv-select-optgroup :label=\"`Cooperativa ${cooperativa.name}`\" v-bind:key=\"cooperativa.id\" v-for=\"cooperativa in arrCooperativas\">\r\n                        <cv-select-option :value=\"`coop_${cooperativa.id}`\">{{$t(\"map.most_todas_empresas\")}}</cv-select-option>\r\n                        <cv-select-option v-for=\"empresa in cooperativa.enterprises\" :value=\"String(empresa.id)\"  v-bind:key=\"empresa.id\">\r\n                            {{empresa.name}}\r\n                        </cv-select-option>\r\n                    </cv-select-optgroup>\r\n                </cv-select>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div id=\"txt-explicativo\" class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <p><strong><u>IMPORTANTE:</u></strong> Los informes anteriores al 04-08-2022 (incluido) se van a descargar siempre con imágenes, la opción de descargar los informes con/sin imágenes se implementó a partir de esa fecha.</p>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <div id=\"sentinelLayersList\">\r\n                    <cv-data-table\r\n                        :sortable=\"false\"\r\n                        :pagination=\"{ numberOfItems: historicoAnterior.length, pageSizes: [10, 15, 20, 25, historicoAnterior.length] }\" @pagination=\"actionOnPagination\"\r\n                        :columns=\"columnas\"\r\n                        :title=\"`Informes Generados`\"\r\n                        @sort=\"onSort\"\r\n                        v-model=\"rowSelects\"\r\n                        ref=\"tableLstadoT2MultiCoop\"\r\n                        searchLabel=\"Filter\" searchPlaceholder=\"Filter\" searchClearLabel=\"Clear filter\"\r\n                        @row-select-change=\"changeRowsUnique\"\r\n                    >\r\n                        <template v-if=\"true\" slot=\"actions\">\r\n                            <cv-search :placeholder=\"$t('graficos.buscar_nombre')\" @input=\"onBuscar\"></cv-search>\r\n                        </template>\r\n                        <template v-if=\"rowSelects.length == 1\" slot=\"batch-actions\">\r\n                            <cv-button @click=\"verDatosFecha\">\r\n                                {{$t(\"graficos.ver_datos\")}} Ordenado por Fecha\r\n                                <Charbar20 class=\"bx--btn__icon\"/>\r\n                            </cv-button> \r\n                        </template>\r\n                        <template v-if=\"rowSelects.length == 1\" slot=\"batch-actions\">\r\n                            <cv-button @click=\"verDatosParcelas\">\r\n                                {{$t(\"graficos.ver_datos\")}} Agrupado por Parcelas\r\n                                <Charbar20 class=\"bx--btn__icon\"/>\r\n                            </cv-button> \r\n                        </template>\r\n                        <template v-if=\"rowSelects.length == 1\" slot=\"batch-actions\">\r\n                            <cv-button @click=\"descargaExcel\" v-if=\"true\">\r\n                                {{$t(\"graficos.desc_excel\")}}\r\n                                <Download16 class=\"bx--btn__icon\"/>\r\n                            </cv-button>\r\n                        </template>\r\n                        <template v-if=\"rowSelects.length == 1\" slot=\"batch-actions\">\r\n                            <cv-button @click=\"descargaExcelConImagenes\" v-if=\"true\">\r\n                                {{$t(\"graficos.desc_excel_img\")}}\r\n                                <Download16 class=\"bx--btn__icon\"/>\r\n                            </cv-button>\r\n                        </template>            \r\n                        <template v-if=\"rowSelects.length == 1\" slot=\"batch-actions\">\r\n                            <cv-button @click=\"showEditarInforme\" >\r\n                                {{$t(\"graficos.editar\")}}\r\n                                <Edit32 class=\"bx--btn__icon\" />\r\n                            </cv-button>\r\n                        </template>\r\n                        <template v-if=\"rowSelects.length > 1\" slot=\"batch-actions\">\r\n                            <cv-button @click=\"showModificarInformes\" >\r\n                                {{$t(\"graficos.unificar_informes\")}}\r\n                                <AppConnectivity32 class=\"bx--btn__icon\"/>\r\n                            </cv-button>\r\n                        </template>\r\n                        <template v-if=\"true\" slot=\"batch-actions\">\r\n                            <cv-button @click=\"delInforme\">\r\n                                {{$t(\"graficos.del_informe\")}}\r\n                                <TrashCan32 class=\"bx--btn__icon\" />\r\n                            </cv-button>\r\n                        </template>\r\n                        <template slot=\"data\">\r\n                            <cv-data-table-row\r\n                                v-for=\"feature in historicoAnterior.slice(start, start+length)\"\r\n                                :key=\"`${feature.id}`\"\r\n                                :value=\"`${feature.id}`\"\r\n                                :aria-label-for-batch-checkbox=\"`Custom aria label for row ${feature.id} batch`\"\r\n                            >\r\n                                <cv-data-table-cell>{{feature.nombre}}</cv-data-table-cell>\r\n                                <cv-data-table-cell>{{feature.capa}}</cv-data-table-cell>\r\n                                <cv-data-table-cell>{{dateFormat(feature.created)}}</cv-data-table-cell>\r\n                                <cv-data-table-cell>{{getEstado(feature)}} <img src=\"../../assets/information--square--filled.svg\" style=\"width: 15px; cursor:pointer\" title=\"Parcelas reportadas por Sentinel\" @click=\"modalerrores(feature)\" v-if=\"feature.error\"> </cv-data-table-cell>\r\n                                <cv-data-table-cell>{{feature.fechaInicio}} - {{feature.fechaFin}}</cv-data-table-cell>\r\n                                <cv-data-table-cell style=\"text-aling: center\">\r\n                                    <img src=\"../../assets/mostly-cloudy.svg\" style=\"width: 15px;\" v-if=\"feature.includeClouds\"> \r\n                                    <img src=\"../../assets/outlook-severe.svg\" style=\"width: 15px;\" v-else>\r\n                                    <label v-if=\"feature.includeClouds\">  Sí</label>\r\n                                    <label v-else>  No</label>\r\n                                </cv-data-table-cell>\r\n                                <cv-data-table-cell v-if=\"is_superuser\">{{getUserName(feature.user_created)}}</cv-data-table-cell>\r\n                                <cv-data-table-cell>{{getEnterpriseName(feature.enterprise_id)}}</cv-data-table-cell>\r\n                            </cv-data-table-row>\r\n                        </template>\r\n                    </cv-data-table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <ChartLine :datos=\"graficoData\" v-if=\"verGraficNDVI\" :key=\"`chart_line_ndvi_${timestamp}`\"/>\r\n                <ChartLineMois :datos=\"graficoData\" v-if=\"verGraficMois\" :key=\"`chart_line_mois_${timestamp}`\"/>\r\n            </div>\r\n        </div>\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <ChartBar :datos=\"graficoData\" v-if=\"verGraficNDVI\" :key=\"`chart_bar_ndvi_${timestamp}`\"/>\r\n                <ChartBarMois :datos=\"graficoData\" v-if=\"verGraficMois\" :key=\"`chart_bar_mois_${timestamp}`\"/>\r\n            </div>\r\n        </div>\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <TableColors :urlMedia=\"$apiURLMedia\" :datos=\"graficoData\" v-if=\"verGraficNDVI\" :key=\"`table_ndvi_${timestamp}`\"/>\r\n                <TableColorsMois :urlMedia=\"$apiURLMedia\" :datos=\"graficoData\" v-if=\"verGraficMois\" :key=\"`table_mois_${timestamp}`\"/>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <SentImage :urlMedia=\"$apiURLMedia\" :datos=\"graficoData\" v-if=\"verImagenSent\" :key=\"`imgs_${timestamp}`\"/>\r\n            </div>\r\n        </div>\r\n        <cv-modal\r\n        ref=\"alerta_eliminar\"\r\n        kind=\"danger\"\r\n        @primary-click=\"eliminarInformesConfirm\">\r\n            <template slot=\"label\">{{$t(\"graficos.seguro\")}}</template>\r\n            <template slot=\"title\">{{$t(\"graficos.eliminar\")}}</template>\r\n            <template slot=\"content\">\r\n            <p>{{$t(\"graficos.seguro_parcel_del\")}}</p>\r\n            </template>\r\n            <template slot=\"secondary-button\">{{$t(\"graficos.cancelar\")}}</template>\r\n            <template slot=\"primary-button\">{{$t(\"graficos.eliminar\")}}</template>\r\n        </cv-modal>\r\n\r\n        <cv-modal\r\n            ref=\"editar_informe\"\r\n            @primary-click=\"changeNameInforme\"\r\n        >\r\n            <template slot=\"label\">{{$t('graficos.modifica_infor')}}</template>\r\n            <template slot=\"title\">{{$t('graficos.modifica_infor')}}</template>\r\n            <template slot=\"content\">\r\n                <div class=\"bx--grid bx--grid--condensed\">\r\n                    <div class=\"bx--row\">\r\n                        <div class=\"bx--col\">\r\n                            <!-- Nombre de Informe -->\r\n                            <div class=\"bx--form-item\">\r\n                                <label for=\"text-input-Nombre\" class=\"bx--label\">{{$t('graficos.nombre_informe')}}</label>\r\n                                <input v-model=\"nombreInformeNew\" id=\"text-input-Nombre\" type=\"text\" class=\"bx--text-input\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </template>\r\n            <template slot=\"secondary-button\">{{$t(\"graficos.cancelar\")}}</template>\r\n            <template slot=\"primary-button\">{{$t('graficos.guardar')}}</template>\r\n        </cv-modal>\r\n        <cv-modal\r\n            ref=\"unificarInformeForm\"\r\n            @primary-click=\"unificaInformes\"\r\n            @secondary-click=\"$refs.unificarInformeForm.hide()\"\r\n        >\r\n            <template v-if=\"true\" slot=\"label\"></template>\r\n            <template v-if=\"true\" slot=\"title\">{{$t('graficos.unificar_informes')}}</template>\r\n            <template v-if=\"true\" slot=\"content\" id=\"contenido\">\r\n                <div class=\"bx--grid bx--grid--condensed\">\r\n                    <div class=\"bx--row\">\r\n                        <!-- Nombre de Informe -->\r\n                        <div class=\"bx--form-item\">\r\n                            <label for=\"text-input-Nombre\" class=\"bx--label\">{{$t('graficos.nombre')}}</label>\r\n                            <input v-model=\"nombreInformeNewUnificado\" id=\"text-input-Nombre\" type=\"text\" class=\"bx--text-input\" :placeholder=\"$t('graficos.nombre')\">\r\n                        </div>\r\n                    </div>\r\n                    <br>\r\n                    <div class=\"bx--row\">\r\n                        <div class=\"bx--col\">\r\n                            <div class=\"bx--form-item\">\r\n                                <cv-checkbox\r\n                                    :label=\"$t('graficos.eliminar_informe_origin')\"\r\n                                    :checked=\"false\"\r\n                                    value=\"true\"\r\n                                    :mixed=\"false\"\r\n                                    v-model=\"checkDellInforme\"\r\n                                >\r\n                                </cv-checkbox>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <br>\r\n                    <div class=\"bx--row\">\r\n                        <div class=\"bx--col\">\r\n                            <h4>{{$t(\"graficos.resumen_unifica\")}}</h4>\r\n                            <cv-data-table\r\n                                :columns=\"[\r\n                                    this.$t('graficos.parcelas'),\r\n                                    'Capa',\r\n                                    this.$t('graficos.rango_fechas_sel'),\r\n                                    {\r\n                                        'label': this.$t('graficos.creado'),\r\n                                    },\r\n                                ]\"\r\n                            >\r\n                                <template slot=\"data\">\r\n                                    <cv-data-table-row  v-for=\"informe in informesSeleccionados\" :value=\"String(informe.id)\" :key=\"String(informe.id)\">\r\n                                        <cv-data-table-cell>{{informe.nombre}}</cv-data-table-cell>\r\n                                        <cv-data-table-cell>{{informe.capa}}</cv-data-table-cell>\r\n                                        <cv-data-table-cell>{{dateFormat(informe.created)}}</cv-data-table-cell>\r\n                                        <cv-data-table-cell>{{informe.fechaInicio}} - {{informe.fechaFin}}</cv-data-table-cell>\r\n                                    </cv-data-table-row>\r\n                                </template>\r\n                            </cv-data-table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </template>\r\n            <template v-if=\"true\" slot=\"secondary-button\">{{$t(\"graficos.cancelar\")}}</template>\r\n            <template v-if=\"true\" slot=\"primary-button\">{{$t(\"graficos.unificar\")}}</template>\r\n        </cv-modal>\r\n        <cv-modal\r\n        ref=\"errores\"\r\n        @primary-click=\"$refs.errores.hide()\"\r\n        >\r\n            <template slot=\"title\">Parcelas reportadas por Sentinel</template>\r\n            <template slot=\"content\">\r\n            <p style=\"white-space: pre-line\">Sentinel ha reportado algún posible error al obtener los datos de la/s parcela/s:\r\n            <br> \r\n            {{getErrores(informeErrores)}}\r\n            Por favor, revisa el informe y solicita de nuevo esas parcelas en caso de que falte algún dato.</p>\r\n            </template>\r\n            <template slot=\"primary-button\">OK</template>\r\n        </cv-modal>\r\n        <AlertaGeneral ref=\"alertaGenerall\" :tituloAlert=\"mensajeAlerta\" :tipoAlert=\"tipoAlerta\" />\r\n    </div>\r\n</template>\r\n<script>\r\n//import {getParcelsNotSentinelInstance, postParcelsNotSentinelInstance} from '@/crudFunctions/crudSentinel.js'\r\nimport {getProfile, getPermisos} from '@/auth/index'\r\nimport {getAllEnterprises, getEnterprise, createInformes, getInformesAnterioresNew,\r\ngetInformeAnteriorData, delInformesAnterioresNew,putInformesUnificarNew, putInformesAnterioresNew, getUsersList, getUsersListProfiles, generarinforme} from '@/crudFunctions/crudEnterprise'\r\nimport {getAllCooperatives, getCooperative} from '@/crudFunctions/crudCooperativas'\r\nimport SentImage from '@/components/charts_new/imageSent.vue'\r\nimport TableColors from '@/components/charts_new/tableColors.vue'\r\nimport TableColorsMois from '@/components/charts_new/tableColorsMois.vue'\r\nimport ChartLine from '@/components/charts_new/chartLine.vue'\r\nimport ChartLineMois from '@/components/charts_new/chartLineMois.vue'\r\nimport ChartBar from '@/components/charts_new/chartBar.vue'\r\nimport ChartBarMois from '@/components/charts_new/chartBarMois.vue'\r\nimport AlertaGeneral from \"@/components/AlertaGeneral\"\r\nexport default {\r\n    name: 'ParcelsToSentinelComponent',\r\n    components: {\r\n        SentImage,\r\n        TableColors,\r\n        TableColorsMois,\r\n        ChartLine,\r\n        ChartBar,\r\n        ChartBarMois,\r\n        ChartLineMois,\r\n        AlertaGeneral\r\n    },\r\n    data(){\r\n        return {\r\n            //\r\n            selectValueEmpresa: '',\r\n            //\r\n            flagIndicatingDataHasBeenLoadedInVariables: false,\r\n            //Usuario\r\n            is_superuser: false,\r\n            is_staff: false,\r\n            is_systemadmin: false,\r\n            is_enterpriseadmin: false,\r\n            is_coop_user: false,\r\n            //Empresas sel\r\n            arrEmpresas: [],\r\n            arrEmpresasList: [],\r\n            arrCooperativas: [],\r\n            allParcelsOfEnterprises: [],\r\n            allParcelsOfEnterprisesFilter: [],\r\n            //\r\n            start: 0,\r\n            length: 10,\r\n            //\r\n            rowSelects: [],\r\n            //\r\n            SentinelLayer: 'NDVI',\r\n            calOptions: {\r\n                \"dateFormat\": \"Y-m-d\"\r\n            },\r\n            time: `${this.getNow()}/${this.getNow()}`,\r\n            valueDates: [],\r\n            valueRange: [],\r\n            timeValuesArr: [this.getNow(), this.getNow()],\r\n            nombreInforme: `Gráfico - ${this.getNow()}`,\r\n            historicoAnterior: Array(),\r\n            historicoAnteriorCoop: Array(),\r\n            historicoSell: {},\r\n            verGraficNDVI: false,\r\n            verGraficMois: false,\r\n            graficoData: {},\r\n            verImagenSent: false,\r\n            keyTableColors: 0,\r\n            timestamp: 0,\r\n            mostrar:true,\r\n            //\r\n            tipoAlerta: `error`,\r\n            mensajeAlerta: '',\r\n            //\r\n            nombreInformeNew: '',\r\n            //\r\n            showUnificarInformes: false,\r\n            //\r\n            nombreInformeNewUnificado: `Gráfico Unificado - ${this.getNow()}`,\r\n            checkDellInforme: false,\r\n            informesSeleccionados: [],\r\n            uniqueEmpresasUnificarId: '',\r\n            uniqueCapaUnificar: '',\r\n            usersList: [],\r\n            usersListProfile: [],\r\n            informeErrores:{},\r\n            columnas:[\r\n                            {\r\n                                key: 'name',\r\n                                label: this.$t('graficos.nombre'),\r\n                                'sortable': false\r\n                            },\r\n                            {\r\n                                key: 'capa',\r\n                                label: this.$t('graficos.capa'),\r\n                                'sortable': true\r\n                            },\r\n                            {\r\n                                'label': this.$t('graficos.creado'),\r\n                                'sortable': true\r\n                            },\r\n                            {\r\n                                'label': this.$t('graficos.estado'),\r\n                                'sortable': false\r\n                            },\r\n                            {\r\n                                'label': this.$t('graficos.rango_fechas_sel'),\r\n                                'sortable': false\r\n                            },\r\n                            {\r\n                                'label': this.$t('graficos.analisis_nubes'),\r\n                                'sortable': true\r\n                            },\r\n                            {\r\n                                'label': this.$t('graficos.empresa'),\r\n                                'sortable': false\r\n                            },\r\n                        ]\r\n        }\r\n    },\r\n    methods: {\r\n        getUserName(user_id){\r\n            if(this.usersList && this.usersListProfile){\r\n                const resultName = this.usersList.filter(user => user.id == user_id)\r\n                if(resultName){\r\n                    const resultEmail = this.usersListProfile.filter(user => user.id == resultName[0].user)\r\n                    return `${resultName[0].first_name} - ${resultEmail[0].email}`\r\n                }\r\n            }\r\n        },\r\n        getEnterpriseName(id_empresa){\r\n            const empresa=this.arrEmpresas.filter(y=>y.id==id_empresa)\r\n            return empresa[0].name\r\n        },\r\n        getEstado(informe){\r\n            if(informe.error && informe.estado==3){\r\n                return \"Terminado con posibles errores\"\r\n            }\r\n            switch (informe.estado) {\r\n                case '1':\r\n                    return 'En Proceso (Obteniendo imagenes)'\r\n                case '2':\r\n                    return 'En proceso (Procesando excel)'\r\n                case '3':\r\n                    return 'Terminado'\r\n                default:\r\n                    return `No finalizado (errores en Sentinel)`\r\n            }\r\n        },\r\n        modalerrores(informe){\r\n            this.informeErrores=informe\r\n            this.$refs.errores.dataVisible = true\r\n        },\r\n        getErrores(informe){\r\n            let codigo=\"\"\r\n            if(informe.parcelas_fallidas==null || informe.parcelas_fallidas.length==0){\r\n                return \"No hay datos especificos de que parcelas pueden presentar errores \\n\"\r\n            }\r\n            else{\r\n                const fallidas=informe.parcelas_fallidas.trim().split(\" \")\r\n                for (let i in fallidas){\r\n                    const result=this.allParcelsOfEnterprises.filter(x=>x.id==fallidas[i])\r\n                    codigo+=\"ID= \"+result[0].id+\" Nombre= \"+result[0].properties.name+'\\n'\r\n                }\r\n                console.log(codigo)\r\n                return codigo\r\n            }\r\n        },\r\n        showModificarInformes(){\r\n            if(this.comprobacionrows()){\r\n                //const numSel = this.rowSelects.length\r\n                const results = this.historicoAnterior.filter(historico => this.rowSelects.includes(historico.id) )\r\n                const enterprisesInResults = []\r\n                results.map(result => {\r\n                    enterprisesInResults.push(result.enterprise_id)\r\n                })\r\n                const uniqueEmpresas = [...new Set(enterprisesInResults)]\r\n                if(uniqueEmpresas.length > 1){\r\n                    this.mensajeAlerta = 'Los informes seleccionados pertenecen a distintas empresas'\r\n                    this.tipoAlerta = 'error'\r\n                    this.$refs.alertaGenerall.verAlerta()\r\n                    return false\r\n                }\r\n                const capaInResults = []\r\n                results.map(result => {\r\n                    capaInResults.push(result.capa)\r\n                })\r\n                const uniqueCapa = [...new Set(capaInResults)]\r\n                if(uniqueCapa.length > 1){\r\n                    this.mensajeAlerta = 'Los informes seleccionados son de distintas capas'\r\n                    this.tipoAlerta = 'error'\r\n                    this.$refs.alertaGenerall.verAlerta()\r\n                    return false\r\n                }\r\n                this.uniqueEmpresasUnificarId = uniqueEmpresas[0]\r\n                this.uniqueCapaUnificar = uniqueCapa[0]\r\n                this.informesSeleccionados = results\r\n                this.$refs.unificarInformeForm.dataVisible = true\r\n            }\r\n            else{\r\n                this.mensajeAlerta = `\"Las acciones a realizar sobre el informe se habilitarán una vez se haya generado completamente\"`\r\n                this.tipoAlerta = `error`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n            }\r\n        },\r\n        unificaInformes(){\r\n            //console.info(this.uniqueEmpresasUnificarId, this.informesSeleccionados, this.checkDellInforme, this.nombreInformeNewUnificado)\r\n            putInformesUnificarNew(this.nombreInformeNewUnificado, this.uniqueEmpresasUnificarId, this.informesSeleccionados, this.checkDellInforme, this.uniqueCapaUnificar)\r\n            .then(() => {\r\n                this.mensajeAlerta = `Informe Generado correctamente`\r\n                this.tipoAlerta = 'success'\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                this.seleccionaEmpresa(this.selectValueEmpresa)\r\n            })\r\n            this.$refs.unificarInformeForm.hide()\r\n        },\r\n        showEditarInforme(){\r\n            if(this.comprobacionrows()){\r\n                //console.info('ver editar Informe')\r\n                const result = this.historicoAnterior.filter(historico => this.rowSelects.includes(historico.id) )\r\n                this.nombreInformeNew = result[0].nombre\r\n                this.$refs.editar_informe.dataVisible = true\r\n            }else{\r\n                this.mensajeAlerta = `\"Las acciones a realizar sobre el informe se habilitarán una vez se haya generado completamente\"`\r\n                this.tipoAlerta = `error`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n            }\r\n        },\r\n        changeNameInforme(){\r\n            putInformesAnterioresNew(this.rowSelects[0], this.nombreInformeNew)\r\n            .then(() => {\r\n                this.mensajeAlerta = `Informe Guardado correctamente`\r\n                this.tipoAlerta = 'success'\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                this.seleccionaEmpresa(this.selectValueEmpresa)\r\n            })\r\n            this.$refs.editar_informe.hide()\r\n        },\r\n        eliminarInformesConfirm(){\r\n            delInformesAnterioresNew(this.rowSelects)\r\n            .then(response => {\r\n                console.info(response.data)\r\n                this.seleccionaEmpresa(this.selectValueEmpresa)\r\n                this.mensajeAlerta = this.$t('graficos.del_informe_ok')\r\n                this.tipoAlerta = 'success'\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                this.$refs.alerta_eliminar.hide()\r\n            })\r\n            console.info('Delete Informe/s', this.rowSelects)\r\n        },\r\n        changeRowsUnique(value){\r\n            console.info(value)\r\n        },\r\n        descargaExcel(){\r\n            if(this.rowSelects.length === 1 && this.comprobacionrows()){\r\n                console.info('Correcta descarga de excel')\r\n                const result = this.historicoAnterior.filter(historico => this.rowSelects.includes(historico.id) )\r\n                window.URL = window.URL || window.webkitURL;\r\n                let xhr = new XMLHttpRequest(),\r\n                a = document.createElement('a'), file;\r\n                xhr.open('GET', `${this.$apiURLMedia}/${result[0].xlsxFile}`, true);\r\n                xhr.responseType = 'blob';\r\n                xhr.onload = function () {\r\n                    file = new Blob([xhr.response], { type : 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n                    a.href = window.URL.createObjectURL(file);\r\n                    a.download = `${result[0].nombre}.xlsx`;  // Set to whatever file name you want\r\n                    a.click();\r\n                };\r\n                xhr.send();\r\n            }\r\n            else{\r\n                this.mensajeAlerta = `\"Las acciones a realizar sobre el informe se habilitarán una vez se haya generado completamente\"`\r\n                this.tipoAlerta = `error`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n            }\r\n            console.info('Descarga Excel', this.rowSelects)\r\n        },\r\n        async descargaExcelConImagenes(){\r\n            if (this.comprobacionrows()){\r\n                //TODO ENDPOINT DE CREACION DE INFORME RETRUN NAME\r\n                let nombre=await this.nombreinforme(this.rowSelects[0])\r\n                console.log (nombre)\r\n                await this.descargarinforme(nombre)\r\n            }else{\r\n                this.mensajeAlerta = `\"Las acciones a realizar sobre el informe se habilitarán una vez se haya generado completamente\"`\r\n                this.tipoAlerta = `error`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n            }\r\n        },\r\n        nombreinforme(id){\r\n            return generarinforme(id)\r\n        },\r\n        descargarinforme(nombre){\r\n            window.URL = window.URL || window.webkitURL;\r\n                let xhr = new XMLHttpRequest(),\r\n                a = document.createElement('a'), file;\r\n                xhr.open('GET', `${this.$apiURLMedia}/${nombre['data'].data}`, true);\r\n                xhr.responseType = 'blob';\r\n                xhr.onload = function () {\r\n                    file = new Blob([xhr.response], { type : 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n                    a.href = window.URL.createObjectURL(file);\r\n                    a.download = `${nombre['data'].name}.xlsx`;  // Set to whatever file name you want\r\n                    a.click();\r\n                };\r\n                xhr.send();\r\n        },\r\n        delInforme(){\r\n            if(this.comprobacionrows()){\r\n                this.$refs.alerta_eliminar.dataVisible = true\r\n            }\r\n            else{\r\n                this.mensajeAlerta = `\"Las acciones a realizar sobre el informe se habilitarán una vez se haya generado completamente\"`\r\n                this.tipoAlerta = `error`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n            }\r\n        },\r\n        getNowCache() {\r\n            const today = new Date();\r\n            const date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n            const time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n            const dateTime = date +' '+ time;\r\n            this.timestamp = dateTime;\r\n            //return date\r\n        },\r\n        verDatosFecha(){\r\n            if(this.comprobacionrows()){\r\n                //console.info(this.rowSelects)\r\n                const result = this.historicoAnterior.filter(historico => this.rowSelects.includes(historico.id) )\r\n                //console.info(result)\r\n                this.historicoSell = result[0]\r\n            \r\n                getInformeAnteriorData(`order_${result[0].jsonFile}`)\r\n                .then(response => {\r\n                    //console.info(response.data)\r\n                    this.graficoData = response.data\r\n                    this.verImagenSent = true\r\n                    if(result[0].capa === 'NDVI'){\r\n                        this.verGraficNDVI = true\r\n                        this.verGraficMois = false\r\n                    }else{\r\n                        this.verGraficNDVI = false\r\n                        this.verGraficMois = true\r\n                    }\r\n                    this.getNowCache()\r\n                })\r\n            }\r\n            else{\r\n                this.mensajeAlerta = `\"Las acciones a realizar sobre el informe se habilitarán una vez se haya generado completamente\"`\r\n                this.tipoAlerta = `error`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n            }\r\n        },\r\n        verDatosParcelas(){\r\n            if(this.comprobacionrows()){\r\n                //console.info(this.rowSelects)\r\n                const result = this.historicoAnterior.filter(historico => this.rowSelects.includes(historico.id) )\r\n                //console.info(result)\r\n                this.historicoSell = result[0]\r\n            \r\n                getInformeAnteriorData(`${result[0].jsonFile}`)\r\n                .then(response => {\r\n                    //console.info(response.data)\r\n                    this.graficoData = response.data\r\n                    this.verImagenSent = true\r\n                    if(result[0].capa === 'NDVI'){\r\n                        this.verGraficNDVI = true\r\n                        this.verGraficMois = false\r\n                    }else{\r\n                        this.verGraficNDVI = false\r\n                        this.verGraficMois = true\r\n                    }\r\n                    this.getNowCache()\r\n                })\r\n            }\r\n            else{\r\n                this.mensajeAlerta = `Las acciones a realizar sobre el informe se habilitarán una vez se haya generado completamente`\r\n                this.tipoAlerta = `error`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n            }\r\n        },\r\n        toGenerar(id_enterprise, is_cooperative){\r\n            /*\r\n            console.info('Nombre del Gráfico ', this.nombreInforme)\r\n            console.info('Capa Seleccionada ', this.SentinelLayer)\r\n            console.info('Fechas ', this.timeValuesArr)\r\n            console.info('Parcelas ', this.rowSelects)\r\n            console.info('Es Cooperativa ', is_cooperative)\r\n            console.info('ID ', id_enterprise)\r\n            */\r\n            createInformes(this.nombreInforme, this.SentinelLayer, this.timeValuesArr, this.rowSelects, is_cooperative, id_enterprise)\r\n        },\r\n        dateFormat(date){\r\n            const dts = date.split('.')\r\n            return dts[0]\r\n        },\r\n        generarInforme(){\r\n            //console.info(this.rowSelects)\r\n            const results = this.allParcelsOfEnterprisesFilter.filter(parcel => this.rowSelects.includes(String(parcel.id)))\r\n            //console.info(results)\r\n            const enterprisesInResults = []\r\n            results.map(result => {\r\n                enterprisesInResults.push(result.properties.enterprise_id)\r\n            })\r\n            //console.info('Resultados empresa => ',enterprisesInResults)\r\n            const uniqueEmpresas = [...new Set(enterprisesInResults)]\r\n            //console.info('Unificamos empresa => ',uniqueEmpresas)\r\n            if(uniqueEmpresas.length > 1){\r\n                //*Es multiempresa\r\n                //console.info('Seleccion Multiempresa')\r\n                //Comprobar si es cooperativa\r\n                const enterprisesInResultsCoop = []\r\n                this.arrCooperativas.map(cooperative => {\r\n                    cooperative.enterprises.map(enterprise => {\r\n                        if(uniqueEmpresas.includes(enterprise.id)){\r\n                            enterprisesInResultsCoop.push(cooperative.id)\r\n                        }\r\n                    })\r\n                })\r\n                //console.info('Resultado Cooperativas => ',enterprisesInResultsCoop)\r\n                if(enterprisesInResultsCoop.length == uniqueEmpresas.length){\r\n                    console.info('Todas las empresas Pertenecen a cooperativas')\r\n                    const uniqueCoops = [...new Set(enterprisesInResultsCoop)]\r\n                    if(uniqueCoops.length > 1){\r\n                        console.info('MultiCoop')\r\n                        console.info('Cooperativas', uniqueCoops)\r\n                        console.info('No se puede generar el informe, parcelas de distintas Cooperativas')\r\n                    }else{\r\n                        console.info('UniCoop')\r\n                        console.info('Cooperativa', uniqueCoops)\r\n                        this.toGenerar(uniqueCoops[0], true)\r\n                    }\r\n                }else{\r\n                    console.info('No se puede generar el informe, Hay una empresa que no pertenece a ninguna cooperativa')\r\n                }\r\n            }else{\r\n                console.info('Seleccion Uniempresa')\r\n                this.toGenerar(uniqueEmpresas[0], false)\r\n            }\r\n        },\r\n        actionChangeDateRange(range){\r\n            console.info(range)\r\n            this.timeValuesArr = [range.startDate, range.endDate]\r\n            console.info(this.timeValuesArr)\r\n            this.time = `${range.startDate}/${range.endDate}`\r\n        },\r\n        chageCapas(capa){\r\n            this.SentinelLayer = capa\r\n        },\r\n        seleccionaEmpresa(empresa, columna='created', orden='descending'){\r\n            const arrParcels = []\r\n            if(empresa == 'all'){\r\n                getAllEnterprises()\r\n                    .then(async response => {\r\n                        response.data.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.arrEmpresas = response.data\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n                getInformesAnterioresNew(empresa, columna, orden)\r\n                    .then(response => {\r\n                        console.info(response.data)\r\n                        this.historicoAnterior = response.data\r\n                    })\r\n            }else{\r\n                const result = empresa.split('_')\r\n                if(result[0] == 'coop'){\r\n                    getCooperative(result[1])\r\n                    .then(response => {\r\n                        response.data.enterprises.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.arrEmpresas = response.data.enterprises\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n                    getInformesAnterioresNew(result[1], columna, orden)\r\n                    .then(response => {\r\n                        console.info(response.data)\r\n                        this.historicoAnterior= response.data\r\n                    })\r\n                }else{\r\n                    getEnterprise(empresa)\r\n                    .then(async response => {\r\n                        response.data.parcels.features.map(parcel => {\r\n                            arrParcels.push(parcel)\r\n                        })\r\n                        this.arrEmpresas = [response.data]\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n                    getInformesAnterioresNew(empresa, columna, orden)\r\n                    .then(response => {\r\n                        console.info(response.data)\r\n                        this.historicoAnterior= response.data\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        getNow() {\r\n            const today = new Date();\r\n            const date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n            const time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n            const dateTime = date +' '+ time;\r\n            //this.timestamp = dateTime;\r\n            console.info(dateTime)\r\n            return date\r\n        },\r\n        getNameEnterprise(value){\r\n            const result = this.arrEmpresas.filter(enterprise => enterprise.id == value)\r\n            return result[0].name\r\n        },\r\n        onBuscar(busqueda){\r\n            if(busqueda){\r\n                const result = this.allParcelsOfEnterprises.filter(parcel => parcel.properties.name.toUpperCase().includes(busqueda.toUpperCase()))\r\n                this.allParcelsOfEnterprisesFilter = result\r\n            }else{\r\n                this.allParcelsOfEnterprisesFilter = this.allParcelsOfEnterprises\r\n            }\r\n        },\r\n        actionOnPagination(ev){\r\n            this.start = ev.start-1\r\n            this.length = ev.length\r\n        },\r\n        onSort(order) {\r\n            console.info(order)\r\n            const index = order.index\r\n            let column = ``\r\n            const orden = order.order\r\n            \r\n            switch (index) {\r\n                case '0':\r\n                    column = `nombre`\r\n                    break\r\n                case '1':\r\n                    column = `capa`\r\n                    break\r\n                case '2':\r\n                    column = 'created'\r\n                    break\r\n                case '4':\r\n                    column = 'includeClouds'\r\n                    break\r\n                default:\r\n                    column = 'created'\r\n            }\r\n            this.seleccionaEmpresa(this.selectValueEmpresa, column, orden)\r\n            .then(response => {\r\n                this.historicoAnterior= response.data\r\n            })\r\n            /*\r\n            if(orden == 'ascending'){\r\n                this.allParcelsOfEnterprisesFilter.sort((a, b) => parseFloat(a.name) - parseFloat(b.name));\r\n            }\r\n            */\r\n            console.info(column)\r\n        },\r\n        comprobacionrows(){\r\n            let is_terminado\r\n            const result = this.historicoAnterior.filter(historico => this.rowSelects.includes(historico.id))\r\n            for (let i in result){\r\n                if(result[i].estado==3){\r\n                    is_terminado =true\r\n                }\r\n                else{\r\n                    return false\r\n                }\r\n            }\r\n            console.log(is_terminado)\r\n            return is_terminado\r\n        },\r\n    },\r\n    mounted: function () {\r\n        this.getNow()\r\n        //console.info('User Logged')\r\n    },\r\n    beforeCreate(){\r\n        getProfile()\r\n        .then(response => {\r\n            const user = response.data[0]\r\n            getPermisos(response.data[0].user)\r\n            .then(response => {\r\n                this.is_superuser = response.data.is_superuser\r\n                this.is_staff = response.data.is_staff\r\n                this.is_systemadmin = response.data.is_systemadmin\r\n                this.is_enterpriseadmin = response.data.is_enterpriseadmin\r\n                this.is_coop_user = user.cooperative_user\r\n                /*\r\n                //*Obtenemos la empresa del usuario\r\n                const enterprise_id = user.enterprise_id\r\n                getEnterprise(enterprise_id)\r\n                .then(async response => {\r\n                    this.parcelas = response.data.parcels\r\n                    await this.arrEmpresas.push(response.data)\r\n                    this.flagIndicatingDataHasBeenLoadedInVariables = false\r\n                    this.timestamp()\r\n                })\r\n                */\r\n                if(this.is_superuser){\r\n                    this.columnas.splice(6,0,{'label': this.$t('graficos.solicitante_informe'),'sortable': false },)\r\n                    getUsersList()\r\n                    .then(response => {\r\n                        this.usersList = response.data\r\n                    })\r\n                    getUsersListProfiles()\r\n                    .then(response => {this.usersListProfile = response.data})\r\n                }\r\n                if(this.is_superuser || this.is_systemadmin){\r\n                    console.info('entra')\r\n                    getAllEnterprises()\r\n                    .then(async response => {\r\n                        this.arrEmpresas = response.data\r\n                        this.arrEmpresasList = response.data\r\n                        const arrParcels = []\r\n                        response.data.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                    getInformesAnterioresNew()\r\n                    .then(response => {\r\n                        console.info(response.data)\r\n                        this.historicoAnterior = response.data\r\n                    })\r\n                }else if((this.is_enterpriseadmin || this.is_staff) && !this.is_coop_user){ \r\n                    getEnterprise(user.enterprise_id)\r\n                    .then(async response => {\r\n                        this.arrEmpresas = [response.data]\r\n                        this.arrEmpresasList = [response.data]\r\n                        const arrParcels = []\r\n                        response.data.parcels.features.map(parcel => {\r\n                            arrParcels.push(parcel)\r\n                        })\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                    getInformesAnterioresNew(user.enterprise_id)\r\n                    .then(response => {\r\n                        console.info(response.data)\r\n                        this.historicoAnterior= response.data\r\n                    })\r\n                }else if(this.is_coop_user){\r\n                    getCooperative(user.enterprise_id)\r\n                    .then(response => {\r\n                        this.arrCooperativas = [response.data]\r\n                        //this.arrEmpresas = response.data.enterprises\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                }\r\n\r\n                if(this.is_superuser || this.is_systemadmin){\r\n                    getAllCooperatives()\r\n                    .then(async response => {\r\n                        this.arrCooperativas = response.data\r\n                    })\r\n                }\r\n                this.isActiveLoading = false\r\n                this.isVisibleLoad = false\r\n            })\r\n        })\r\n    }\r\n}\r\n</script>"],"mappings":"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"}]}