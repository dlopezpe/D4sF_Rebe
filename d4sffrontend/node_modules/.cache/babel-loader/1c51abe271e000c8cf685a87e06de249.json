{"remainingRequest":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\src\\components\\importParcels\\InportCampanaComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\src\\components\\importParcels\\InportCampanaComponent.vue","mtime":1681217492554},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\babel.config.js","mtime":1681217492507},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681731147886},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1681731156386},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681731147886},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1681731148945}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["getProfile","getPermisos","getAllEnterprises","getEnterprise","getAllCooperatives","getCooperative","importCampanaFromFile","AlertaGeneral","name","components","data","isActiveLoading","exportarExcel","keyComponentMonitor","visibleModal","fechasArr","Array","selectValueEmpresa","flagIndicatingDataHasBeenLoadedInVariables","is_superuser","is_staff","is_systemadmin","is_enterpriseadmin","is_coop_user","arrEmpresas","arrEmpresasList","arrCooperativas","allParcelsOfEnterprises","allParcelsOfEnterprisesFilter","start","length","rowSelects","selectValueCapa","SentinelLayer","calOptions","time","valueDates","valueRange","timeValuesArr","nombreInforme","getNow","checked_clouds","tipoAlerta","mensajeAlerta","fechasParcelasNumImages","verCargandoImagenes","disabledGenerar","verErrorIntervalo","verCargandoFechasBbox","initialStep","steps","open","verTimeoutNumImg","file","procesadas","erroresParcelas","cambiadas","totalParcelas","siembras","erroresSiembras","producciones","erroresProducciones","methods","actionVisibleModal","action","onChangeFiles","importarCampana","console","info","$refs","alertaGenerall","verAlerta","then","response","formattedProcesadas","parcelasTotales","campanas","map","item","push","formattedErroresParcelas","formattedSiembra","siembra","formattedErroresSiembra","erroresSiembra","formattedProduccion","produccion","formattedErroresProduccion","erroresProduccion","catch","error","importarCampanaConfirmar","seleccionaEmpresa","empresa","arrParcels","enterprise","parcels","features","parcel","result","split","enterprises","today","Date","date","getFullYear","getMonth","getDate","getNameEnterprise","value","filter","id","onBuscar","busqueda","properties","toUpperCase","includes","actionOnPagination","ev","onSort","order","index","column","orden","sort","a","b","parseFloat","mounted","beforeCreate","user","cooperative_user","enterprise_id","isVisibleLoad"],"sources":["src/components/importParcels/InportCampanaComponent.vue"],"sourcesContent":["<template>\r\n    <div class=\"bx--grid\">\r\n        <br>\r\n        <div id=\"txt-explicativo\" class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <h2>Importar Campaña desde .xlsx <img src=\"../../assets/agriculture-analytics.svg\" style=\"width: 40px;\"></h2>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div id=\"txt-explicativo\" class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <p>Para poder importar los datos de campaña, el Excel debe contener las pestañas \"Parcelas\", \"Datos Producción\" y \"Siembras\"</p>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"bx--row\" style=\"margin-top: 20px;\">\r\n            <div class=\"bx--col-sm-12 bx--col-md-3 bx--col-lg-3\">\r\n                <cv-select\r\n                    theme=\"\"\r\n                    :label=\"$t('map.listado_empresas')\"\r\n                    :hide-label=\"false\"\r\n                    :inline=\"false\"\r\n                    :disabled=\"false\"\r\n                    @change=\"seleccionaEmpresa\"\r\n                    v-model=\"selectValueEmpresa\"\r\n                >\r\n                    <cv-select-option :value=\"''\" disabled selected hidden>{{$t(\"map.sel_empresa\")}}</cv-select-option>\r\n                    <cv-select-optgroup label=\"Todas las Empresas\" v-if=\"is_superuser || is_systemadmin\">\r\n                        <cv-select-option :value=\"`all`\" v-if=\"is_superuser || is_systemadmin\">{{$t(\"map.most_todas_empresas\")}}</cv-select-option>\r\n                        <cv-select-option v-for=\"empresa in arrEmpresasList\" :value=\"String(empresa.id)\"  v-bind:key=\"empresa.id\">\r\n                            {{empresa.name}}\r\n                        </cv-select-option>\r\n                    </cv-select-optgroup>\r\n                    <cv-select-optgroup :label=\"`Cooperativa ${cooperativa.name}`\" v-bind:key=\"cooperativa.id\" v-for=\"cooperativa in arrCooperativas\">\r\n                        <cv-select-option :value=\"`coop_${cooperativa.id}`\">{{$t(\"map.most_todas_empresas\")}}</cv-select-option>\r\n                        <cv-select-option v-for=\"empresa in cooperativa.enterprises\" :value=\"String(empresa.id)\"  v-bind:key=\"empresa.id\">\r\n                            {{empresa.name}}\r\n                        </cv-select-option>\r\n                    </cv-select-optgroup>\r\n                </cv-select>\r\n            </div>\r\n            <div class=\"bx--col-sm-12 bx--col-md-3 bx--col-lg-3\">\r\n                <cv-file-uploader\r\n                kind=\"\"\r\n                label=\"Subir Archivo\"\r\n                helperText=\"El formato permitido es .xlsx o .xls\"\r\n                :accept=\"['.xlsx', '.xls']\"\r\n                :clear-on-reselect=\"false\"\r\n                :initial-state-uploading=\"false\"\r\n                :multiple=\"false\"\r\n                :removable=\"true\"\r\n                @change=\"onChangeFiles\"\r\n                remove-aria-label=\"Custom remove aria label\" ref=\"fileUploader\">\r\n                </cv-file-uploader>\r\n            </div>\r\n            <div class=\"bx--col-sm-12 bx--col-md-3 bx--col-lg-3\">\r\n                <cv-button\r\n                    kind=\"primary\"\r\n                    :disabled=\"false\"\r\n                    @click=\"importarCampana\"\r\n                >\r\n                    Importar\r\n                </cv-button>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <h2>Pestaña parcelas</h2>\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <p>Parcelas importadas {{procesadas.length}}</p>\r\n                <br>\r\n                <cv-data-table :columns=\"['ID', 'PARCELA', 'CULTIVO', 'VARIEDAD', 'PLANTAS POR HA']\">\r\n                    <template slot=\"data\" v-for=\"procesada in procesadas\">\r\n                        <cv-data-table-row \r\n                            v-for=\"feature in procesada\"\r\n                            :key=\"`${feature.id}`\"\r\n                            :value=\"`${feature.id}`\"\r\n                            :aria-label-for-batch-checkbox=\"`Custom aria label for row ${feature.id} batch`\"  >\r\n                            <cv-data-table-cell>{{feature.ID_FINCA}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.PARCELA}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.CULTIVO}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.VARIEDAD}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.PLANTAS_HA}}</cv-data-table-cell>\r\n                        \r\n                        \r\n                        </cv-data-table-row>\r\n                    </template>\r\n                </cv-data-table>\r\n            </div>\r\n            \r\n            <div class=\"bx--col\">\r\n                <p>Errores parcelas {{erroresParcelas.length}}</p>\r\n                <br>\r\n                <cv-data-table :columns=\"['ID FINCA', 'PARCELA', 'ERROR']\">\r\n                    <template slot=\"data\" v-for=\"error in erroresParcelas\">\r\n                        <cv-data-table-row \r\n                            v-for=\"feature in error\"\r\n                            :key=\"`${feature.id}`\"\r\n                            :value=\"`${feature.id}`\"\r\n                            :aria-label-for-batch-checkbox=\"`Custom aria label for row ${feature.id} batch`\"  >\r\n                            <cv-data-table-cell>{{feature.ID_FINCA}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.PARCELA}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.ERROR}}</cv-data-table-cell>\r\n                        </cv-data-table-row>\r\n                    </template>\r\n                </cv-data-table>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <h2>Pestaña siembra</h2>\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <p>Siembras importadas {{siembras.length}}</p>\r\n                <br>\r\n                <cv-data-table :columns=\"['ID', 'PARCELA', 'FECHAS', 'VARIEDAD', 'PLANTAS REALES HA']\">\r\n                    <template slot=\"data\" v-for=\"siembra in siembras\">\r\n                        <cv-data-table-row \r\n                            v-for=\"feature in siembra\"\r\n                            :key=\"`${feature.id}`\"\r\n                            :value=\"`${feature.id}`\"\r\n                            :aria-label-for-batch-checkbox=\"`Custom aria label for row ${feature.id} batch`\"  >\r\n                            <cv-data-table-cell>{{feature.ID_FINCA}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.PARCELA}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.FECHA_INICIO}} - {{feature.FECHA_FIN}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.VARIEDAD}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.PLANTAS_REALES_HA}}</cv-data-table-cell>\r\n                        \r\n                        \r\n                        </cv-data-table-row>\r\n                    </template>\r\n                </cv-data-table>\r\n            </div>\r\n            <div class=\"bx--col\">\r\n                <p>Errores siembras {{erroresSiembras.length}}</p>\r\n                <br>\r\n                <cv-data-table :columns=\"['ID FINCA', 'PARCELA', 'ERROR']\">\r\n                    <template slot=\"data\" v-for=\"error in erroresSiembras\">\r\n                        <cv-data-table-row \r\n                            v-for=\"feature in error\"\r\n                            :key=\"`${feature.id}`\"\r\n                            :value=\"`${feature.id}`\"\r\n                            :aria-label-for-batch-checkbox=\"`Custom aria label for row ${feature.id} batch`\"  >\r\n                            <cv-data-table-cell>{{feature.ID_FINCA}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.PARCELA}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.ERROR}}</cv-data-table-cell>\r\n                        </cv-data-table-row>\r\n                    </template>\r\n                </cv-data-table>\r\n            </div>\r\n        </div>\r\n\r\n        <br>\r\n        <h2>Pestaña Producción</h2>\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <p>Producciones importadas {{producciones.length}}</p>\r\n                <br>\r\n                <cv-data-table :columns=\"['ID', 'PARCELA', 'CULTIVO', 'VARIEDAD', 'PRODUCCION', 'FECHA TERMINO']\">\r\n                    <template slot=\"data\" v-for=\"produccion in producciones\">\r\n                        <cv-data-table-row \r\n                            v-for=\"feature in produccion\"\r\n                            :key=\"`${feature.id}`\"\r\n                            :value=\"`${feature.id}`\"\r\n                            :aria-label-for-batch-checkbox=\"`Custom aria label for row ${feature.id} batch`\"  >\r\n                            <cv-data-table-cell>{{feature.ID_FINCA}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.PARCELA}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.CULTIVO}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.VARIEDAD}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.PRODUCCION}} {{feature.TIPO_UD}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.FECHA_FIN}}</cv-data-table-cell>\r\n                        \r\n                        \r\n                        </cv-data-table-row>\r\n                    </template>\r\n                </cv-data-table>\r\n            </div>\r\n            <div class=\"bx--col\">\r\n                <p>Errores producción {{erroresProducciones.length}}</p>\r\n                <br>\r\n                <cv-data-table :columns=\"['ID FINCA', 'PARCELA', 'ERROR']\">\r\n                    <template slot=\"data\" v-for=\"error in erroresProducciones\">\r\n                        <cv-data-table-row \r\n                            v-for=\"feature in error\"\r\n                            :key=\"`${feature.id}`\"\r\n                            :value=\"`${feature.id}`\"\r\n                            :aria-label-for-batch-checkbox=\"`Custom aria label for row ${feature.id} batch`\"  >\r\n                            <cv-data-table-cell>{{feature.ID_FINCA}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.PARCELA}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{feature.ERROR}}</cv-data-table-cell>\r\n                        </cv-data-table-row>\r\n                    </template>\r\n                </cv-data-table>\r\n            </div>\r\n        </div>\r\n        <br>\r\n\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <cv-button\r\n                    kind=\"primary\"\r\n                    :disabled=\"totalParcelas ? false : true\"\r\n                    @click=\"importarCampanaConfirmar\">\r\n                    Confirmar importación\r\n                </cv-button>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        \r\n        <cv-modal\r\n            close-aria-label=\"Cerrar\"\r\n            size=\"large\"\r\n            :visible=\"visibleModal\"\r\n            @primary-click=\"actionPrimary\"\r\n            @modal-hidden=\"actionVisibleModal(false)\"\r\n            :auto-hide-off=\"false\">\r\n            <template v-if=\"true\" slot=\"title\">Selección de Parcelas</template>\r\n            <template v-if=\"false\" slot=\"title\">{{empresa.name}}</template>\r\n            <template v-if=\"true\" slot=\"content\" style=\"padding-right: 0%\">\r\n                <p>Selecciona a continuación las parcelas sobre las que quieres realizar la consulta. Puedes utilizar el buscador para encontrar la/s parcela/s que necesitas. Para poder ver el nombre de todas las parcelas, por favor utiliza el selector que encontrarás en la parte inferior de la tabla.</p>\r\n                <cv-data-table\r\n                :sortable=\"false\"\r\n                :pagination=\"{ \r\n                    numberOfItems: allParcelsOfEnterprisesFilter.length, \r\n                    pageSizes: [\r\n                        {\r\n                            value: 10,\r\n                            label: '10'\r\n                        }, \r\n                        {\r\n                            value: 15,\r\n                            label: '15'\r\n                        },\r\n                        {\r\n                            value: 20,\r\n                            label: '20'\r\n                        }, \r\n                        {\r\n                            value: 25,\r\n                            label: '25'\r\n                        }, \r\n                        {\r\n                            value: allParcelsOfEnterprisesFilter.length,\r\n                            label: 'Todas'\r\n                        }\r\n                    ] \r\n                }\" \r\n                @pagination=\"actionOnPagination\"\r\n                :columns=\"[\r\n                    {\r\n                        key: 'name',\r\n                        label: this.$t('graficos.nombre'),\r\n                        'sortable': false\r\n                    },\r\n                    {\r\n                        key: 'description',\r\n                        label: this.$t('graficos.descrip'),\r\n                        'sortable': false\r\n                    },\r\n                    {\r\n                        key: 'heactareas',\r\n                        label: this.$t('graficos.hectareas'),\r\n                        'sortable': false\r\n                    },\r\n                    {\r\n                        key: 'enterprise',\r\n                        label: 'Empresa',\r\n                        'sortable': false\r\n                    },\r\n                ]\"\r\n                @sort=\"onSort\"\r\n                v-model=\"rowSelects\"\r\n                ref=\"tableLstadoT2MultiCoop\"\r\n                searchLabel=\"Filter\" searchPlaceholder=\"Filter\" searchClearLabel=\"Clear filter\"\r\n            >\r\n                <template v-if=\"true\" slot=\"actions\">\r\n                    <cv-search :placeholder=\"$t('graficos.buscar_nombre')\" @input=\"onBuscar\"></cv-search>\r\n                </template>\r\n                <template v-if=\"true\" slot=\"batch-actions\">\r\n                    <cv-button>\r\n                        \r\n                    </cv-button>  \r\n                </template>\r\n                <template slot=\"data\">\r\n                    <cv-data-table-row\r\n                        v-for=\"feature in allParcelsOfEnterprisesFilter.slice(start, start+length)\"\r\n                        :key=\"`${feature.id}`\"\r\n                        :value=\"`${feature.id}`\"\r\n                        :aria-label-for-batch-checkbox=\"`Custom aria label for row ${feature.id} batch`\"\r\n                    >\r\n                        <cv-data-table-cell>{{is_superuser ? feature.id+' - ' : ''}}{{feature.properties.name}}</cv-data-table-cell>\r\n                        <cv-data-table-cell>{{feature.properties.description}}</cv-data-table-cell>\r\n                        <cv-data-table-cell>{{feature.properties.area}}</cv-data-table-cell>\r\n                        <cv-data-table-cell>{{getNameEnterprise(feature.properties.enterprise_id)}}</cv-data-table-cell>\r\n                    </cv-data-table-row>\r\n                </template>\r\n            </cv-data-table>\r\n            </template>\r\n            <template slot=\"primary-button\">Seleccionar</template>\r\n        </cv-modal>\r\n        <AlertaGeneral ref=\"alertaGenerall\" :tituloAlert=\"mensajeAlerta\" :tipoAlert=\"tipoAlerta\" />\r\n        <cv-loading\r\n            :active=\"isActiveLoading\"\r\n            :overlay=\"true\">\r\n        </cv-loading>\r\n\r\n    \r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {getProfile, getPermisos} from '@/auth/index'\r\nimport {getAllEnterprises, getEnterprise} from '@/crudFunctions/crudEnterprise'//getFechasSentinelForInformes\r\nimport {getAllCooperatives, getCooperative} from '@/crudFunctions/crudCooperativas'\r\nimport {importCampanaFromFile} from '@/crudFunctions/crudEnterprise'\r\nimport AlertaGeneral from \"@/components/AlertaGeneral\";\r\nexport default {\r\n    name: 'Monitor',\r\n    components: {AlertaGeneral},\r\n    data(){\r\n        return {\r\n            isActiveLoading: false,\r\n            exportarExcel: false,\r\n            //\r\n            keyComponentMonitor: 0,\r\n            visibleModal: false,\r\n            data: {},\r\n            fechasArr: Array(),\r\n            //\r\n            selectValueEmpresa: '',\r\n            //\r\n            flagIndicatingDataHasBeenLoadedInVariables: false,\r\n            //Usuario\r\n            is_superuser: false,\r\n            is_staff: false,\r\n            is_systemadmin: false,\r\n            is_enterpriseadmin: false,\r\n            is_coop_user: false,\r\n            //Empresas sel\r\n            arrEmpresas: [],\r\n            arrEmpresasList: [],\r\n            arrCooperativas: [],\r\n            allParcelsOfEnterprises: [],\r\n            allParcelsOfEnterprisesFilter: [],\r\n            //\r\n            start: 0,\r\n            length: 10,\r\n            //\r\n            rowSelects: [],\r\n            selectValueCapa: '',\r\n            //\r\n            SentinelLayer: 'NDVI',\r\n            calOptions: {\r\n                \"dateFormat\": \"Y-m-d\"\r\n            },\r\n            time: ``,\r\n            valueDates: [],\r\n            valueRange: [],\r\n            timeValuesArr: [],\r\n            nombreInforme: `Gráfico - ${this.getNow()}`,\r\n            checked_clouds: false,\r\n            //\r\n            tipoAlerta: `error`,\r\n            mensajeAlerta: '',\r\n            //\r\n            fechasParcelasNumImages: {},\r\n            verCargandoImagenes: false,\r\n            //\r\n            disabledGenerar: false,\r\n            //\r\n            verErrorIntervalo: false,\r\n            verCargandoFechasBbox: false,\r\n            //\r\n            initialStep: 1,\r\n            steps: [\r\n                \"Nombre de informe y Selección de Parcelas\",\r\n                \"Selección de capas y Nubes\",\r\n                \"Selección de Fechas\",\r\n                \"Resumen de Informe\",\r\n            ],\r\n            open: [false, false, false, false],\r\n            verTimeoutNumImg: false,\r\n            //\r\n            file: null,\r\n            procesadas: [],\r\n            erroresParcelas: [],\r\n            cambiadas: [],\r\n            totalParcelas: 0,\r\n            siembras: [],\r\n            erroresSiembras: [],\r\n            producciones: [],\r\n            erroresProducciones: []\r\n        }\r\n    },\r\n    methods: {\r\n        actionVisibleModal(action){\r\n            this.visibleModal = action\r\n        },\r\n        \r\n        onChangeFiles(file){\r\n            this.file = file\r\n        },\r\n        importarCampana(){\r\n            if(!this.file){\r\n                console.info('No hay archivo')\r\n                this.mensajeAlerta = `Debe seleccionar un archivo`\r\n                this.tipoAlerta = `error`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                return\r\n            }\r\n            if(!this.selectValueEmpresa){\r\n                console.info('No hay empresa')\r\n                this.mensajeAlerta = `Debe seleccionar una empresa`\r\n                this.tipoAlerta = `error`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                return\r\n            }\r\n            console.info('Importando campaña')\r\n            this.isActiveLoading = true\r\n            importCampanaFromFile(this.file[0].file, this.selectValueEmpresa, false)\r\n            .then(response => {\r\n                \r\n                this.isActiveLoading = false\r\n\r\n                const formattedProcesadas = []\r\n                var parcelasTotales = 0\r\n                response.data.campanas.map(item => {\r\n                    formattedProcesadas.push([item])\r\n                    parcelasTotales++\r\n                })\r\n                const formattedErroresParcelas = []\r\n                response.data.erroresParcelas.map(item => {\r\n                    formattedErroresParcelas.push([item])\r\n                })\r\n\r\n                const formattedSiembra = []\r\n                response.data.siembra.map(item => {\r\n                    formattedSiembra.push([item])\r\n                })\r\n                const formattedErroresSiembra = []\r\n                response.data.erroresSiembra.map(item => {\r\n                    formattedErroresSiembra.push([item])\r\n                })\r\n\r\n                const formattedProduccion = []\r\n                response.data.produccion.map(item => {\r\n                    formattedProduccion.push([item])\r\n                })\r\n                const formattedErroresProduccion = []\r\n                response.data.erroresProduccion.map(item => {\r\n                    formattedErroresProduccion.push([item])\r\n                })\r\n\r\n                this.procesadas = formattedProcesadas\r\n                this.erroresParcelas = formattedErroresParcelas\r\n\r\n                this.siembras = formattedSiembra\r\n                this.erroresSiembras = formattedErroresSiembra\r\n\r\n                this.producciones = formattedProduccion\r\n                this.erroresProducciones = formattedErroresProduccion\r\n                this.totalParcelas = parcelasTotales\r\n\r\n\r\n            })\r\n            .catch(error => {\r\n                this.isActiveLoading = false\r\n                console.error(error)\r\n                this.mensajeAlerta = `Error al importar campaña`\r\n                this.tipoAlerta = `error`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n            })\r\n        },\r\n\r\n        importarCampanaConfirmar(){\r\n            if(!this.file){\r\n                console.info('No hay archivo')\r\n                this.mensajeAlerta = `Debe seleccionar un archivo`\r\n                this.tipoAlerta = `error`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                return\r\n            }\r\n            if(!this.selectValueEmpresa){\r\n                console.info('No hay empresa')\r\n                this.mensajeAlerta = `Debe seleccionar una empresa`\r\n                this.tipoAlerta = `error`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                return\r\n            }\r\n            console.info('Importando campaña')\r\n            this.isActiveLoading = true\r\n            importCampanaFromFile(this.file[0].file, this.selectValueEmpresa, true)\r\n            .then(() => {\r\n                this.isActiveLoading = false\r\n                this.mensajeAlerta = `Campaña importada correctamente`\r\n                this.tipoAlerta = `success`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n\r\n            })\r\n            .catch(error => {\r\n                this.isActiveLoading = false\r\n                console.error(error)\r\n                this.mensajeAlerta = `Error al importar campaña`\r\n                this.tipoAlerta = `error`\r\n                this.$refs.alertaGenerall.verAlerta()\r\n            })\r\n        },\r\n        \r\n        seleccionaEmpresa(empresa){\r\n            const arrParcels = []\r\n            if(empresa == 'all'){\r\n                getAllEnterprises()\r\n                    .then(async response => {\r\n                        response.data.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.arrEmpresas = response.data\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n            }else{\r\n                const result = empresa.split('_')\r\n                if(result[0] == 'coop'){\r\n                    getCooperative(result[1])\r\n                    .then(response => {\r\n                        response.data.enterprises.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.arrEmpresas = response.data.enterprises\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n                }else{\r\n                    getEnterprise(empresa)\r\n                    .then(async response => {\r\n                        response.data.parcels.features.map(parcel => {\r\n                            arrParcels.push(parcel)\r\n                        })\r\n                        this.arrEmpresas = [response.data]\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        getNow() {\r\n            const today = new Date();\r\n            const date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n            //const time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n            //const dateTime = date +' '+ time;\r\n            //this.timestamp = dateTime;\r\n            //console.info(dateTime)\r\n            return date\r\n        },\r\n        getNameEnterprise(value){\r\n            const result = this.arrEmpresas.filter(enterprise => enterprise.id == value)\r\n            return result[0].name\r\n        },\r\n        onBuscar(busqueda){\r\n            if(busqueda){\r\n                const result = this.allParcelsOfEnterprises.filter(parcel => parcel.properties.name.toUpperCase().includes(busqueda.toUpperCase()))\r\n                this.allParcelsOfEnterprisesFilter = result\r\n            }else{\r\n                this.allParcelsOfEnterprisesFilter = this.allParcelsOfEnterprises\r\n            }\r\n        },\r\n        actionOnPagination(ev){\r\n            this.start = ev.start-1\r\n            this.length = ev.length\r\n        },\r\n        onSort(order) {\r\n            const index = order.index\r\n            let column = ``\r\n            const orden = order.order\r\n            \r\n            switch (index) {\r\n                case '0':\r\n                    column = `name`\r\n                    break\r\n                case '1':\r\n                    column = `name`\r\n                    break\r\n                case '2':\r\n                    column = 'area'\r\n                    break\r\n                case '3':\r\n                    column = 'enterprise'\r\n                    break\r\n                default:\r\n                    column = `name`\r\n            }\r\n            if(orden == 'ascending'){\r\n                this.allParcelsOfEnterprisesFilter.sort((a, b) => parseFloat(a.name) - parseFloat(b.name));\r\n            }\r\n            console.info(column)\r\n        },\r\n    },\r\n    mounted: function () {\r\n        //console.info(this.$refs.acc)\r\n        this.getNow()\r\n        //console.info('User Logged')\r\n    },\r\n    beforeCreate(){\r\n        getProfile()\r\n        .then(response => {\r\n            const user = response.data[0]\r\n            getPermisos(response.data[0].user)\r\n            .then(response => {\r\n                this.is_superuser = response.data.is_superuser\r\n                this.is_staff = response.data.is_staff\r\n                this.is_systemadmin = response.data.is_systemadmin\r\n                this.is_enterpriseadmin = response.data.is_enterpriseadmin\r\n                this.is_coop_user = user.cooperative_user\r\n                /*\r\n                //*Obtenemos la empresa del usuario\r\n                const enterprise_id = user.enterprise_id\r\n                getEnterprise(enterprise_id)\r\n                .then(async response => {\r\n                    this.parcelas = response.data.parcels\r\n                    await this.arrEmpresas.push(response.data)\r\n                    this.flagIndicatingDataHasBeenLoadedInVariables = false\r\n                    this.timestamp()\r\n                })\r\n                */\r\n                \r\n                if(this.is_superuser || this.is_systemadmin){\r\n                    //console.info('entra')\r\n                    getAllEnterprises()\r\n                    .then(async response => {\r\n                        this.arrEmpresas = response.data\r\n                        this.arrEmpresasList = response.data\r\n                        const arrParcels = []\r\n                        response.data.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                }else if((this.is_enterpriseadmin || this.is_staff) && !this.is_coop_user){ \r\n                    getEnterprise(user.enterprise_id)\r\n                    .then(async response => {\r\n                        this.arrEmpresas = [response.data]\r\n                        this.arrEmpresasList = [response.data]\r\n                        const arrParcels = []\r\n                        response.data.parcels.features.map(parcel => {\r\n                            arrParcels.push(parcel)\r\n                        })\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                }else if(this.is_coop_user){\r\n                    getCooperative(user.enterprise_id)\r\n                    .then(response => {\r\n                        this.arrCooperativas = [response.data]\r\n                        //this.arrEmpresas = response.data.enterprises\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                }\r\n\r\n                if(this.is_superuser || this.is_systemadmin){\r\n                    getAllCooperatives()\r\n                    .then(async response => {\r\n                        this.arrCooperativas = response.data\r\n                    })\r\n                }\r\n                this.isActiveLoading = false\r\n                this.isVisibleLoad = false\r\n            })\r\n        })\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n    .bx--accordion__content{\r\n        padding-right: 0px!important;\r\n    }\r\n</style>"],"mappings":"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"}]}