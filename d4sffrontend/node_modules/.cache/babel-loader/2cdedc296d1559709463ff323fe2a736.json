{"remainingRequest":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\src\\components\\monitor\\MonitorComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\src\\components\\monitor\\MonitorComponent.vue","mtime":1709553265797},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\babel.config.js","mtime":1681217492507},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["getProfile","getPermisos","getDataNdvi","getDataMoisture","exportToMoisture","exportToNdvi","getAllEnterprises","getEnterprise","getDataCampaign","getDataProduccion","getAllCooperatives","getCooperative","AlertaGeneral","Visor","name","components","data","iswithGraphic","exportarExcel","keyComponentMonitor","visibleModal","visibleModalImages","dataCampana","dataProduccion","fechasArr","Array","selectValueEmpresa","flagIndicatingDataHasBeenLoadedInVariables","is_superuser","is_staff","is_systemadmin","is_enterpriseadmin","is_coop_user","arrEmpresas","arrEmpresasList","arrCooperativas","allParcelsOfEnterprises","allParcelsOfEnterprisesFilter","start","length","rowSelects","selectValueCapa","SentinelLayer","calOptions","time","valueDates","valueRange","timeValuesArr","nombreInforme","getNow","checked_clouds","tipoAlerta","mensajeAlerta","fechasParcelasNumImages","verCargandoImagenes","disabledGenerar","verErrorIntervalo","verCargandoFechasBbox","initialStep","steps","open","verTimeoutNumImg","methods","getSortedCooperativa","cooperativa","enterprises","slice","sort","a","b","localeCompare","onChangeLayer","actionVisibleModal","action","actionChangeAccordeon","ev","$refs","acc","state","map","item","index","changedIndex","getFechas","getFechasSentBBOX","getData","feature","result","filter","parcel","String","id","fechas","porcentNubesHigh","uniqueFechas","resultados","resultado","properties","cloudCoverPercentage","push","date","Set","toGenerar","showModalImagesUser","iswithGraphicReport","alerta_eliminar","show","addImageReport","isWithImage","exportar","paramsString","hide","alertaGenerallModalReport","verAlerta","then","response","Object","hasOwn","window","message","error","catch","alertaGenerall","generarInforme","results","includes","parcelsId","fechasDetectadas","keys","text","toString","fecha","parcelsIdSinProcesar","split","parcela","splice","indexOf","actionChangeDateRange","range","startDate","endDate","chageCapas","capa","seleccionaEmpresa","empresa","arrParcels","enterprise","parcels","features","today","Date","getFullYear","getMonth","getDate","getNameEnterprise","value","onBuscar","busqueda","toUpperCase","actionOnPagination","onSort","order","column","orden","parseFloat","console","info","mounted","beforeCreate","user","cooperative_user","enterprise_id","isActiveLoading","isVisibleLoad"],"sources":["src/components/monitor/MonitorComponent.vue"],"sourcesContent":["<template>\r\n    <div class=\"bx--grid\">\r\n        <br>\r\n        <div id=\"txt-explicativo\" class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <h2>Evolución de cultivo (Monitor) <img src=\"../../assets/agriculture-analytics.svg\" style=\"width: 40px;\"></h2>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div id=\"txt-explicativo\" class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <p>Desde el Monitor podrás revisar de una forma rápida y visual la evolución de los cultivos en las parcelas seleccionadas y durante el intervalo de fechas deseado. Utiliza los filtros que encontrarás a continuación para concretar los datos, el informe de nubes se incluirá siempre independientemente de la selección que se haga.</p>\r\n                <br><p><b>{{$t(\"adminEnterprise.info_nav\")}}</b></p>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"bx--row\" style=\"margin-top: 20px;\">\r\n            <div class=\"bx--col-sm-12 bx--col-md-2 bx--col-lg-2\">\r\n                <cv-select\r\n                    theme=\"\"\r\n                    :label=\"$t('map.listado_empresas')\"\r\n                    :hide-label=\"false\"\r\n                    :inline=\"false\"\r\n                    :disabled=\"false\"\r\n                    @change=\"seleccionaEmpresa\"\r\n                    v-model=\"selectValueEmpresa\"\r\n                >\r\n                    <cv-select-option :value=\"''\" disabled selected hidden>{{$t(\"map.sel_empresa\")}}</cv-select-option>\r\n                    <cv-select-optgroup label=\"Todas las Empresas\" v-if=\"is_superuser || is_systemadmin\">\r\n                        <cv-select-option :value=\"`all`\" v-if=\"is_superuser || is_systemadmin\">{{$t(\"map.most_todas_empresas\")}}</cv-select-option>\r\n                        <cv-select-option v-for=\"empresa in arrEmpresasList\" :value=\"String(empresa.id)\"  v-bind:key=\"empresa.id\">\r\n                            {{empresa.name}}\r\n                        </cv-select-option>\r\n                    </cv-select-optgroup>\r\n                    <cv-select-optgroup :label=\"`Cooperativa ${cooperativa.name}`\" v-bind:key=\"cooperativa.id\" v-for=\"cooperativa in arrCooperativas\">\r\n                        <cv-select-option :value=\"`coop_${cooperativa.id}`\">{{$t(\"map.most_todas_empresas\")}}</cv-select-option>\r\n                        <cv-select-option v-for=\"empresa in getSortedCooperativa(cooperativa).enterprises\" :value=\"String(empresa.id)\"  v-bind:key=\"empresa.id\">\r\n                            {{empresa.name}}\r\n                        </cv-select-option>\r\n                    </cv-select-optgroup>\r\n                </cv-select>\r\n            </div>\r\n            <div class=\"bx--col-sm-12 bx--col-md-2 bx--col-lg-2\">\r\n                <cv-button kind=\"primary\" style=\"margin-top: 17px\" @click=\"actionVisibleModal(true)\">Seleccionar Parcelas</cv-button>\r\n            </div>\r\n            <div class=\"bx--col-sm-12 bx--col-md-2 bx--col-lg-2\">\r\n                <cv-select @change=\"onChangeLayer()\" :label=\"$t('graficos.sel_layer_sen')\" v-model=\"selectValueCapa\">\r\n                    <cv-select-option value=\"NDVI\">{{$t(\"graficos.NDVI\")}}</cv-select-option>\r\n                    <cv-select-option value=\"MOISTURE_INDEX\">{{$t(\"graficos.mostisture_index\")}}</cv-select-option>\r\n                </cv-select>\r\n            </div>\r\n            <div class=\"bx--col-sm-12 bx--col-md-3 bx--col-lg-3\">\r\n                <cv-date-picker\r\n                    kind=\"range\"\r\n                    :dateLabel=\"$t('graficos.fecha_incio')\"\r\n                    :date-end-label=\"$t('graficos.fecha_fin')\"\r\n                    :cal-options=\"calOptions\"\r\n                    @change=\"actionChangeDateRange\"\r\n                    :value=\"valueRange\">\r\n                </cv-date-picker>\r\n            </div>\r\n            <div class=\"bx--col-sm-12 bx--col-md-2 bx--col-lg-2\">\r\n                <cv-button kind=\"primary\" style=\"margin-top: 17px\" :disabled=\"disabledGenerar\" v-if=\"rowSelects.length\" @click=\"generarInforme()\">Mostrar datos</cv-button>\r\n            </div>\r\n            \r\n            <div class=\"bx--col-sm-12 bx--col-md-1 bx--col-lg-1\">\r\n                <cv-button kind=\"primary\" style=\"margin-top: 17px\" v-if=\"exportarExcel\" @click=\"showModalImagesUser(true)\">Exportar</cv-button>\r\n            </div>\r\n            <div class=\"bx--col-sm-12 bx--col-md-3 bx--col-lg-3\">\r\n                <cv-button kind=\"primary\" style=\"margin-top: 17px\" v-if=\"exportarExcel\" @click=\"showModalImagesUser(false)\">Exportar sólo datos</cv-button>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div id=\"txt-explicativo\" class=\"bx--row\" style=\"margin-top: 20px; margin-bottom: 20px;\">\r\n            <div class=\"bx--col\">\r\n                <p>En la gráfica se mostrarán solo los datos de los que se disponga información, es posible que se muestren parcelas sin datos en alguna fecha concreta. Dentro del rango de fechas seleccionado únicamente serán seleccionables en el slide aquellas que tengan algún dato.</p>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <Visor :data=\"data\" :fechasArr=\"fechasArr\" :layer=\"selectValueCapa\" :key=\"keyComponentMonitor\" :dataCampana=\"dataCampana\" :dataProduccion=\"dataProduccion\" :empresa=\"selectValueEmpresa\"/>\r\n        <cv-modal\r\n            close-aria-label=\"Cerrar\"\r\n            size=\"large\"\r\n            :visible=\"visibleModal\"\r\n            @primary-click=\"actionPrimary\"\r\n            @modal-hidden=\"actionVisibleModal(false)\"\r\n            :auto-hide-off=\"false\">\r\n            <template v-if=\"true\" slot=\"title\">Selección de Parcelas</template>\r\n            <template v-if=\"false\" slot=\"title\">{{empresa.name}}</template>\r\n            <template v-if=\"true\" slot=\"content\" style=\"padding-right: 0%\">\r\n                <p>Selecciona a continuación las parcelas sobre las que quieres realizar la consulta. Puedes utilizar el buscador para encontrar la/s parcela/s que necesitas. Para poder ver el nombre de todas las parcelas, por favor utiliza el selector que encontrarás en la parte inferior de la tabla.</p>\r\n                <cv-data-table\r\n                :sortable=\"false\"\r\n                :pagination=\"{ \r\n                    numberOfItems: allParcelsOfEnterprisesFilter.length, \r\n                    pageSizes: [\r\n                        {\r\n                            value: 10,\r\n                            label: '10'\r\n                        }, \r\n                        {\r\n                            value: 15,\r\n                            label: '15'\r\n                        },\r\n                        {\r\n                            value: 20,\r\n                            label: '20'\r\n                        }, \r\n                        {\r\n                            value: 25,\r\n                            label: '25'\r\n                        }, \r\n                        {\r\n                            value: allParcelsOfEnterprisesFilter.length,\r\n                            label: 'Todas'\r\n                        }\r\n                    ] \r\n                }\" \r\n                @pagination=\"actionOnPagination\"\r\n                :columns=\"[\r\n                    {\r\n                        key: 'name',\r\n                        label: this.$t('graficos.nombre'),\r\n                        'sortable': false\r\n                    },\r\n                    {\r\n                        key: 'description',\r\n                        label: this.$t('graficos.descrip'),\r\n                        'sortable': false\r\n                    },\r\n                    {\r\n                        key: 'heactareas',\r\n                        label: this.$t('graficos.hectareas'),\r\n                        'sortable': false\r\n                    },\r\n                    {\r\n                        key: 'enterprise',\r\n                        label: 'Empresa',\r\n                        'sortable': false\r\n                    },\r\n                ]\"\r\n                @sort=\"onSort\"\r\n                v-model=\"rowSelects\"\r\n                ref=\"tableLstadoT2MultiCoop\"\r\n                searchLabel=\"Filter\" searchPlaceholder=\"Filter\" searchClearLabel=\"Clear filter\"\r\n            >\r\n                <template v-if=\"true\" slot=\"actions\">\r\n                    <cv-search :placeholder=\"$t('graficos.buscar_nombre')\" @input=\"onBuscar\"></cv-search>\r\n                </template>\r\n                <template v-if=\"true\" slot=\"batch-actions\">\r\n                    <cv-button>\r\n                        \r\n                    </cv-button>  \r\n                </template>\r\n                <template slot=\"data\">\r\n                    <cv-data-table-row\r\n                        v-for=\"feature in allParcelsOfEnterprisesFilter.slice(start, start+length)\"\r\n                        :key=\"`${feature.id}`\"\r\n                        :value=\"`${feature.id}`\"\r\n                        :aria-label-for-batch-checkbox=\"`Custom aria label for row ${feature.id} batch`\"\r\n                    >\r\n                        <cv-data-table-cell>{{is_superuser ? feature.id+' - ' : ''}}{{feature.properties.name}}</cv-data-table-cell>\r\n                        <cv-data-table-cell>{{feature.properties.description}}</cv-data-table-cell>\r\n                        <cv-data-table-cell>{{feature.properties.area}}</cv-data-table-cell>\r\n                        <cv-data-table-cell>{{getNameEnterprise(feature.properties.enterprise_id)}}</cv-data-table-cell>\r\n                    </cv-data-table-row>\r\n                </template>\r\n            </cv-data-table>\r\n            </template>\r\n            <template slot=\"primary-button\">Seleccionar</template>\r\n        </cv-modal>\r\n        \r\n        \r\n\r\n        <cv-modal\r\n        ref=\"alerta_eliminar\"\r\n        :visible=\"visibleModalImages\"\r\n        kind=\"info\"\r\n        @primary-click=\"addImageReport(true)\"\r\n        @secondary-click=\"addImageReport(false)\"\r\n        >\r\n            <template slot=\"label\"></template>\r\n            <template slot=\"title\">Se va a descargar un archivo Excel con los datos de las parcelas y rango de fechas seleccionados.</template>\r\n            <template slot=\"content\">\r\n             ¿Quieres incluir las imágenes en el archivo?\r\n            </template>\r\n            <template slot=\"secondary-button\">No</template>\r\n            <template slot=\"primary-button\">Si</template>\r\n            \r\n            \r\n        </cv-modal>\r\n        \r\n        <AlertaGeneral ref=\"alertaGenerall\" :ishidden=\"true\" :tituloAlert=\"mensajeAlerta\" :tipoAlert=\"tipoAlerta\" />\r\n        <!-- only for specific scenario search by alertaGenerallModalReport  -->\r\n        <AlertaGeneral ref=\"alertaGenerallModalReport\" :ishidden=\"false\" :tituloAlert=\"mensajeAlerta\" :tipoAlert=\"tipoAlerta\" />\r\n        \r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {getProfile, getPermisos} from '@/auth/index'\r\nimport {getDataNdvi, getDataMoisture, exportToMoisture, exportToNdvi} from '@/crudFunctions/crudMonitor'//getFechasSentinelForInformes\r\nimport {getAllEnterprises, getEnterprise, getDataCampaign,getDataProduccion} from '@/crudFunctions/crudEnterprise'//getFechasSentinelForInformes\r\nimport {getAllCooperatives, getCooperative} from '@/crudFunctions/crudCooperativas'\r\nimport AlertaGeneral from \"@/components/AlertaGeneral\";\r\nimport Visor from './VisorComponent'\r\nexport default {\r\n    name: 'Monitor',\r\n    components: {AlertaGeneral, Visor},\r\n    data(){\r\n        return {\r\n            iswithGraphic: false,\r\n            exportarExcel: false,\r\n            //\r\n            keyComponentMonitor: 0,\r\n            visibleModal: false,\r\n            visibleModalImages: false,\r\n            data: {},\r\n            dataCampana:{},\r\n            dataProduccion:{},\r\n            fechasArr: Array(),\r\n            //\r\n            selectValueEmpresa: '',\r\n            //\r\n            flagIndicatingDataHasBeenLoadedInVariables: false,\r\n            //Usuario\r\n            is_superuser: false,\r\n            is_staff: false,\r\n            is_systemadmin: false,\r\n            is_enterpriseadmin: false,\r\n            is_coop_user: false,\r\n            //Empresas sel\r\n            arrEmpresas: [],\r\n            arrEmpresasList: [],\r\n            arrCooperativas: [],\r\n            allParcelsOfEnterprises: [],\r\n            allParcelsOfEnterprisesFilter: [],\r\n            //\r\n            start: 0,\r\n            length: 10,\r\n            //\r\n            rowSelects: [],\r\n            selectValueCapa: '',\r\n            //\r\n            SentinelLayer: 'NDVI',\r\n            calOptions: {\r\n                \"dateFormat\": \"Y-m-d\"\r\n            },\r\n            time: ``,\r\n            valueDates: [],\r\n            valueRange: [],\r\n            timeValuesArr: [],\r\n            nombreInforme: `Gráfico - ${this.getNow()}`,\r\n            checked_clouds: false,\r\n            //\r\n            tipoAlerta: `error`,\r\n            mensajeAlerta: '',\r\n            //\r\n            fechasParcelasNumImages: {},\r\n            verCargandoImagenes: false,\r\n            //\r\n            disabledGenerar: false,\r\n            //\r\n            verErrorIntervalo: false,\r\n            verCargandoFechasBbox: false,\r\n            //\r\n            initialStep: 1,\r\n            steps: [\r\n                \"Nombre de informe y Selección de Parcelas\",\r\n                \"Selección de capas y Nubes\",\r\n                \"Selección de Fechas\",\r\n                \"Resumen de Informe\",\r\n            ],\r\n            open: [false, false, false, false],\r\n            verTimeoutNumImg: false\r\n        }\r\n    },\r\n    methods: {\r\n        // para ordenar las empresas de la cooperativa alfabéticamente\r\n        getSortedCooperativa(cooperativa) {\r\n            return {\r\n                ...cooperativa,\r\n                enterprises: cooperativa.enterprises.slice().sort((a, b) => {\r\n                return a.name.localeCompare(b.name);\r\n                }),\r\n            };\r\n        },\r\n        onChangeLayer(){\r\n            this.exportarExcel = false\r\n        },\r\n        actionVisibleModal(action){\r\n            this.visibleModal = action\r\n        },\r\n        actionChangeAccordeon(ev){\r\n            this.open = this.$refs.acc.state.map((item, index) => index === ev.changedIndex);\r\n        },\r\n        getFechas(){\r\n            /*\r\n            this.verTimeoutNumImg = false\r\n            if(this.timeValuesArr.length === 0){\r\n                this.mensajeAlerta = 'No se ha seleccionado ningún intervalo de fechas'\r\n                this.tipoAlerta = 'error'\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                this.verErrorIntervalo = true\r\n                return false\r\n            }\r\n            this.verCargandoImagenes = true\r\n            let fechasNum = 0\r\n            getFechasParcelsPreCreate(this.rowSelects, this.timeValuesArr)\r\n            .then(response => {\r\n                console.info(response.data)\r\n                this.fechasParcelasNumImages = response.data\r\n                //getFechasSentinelForInformes(response.data.toString())\r\n                //.then(response => {console.info(response.data)})\r\n\r\n                this.verCargandoImagenes = false\r\n                console.info(response.data, Object.entries(response.data))\r\n                Object.entries(response.data).forEach(entry => {\r\n                    const [key, value] = entry;\r\n                    console.log(key, value);\r\n                    fechasNum = fechasNum + value.resultados.length\r\n                });\r\n                if(fechasNum === 0){\r\n                    this.disabledGenerar = true\r\n                }else{\r\n                    this.disabledGenerar = false\r\n                }\r\n            })\r\n            .catch(() => {this.verCargandoImagenes = false; this.verTimeoutNumImg = true})\r\n            */\r\n        },\r\n        getFechasSentBBOX(){\r\n            /*\r\n            this.verCargandoFechasBbox = true\r\n            getFechasParcelsBBOX(this.rowSelects, this.timeValuesArr)\r\n            .then(response => {\r\n                console.info(response.data)\r\n\r\n                const respuesta = response.data\r\n                    const fechasArray = Array()\r\n                    respuesta.forEach(feature =>{\r\n                        fechasArray.push(feature.properties.date)\r\n                    })\r\n                    this.valueDates = fechasArray.reverse()\r\n                this.verCargandoFechasBbox = false\r\n            })\r\n            .catch(() => this.verCargandoFechasBbox = false)\r\n            \r\n            */\r\n        },\r\n        getData(feature){\r\n            const result = this.allParcelsOfEnterprisesFilter.filter(parcel => feature == (String(parcel.id)))\r\n            const fechas = []\r\n            let porcentNubesHigh = 0\r\n            let uniqueFechas = []\r\n            if(this.fechasParcelasNumImages[feature]){\r\n                this.fechasParcelasNumImages[feature].resultados.map(resultado => {\r\n                    if(resultado.properties.cloudCoverPercentage > porcentNubesHigh){\r\n                        porcentNubesHigh = resultado.properties.cloudCoverPercentage \r\n                    }\r\n                    fechas.push(resultado.properties.date)\r\n                })\r\n                uniqueFechas = [...new Set(fechas)];\r\n            }\r\n            \r\n            return `<td>${result[0].properties.name}</td>\r\n            <td>${this.fechasParcelasNumImages[feature] ? uniqueFechas.length : ''}</td>\r\n            <td>${this.fechasParcelasNumImages[feature] ? uniqueFechas : ''}</td>\r\n            <td>${this.checked_clouds ? this.fechasParcelasNumImages[feature] ? porcentNubesHigh +'%' : '' : 'n/a'}</td>`\r\n            \r\n        },\r\n        toGenerar(){\r\n            /*\r\n            if(!this.nombreInforme){\r\n                this.mensajeAlerta = 'El campo Nombre de Informe no debe estar vacío'\r\n                this.tipoAlerta = 'error'\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                return false\r\n            }\r\n            if(this.timeValuesArr.length === 0){\r\n                this.mensajeAlerta = 'No se ha seleccionado ningún intervalo de fechas'\r\n                this.tipoAlerta = 'error'\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                this.verErrorIntervalo = true\r\n                return false\r\n            }\r\n            if(this.selectValueCapa.length === 0){\r\n                this.mensajeAlerta = 'No se ha seleccionado ninguna capa de Sentinel'\r\n                this.tipoAlerta = 'error'\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                this.verErrorIntervalo = true\r\n                return false\r\n            }\r\n            createInformes(this.nombreInforme, this.selectValueCapa, this.timeValuesArr, this.rowSelects, is_cooperative, id_enterprise, this.checked_clouds)\r\n            .then(() => {\r\n                this.$refs.modal_procesando.show()\r\n            })\r\n            */\r\n        },\r\n        showModalImagesUser(iswithGraphicReport){\r\n            this.iswithGraphic = iswithGraphicReport;\r\n            this.$refs.alerta_eliminar.show();\r\n        },\r\n        addImageReport(isWithImage){ \r\n            this.exportar(isWithImage);\r\n        },\r\n        exportar(isWithImage = false){\r\n            let paramsString = isWithImage ? \"?image=true\" : \"?image=false\";\r\n            paramsString += \"&IswithGraphic=\"+this.iswithGraphic;\r\n            this.$refs.alerta_eliminar.hide(); \r\n\r\n            // show user message\r\n            this.mensajeAlerta = 'El proceso se ha lanzado correctamente. Tenga paciencia, puede requerir varios minutos para completarse. En caso de error recibirá un correo electrónico informativo'\r\n            this.tipoAlerta = 'info' \r\n            this.$refs.alertaGenerallModalReport.verAlerta()\r\n            this.verErrorIntervalo = true\r\n            \r\n            if(this.selectValueCapa === 'NDVI'){\r\n                \r\n                exportToNdvi(this.data,paramsString)\r\n                .then(response => {\r\n                    if (Object.hasOwn(response.data, 'data')) {\r\n                    window.open('https://monitord4sf.devsmb.es/media/parcels/'+response.data.data)\r\n                        //window.open('http://127.0.0.1:7000/media/parcels/'+response.data.data)\r\n                    }\r\n\r\n                    if(response.data.message){\r\n                        \r\n                        this.mensajeAlerta = response.data.message\r\n                        this.tipoAlerta = response.data.error ? 'error' : 'warning'\r\n                        this.$refs.alertaGenerallModalReport.verAlerta(false)\r\n                        this.verErrorIntervalo = true\r\n                        \r\n                        //this.$refs.alertaGenerall.hideAlert = false\r\n                        return false\r\n                    }\r\n\r\n                    \r\n                })\r\n                .catch(() => {\r\n                    this.mensajeAlerta = 'No se ha podido completar la solicitud'\r\n                    this.tipoAlerta = 'error'\r\n                    this.$refs.alertaGenerall.verAlerta()\r\n                    this.verErrorIntervalo = true\r\n                    return false\r\n                })\r\n            }else{\r\n                exportToMoisture(this.data,paramsString)\r\n                .then(response => {\r\n\r\n                    if (Object.hasOwn(response.data, 'data')) {\r\n                    window.open('https://monitord4sf.devsmb.es/media/parcels/'+response.data.data)\r\n                        //window.open('http://127.0.0.1:7000/media/parcels/'+response.data.data)\r\n                    }\r\n\r\n                    if(response.data.message){\r\n                        \r\n                        this.mensajeAlerta = response.data.message\r\n                        this.tipoAlerta = response.data.error ? 'error' : 'warning' \r\n                        this.$refs.alertaGenerallModalReport.verAlerta()\r\n                        this.verErrorIntervalo = true\r\n                        return false\r\n                    }\r\n\r\n                })\r\n                .catch(() => {\r\n                    this.mensajeAlerta = 'No se ha podido completar la solicitud'\r\n                    this.tipoAlerta = 'error'\r\n                    this.$refs.alertaGenerall.verAlerta()\r\n                    this.verErrorIntervalo = true\r\n                    return false\r\n                })\r\n            }\r\n        },\r\n        generarInforme(){\r\n            // Consultamos si las parcelas existen\r\n            const results = this.allParcelsOfEnterprisesFilter.filter(parcel => this.rowSelects.includes(String(parcel.id)))\r\n            const parcelsId = []\r\n            results.map(result => parcelsId.push(result.id))\r\n            // Comprobaciones de fecha y capa\r\n            if(this.timeValuesArr.length === 0){\r\n                this.mensajeAlerta = 'No se ha seleccionado ningún intervalo de fechas'\r\n                this.tipoAlerta = 'error'\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                this.verErrorIntervalo = true\r\n                return false\r\n            }\r\n            if(this.selectValueCapa.length === 0){\r\n                this.mensajeAlerta = 'No se ha seleccionado ninguna capa de Sentinel'\r\n                this.tipoAlerta = 'error'\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                this.verErrorIntervalo = true\r\n                return false\r\n            }\r\n            if(this.selectValueCapa === 'NDVI'){\r\n                getDataNdvi(this.timeValuesArr[0], this.timeValuesArr[1], parcelsId)\r\n                .then(response => {\r\n                    const fechasDetectadas = Object.keys(response.data)\r\n                    const text = parcelsId.toString();\r\n                    fechasDetectadas.map(fecha => {\r\n                        const parcelsIdSinProcesar = text.split(\",\")\r\n                        response.data[fecha].resultado.map(parcela => {\r\n                            parcelsIdSinProcesar.splice(parcelsIdSinProcesar.indexOf(parcela.parcel.toString()), 1);\r\n                        })\r\n                        const results = this.allParcelsOfEnterprisesFilter.filter(parcel => parcelsIdSinProcesar.includes(String(parcel.id)))\r\n                        results.map(parcela => {\r\n                            response.data[fecha].resultado.push(\r\n                                {\r\n                                    \"id\": parcela.id,\r\n                                    \"parcel\": parcela.id,\r\n                                    \"name\": parcela.properties.name,\r\n                                    \r\n                                    \"pix_azul_total\": 0.0,\r\n                                    \"pix_azul_total_porcent\": 0.0,\r\n                                    \"pix_azul_altos_total\": 0.0,\r\n                                    \"pix_azul_altos_porcent\": 0.0,\r\n                                    \"pix_azul_altos_area_porcent\": 0.0,\r\n                                    \"pix_azul_medios_total\": 0.0,\r\n                                    \"pix_azul_medios_porcent\": 0.0,\r\n                                    \"pix_azul_medios_area_porcent\": 0.0,\r\n                                    \"pix_azul_bajos_total\": 0.0,\r\n                                    \"pix_azul_bajos_porcent\": 0.0,\r\n                                    \"pix_azul_bajos_area_porcent\": 0.0,\r\n                                    \"pix_amarillo_total\": 0.0,\r\n                                    \"pix_amarillo_total_porcent\": 0.0,\r\n                                    \"pix_amarillo_altos_total\": 0.0,\r\n                                    \"pix_amarillo_altos_porcent\": 0.0,\r\n                                    \"pix_amarillo_altos_area_porcent\": 0.0,\r\n                                    \"pix_amarillo_medios_total\": 0.0,\r\n                                    \"pix_amarillo_medios_porcent\": 0.0,\r\n                                    \"pix_amarillo_medios_area_porcent\": 0.0,\r\n                                    \"pix_amarillo_bajos_total\": 0.0,\r\n                                    \"pix_amarillo_bajos_porcent\": 0.0,\r\n                                    \"pix_amarillo_bajos_area_porcent\": 0.0,\r\n                                    \r\n                                    \"pix_rojo_total\": 0.0,\r\n                                    \"pix_rojo_total_porcent\": 0.0,\r\n                                    \"pix_rojo_altos_total\": 0.0,\r\n                                    \"pix_rojo_altos_porcent\": 0.0,\r\n                                    \"pix_rojo_altos_area_porcent\": 0.0,\r\n                                    \"pix_rojo_medios_total\": 0.0,\r\n                                    \"pix_rojo_medios_porcent\": 0.0,\r\n                                    \"pix_rojo_medios_area_porcent\": 0.0,\r\n                                    \"pix_rojo_bajos_total\": 0.0,\r\n                                    \"pix_rojo_bajos_porcent\": 0.0,\r\n                                    \"pix_rojo_bajos_area_porcent\": 0.0,\r\n                                    \"pix_verde_total\": 0.0,\r\n                                    \"pix_verde_total_porcent\": 0.0,\r\n                                    \"pix_verde_altos_total\": 0.0,\r\n                                    \"pix_verde_altos_porcent\": 0.0,\r\n                                    \"pix_verde_altos_area_porcent\": 0.0,\r\n                                    \"pix_verde_medios_total\": 0.0,\r\n                                    \"pix_verde_medios_porcent\": 0.0,\r\n                                    \"pix_verde_medios_area_porcent\": 0.0,\r\n\r\n                                    \"nubes_porcent\": 0,\r\n                                    \"plantas_reales\": 0,\r\n                                    \"cosecha\": 0\r\n                                }\r\n                            )\r\n                            response.data[fecha].resultado.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0))\r\n                        })\r\n                    })\r\n                    \r\n                    this.exportarExcel = true\r\n                    this.data = response.data\r\n                    this.fechasArr = Object.keys(response.data)\r\n                    this.keyComponentMonitor +=1\r\n                })\r\n                .catch(() => {\r\n                    this.mensajeAlerta = 'No se ha podido completar la solicitud'\r\n                    this.tipoAlerta = 'error'\r\n                    this.$refs.alertaGenerall.verAlerta()\r\n                    this.verErrorIntervalo = true\r\n                    return false\r\n                })\r\n            }else{\r\n                getDataMoisture(this.timeValuesArr[0], this.timeValuesArr[1], parcelsId)\r\n                .then(response => {\r\n                    const fechasDetectadas = Object.keys(response.data)\r\n                    const text = parcelsId.toString();\r\n                    fechasDetectadas.map(fecha => {\r\n                        const parcelsIdSinProcesar = text.split(\",\")\r\n                        response.data[fecha].resultado.map(parcela => {\r\n                            parcelsIdSinProcesar.splice(parcelsIdSinProcesar.indexOf(parcela.parcel.toString()), 1);\r\n                        })\r\n                        const results = this.allParcelsOfEnterprisesFilter.filter(parcel => parcelsIdSinProcesar.includes(String(parcel.id)))\r\n                        results.map(parcela => {\r\n                            response.data[fecha].resultado.push(\r\n                                {\r\n                                    \"id\": parcela.id,\r\n                                    \"parcel\": parcela.id,\r\n                                    \"name\": parcela.properties.name,\r\n                                    \"pix_naranja_total\": 0.0,\r\n                                    \"pix_naranja_porcent\": 0.0,\r\n                                    \"pix_naranja_area_porcent\": 0.0,\r\n                                    \"pix_amarillo_total\": 0.0,\r\n                                    \"pix_amarillo_porcent\": 0.0,\r\n                                    \"pix_amarillo_area_porcent\": 0.0,\r\n                                    \"pix_verde_total\": 0.0,\r\n                                    \"pix_verde_porcent\": 0.0,\r\n                                    \"pix_verde_area_porcent\": 0.0,\r\n                                    \"pix_azul_claro_total\": 0.0,\r\n                                    \"pix_azul_claro_porcent\": 0.0,\r\n                                    \"pix_azul_claro_area_porcent\": 0.0,\r\n                                    \"pix_azul_medio_total\": 0.0,\r\n                                    \"pix_azul_medio_porcent\": 0.0,\r\n                                    \"pix_azul_medio_area_porcent\": 0.0,\r\n                                    \"pix_azul_oscuro_total\": 0.0,\r\n                                    \"pix_azul_oscuro_porcent\": 0.0,\r\n                                    \"pix_azul_oscuro_area_porcent\": 0.0,\r\n\r\n                                    \"nubes_porcent\": 0,\r\n                                    \"plantas_reales\": 0,\r\n                                    \"cosecha\": 0\r\n                                }\r\n                            )\r\n                            response.data[fecha].resultado.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0))\r\n                        })\r\n                    })\r\n                    this.exportarExcel = true\r\n                    this.data = response.data\r\n                    this.fechasArr = Object.keys(response.data)\r\n                    this.keyComponentMonitor +=1\r\n                })\r\n                .catch(() => {\r\n                    this.mensajeAlerta = 'No se ha podido completar la solicitud'\r\n                    this.tipoAlerta = 'error'\r\n                    this.$refs.alertaGenerall.verAlerta()\r\n                    this.verErrorIntervalo = true\r\n                    return false\r\n                })\r\n            }\r\n\r\n            getDataCampaign(this.timeValuesArr[0], this.timeValuesArr[1], parcelsId)\r\n                .then(response => {\r\n                    this.dataCampana=response.data\r\n                    })\r\n            getDataProduccion(this.timeValuesArr[0], this.timeValuesArr[1], parcelsId)\r\n                .then(response => {\r\n                    this.dataProduccion=response.data \r\n                    })\r\n            \r\n            /*\r\n            results.map(result => {\r\n                enterprisesInResults.push(result.properties.enterprise_id)\r\n            })\r\n            console.info('Resultados empresa => ',enterprisesInResults)\r\n            const uniqueEmpresas = [...new Set(enterprisesInResults)]\r\n            console.info('Unificamos empresa => ',uniqueEmpresas)\r\n            if(uniqueEmpresas.length > 1){\r\n                //*Es multiempresa\r\n                console.info('Seleccion Multiempresa')\r\n                //Comprobar si es cooperativa\r\n                const enterprisesInResultsCoop = []\r\n                this.arrCooperativas.map(cooperative => {\r\n                    cooperative.enterprises.map(enterprise => {\r\n                        if(uniqueEmpresas.includes(enterprise.id)){\r\n                            enterprisesInResultsCoop.push(cooperative.id)\r\n                        }\r\n                    })\r\n                })\r\n                console.info('Resultado Cooperativas => ',enterprisesInResultsCoop)\r\n                if(enterprisesInResultsCoop.length == uniqueEmpresas.length){\r\n                    console.info('Todas las empresas Pertenecen a cooperativas')\r\n                    const uniqueCoops = [...new Set(enterprisesInResultsCoop)]\r\n                    if(uniqueCoops.length > 1){\r\n                        console.info('MultiCoop')\r\n                        console.info('Cooperativas', uniqueCoops)\r\n                        console.info('No se puede generar el informe, parcelas de distintas Cooperativas')\r\n                        this.mensajeAlerta = 'No se puede generar el informe, parcelas seleccionadas de distintas Cooperativas'\r\n                        this.tipoAlerta = 'error'\r\n                        this.$refs.alertaGenerall.verAlerta()\r\n                    }else{\r\n                        console.info('UniCoop')\r\n                        console.info('Cooperativa', uniqueCoops)\r\n                        this.toGenerar(uniqueCoops[0], true)\r\n                    }\r\n                }else{\r\n                    console.info('No se puede generar el informe, Hay una empresa que no pertenece a ninguna cooperativa')\r\n                    this.mensajeAlerta = 'No se puede generar el informe, en la selección hay parcelas que no pertenecen a ninguna cooperativa'\r\n                    this.tipoAlerta = 'error'\r\n                    this.$refs.alertaGenerall.verAlerta()\r\n                }\r\n            }else{\r\n                console.info('Seleccion Uniempresa')\r\n                this.toGenerar(uniqueEmpresas[0], false)\r\n            }*/\r\n        },\r\n        actionChangeDateRange(range){\r\n            this.disabledGenerar = false\r\n            this.verErrorIntervalo = false\r\n            this.timeValuesArr = [range.startDate, range.endDate]\r\n            this.time = `${range.startDate}/${range.endDate}`\r\n        },\r\n        chageCapas(capa){\r\n            this.SentinelLayer = capa\r\n        },\r\n        seleccionaEmpresa(empresa){\r\n            const arrParcels = []\r\n            if(empresa == 'all'){\r\n                getAllEnterprises()\r\n                    .then(async response => {\r\n                        response.data.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.arrEmpresas = response.data\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n            }else{\r\n                const result = empresa.split('_')\r\n                if(result[0] == 'coop'){\r\n                    getCooperative(result[1])\r\n                    .then(response => {\r\n                        response.data.enterprises.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.arrEmpresas = response.data.enterprises\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n                }else{\r\n                    getEnterprise(empresa)\r\n                    .then(async response => {\r\n                        response.data.parcels.features.map(parcel => {\r\n                            arrParcels.push(parcel)\r\n                        })\r\n                        this.arrEmpresas = [response.data]\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        getNow() {\r\n            const today = new Date();\r\n            const date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n            //const time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n            //const dateTime = date +' '+ time;\r\n            //this.timestamp = dateTime;\r\n            //console.info(dateTime)\r\n            return date\r\n        },\r\n        getNameEnterprise(value){\r\n            const result = this.arrEmpresas.filter(enterprise => enterprise.id == value)\r\n            return result[0].name\r\n        },\r\n        onBuscar(busqueda){\r\n            if(busqueda){\r\n                const result = this.allParcelsOfEnterprises.filter(parcel => parcel.properties.name.toUpperCase().includes(busqueda.toUpperCase()))\r\n                this.allParcelsOfEnterprisesFilter = result\r\n            }else{\r\n                this.allParcelsOfEnterprisesFilter = this.allParcelsOfEnterprises\r\n            }\r\n        },\r\n        actionOnPagination(ev){\r\n            this.start = ev.start-1\r\n            this.length = ev.length\r\n        },\r\n        onSort(order) {\r\n            const index = order.index\r\n            let column = ``\r\n            const orden = order.order\r\n            \r\n            switch (index) {\r\n                case '0':\r\n                    column = `name`\r\n                    break\r\n                case '1':\r\n                    column = `name`\r\n                    break\r\n                case '2':\r\n                    column = 'area'\r\n                    break\r\n                case '3':\r\n                    column = 'enterprise'\r\n                    break\r\n                default:\r\n                    column = `name`\r\n            }\r\n            if(orden == 'ascending'){\r\n                this.allParcelsOfEnterprisesFilter.sort((a, b) => parseFloat(a.name) - parseFloat(b.name));\r\n            }\r\n            console.info(column)\r\n        },\r\n    },\r\n    mounted: function () {\r\n        //console.info(this.$refs.acc)\r\n        this.getNow()\r\n        //console.info('User Logged')\r\n    },\r\n    beforeCreate(){\r\n        getProfile()\r\n        .then(response => {\r\n            const user = response.data[0]\r\n            getPermisos(response.data[0].user)\r\n            .then(response => {\r\n                this.is_superuser = response.data.is_superuser\r\n                this.is_staff = response.data.is_staff\r\n                this.is_systemadmin = response.data.is_systemadmin\r\n                this.is_enterpriseadmin = response.data.is_enterpriseadmin\r\n                this.is_coop_user = user.cooperative_user\r\n                /*\r\n                //*Obtenemos la empresa del usuario\r\n                const enterprise_id = user.enterprise_id\r\n                getEnterprise(enterprise_id)\r\n                .then(async response => {\r\n                    this.parcelas = response.data.parcels\r\n                    await this.arrEmpresas.push(response.data)\r\n                    this.flagIndicatingDataHasBeenLoadedInVariables = false\r\n                    this.timestamp()\r\n                })\r\n                */\r\n                \r\n                if(this.is_superuser || this.is_systemadmin){\r\n                    //console.info('entra')\r\n                    getAllEnterprises()\r\n                    .then(async response => {\r\n                        this.arrEmpresas = response.data\r\n                        //this.arrEmpresasList = response.data\r\n                        // ordenar alfabeticamente\r\n                        this.arrEmpresasList = response.data.slice().sort((a, b) => {\r\n                            return a.name.localeCompare(b.name);\r\n                        });\r\n                        const arrParcels = []\r\n                        response.data.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                }else if((this.is_enterpriseadmin || this.is_staff) && !this.is_coop_user){ \r\n                    getEnterprise(user.enterprise_id)\r\n                    .then(async response => {\r\n                        this.arrEmpresas = [response.data]\r\n                        this.arrEmpresasList = [response.data]\r\n                        const arrParcels = []\r\n                        response.data.parcels.features.map(parcel => {\r\n                            arrParcels.push(parcel)\r\n                        })\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                }else if(this.is_coop_user){\r\n                    getCooperative(user.enterprise_id)\r\n                    .then(response => {\r\n                        this.arrCooperativas = [response.data]\r\n                        //this.arrEmpresas = response.data.enterprises\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                }\r\n\r\n                if(this.is_superuser || this.is_systemadmin){\r\n                    getAllCooperatives()\r\n                    .then(async response => {\r\n                        this.arrCooperativas = response.data\r\n                    })\r\n                }\r\n                this.isActiveLoading = false\r\n                this.isVisibleLoad = false\r\n            })\r\n        })\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n    .bx--accordion__content{\r\n        padding-right: 0px!important;\r\n    }\r\n\r\n    .bx--modal-container {\r\n        overflow: unset !important;\r\n    }\r\n</style>\r\n<style>\r\n    .cien{\r\n        padding-right: 0px!important;\r\n    }\r\n\r\n    .bx--modal-container {\r\n        overflow: unset !important;\r\n    }\r\n</style>"],"mappings":"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","ignoreList":[]}]}