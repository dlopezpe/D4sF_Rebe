{"remainingRequest":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\src\\components\\adminActions\\GenGraficosComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\src\\components\\adminActions\\GenGraficosComponent.vue","mtime":1671529918001},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["GenGraficosComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"GenGraficosComponent.vue","sourceRoot":"src/components/adminActions","sourcesContent":["<template>\r\n    <div class=\"bx--grid\">\r\n        <div id=\"txt-explicativo\" class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <h2>Generador de Informes <img src=\"../../assets/crop-growth.svg\" style=\"width: 40px;\"></h2>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <cv-select\r\n                    theme=\"\"\r\n                    :label=\"$t('map.listado_empresas')\"\r\n                    :hide-label=\"false\"\r\n                    :inline=\"false\"\r\n                    :disabled=\"false\"\r\n                    @change=\"seleccionaEmpresa\"\r\n                    v-model=\"selectValueEmpresa\"\r\n                >\r\n                    <cv-select-option :value=\"''\" disabled selected hidden>{{$t(\"map.sel_empresa\")}}</cv-select-option>\r\n                    <cv-select-optgroup label=\"Todas las Empresas\" v-if=\"is_superuser || is_systemadmin\">\r\n                        <cv-select-option :value=\"`all`\" v-if=\"is_superuser || is_systemadmin\">{{$t(\"map.most_todas_empresas\")}}</cv-select-option>\r\n                        <cv-select-option v-for=\"empresa in arrEmpresasList\" :value=\"String(empresa.id)\"  v-bind:key=\"empresa.id\">\r\n                            {{empresa.name}}\r\n                        </cv-select-option>\r\n                    </cv-select-optgroup>\r\n                    <cv-select-optgroup :label=\"`Cooperativa ${cooperativa.name}`\" v-bind:key=\"cooperativa.id\" v-for=\"cooperativa in arrCooperativas\">\r\n                        <cv-select-option :value=\"`coop_${cooperativa.id}`\">{{$t(\"map.most_todas_empresas\")}}</cv-select-option>\r\n                        <cv-select-option v-for=\"empresa in cooperativa.enterprises\" :value=\"String(empresa.id)\"  v-bind:key=\"empresa.id\">\r\n                            {{empresa.name}}\r\n                        </cv-select-option>\r\n                    </cv-select-optgroup>\r\n                </cv-select>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col-sm-2 bx--col-md-2 bx--col-lg-2\">\r\n                <cv-progress\r\n                :initial-step=\"rowSelects.length ? selectValueCapa.length ? timeValuesArr.length ?  3 : 2 : 1 : 0\"\r\n                :steps=\"steps\"\r\n                :vertical=\"true\"></cv-progress>\r\n            </div>\r\n            <div class=\"bx--col\">\r\n                <cv-accordion @change=\"actionChangeAccordeon\" ref=\"acc\">\r\n                    <cv-accordion-item :open=\"open[0]\">\r\n                        <template slot=\"title\">Nombre de informe y Selección de Parcelas </template>\r\n                        <template slot=\"content\">\r\n                            <!-- Nombre de informe -->\r\n                            <div class=\"bx--row\">\r\n                                <div class=\"bx--col\">\r\n                                    <p style=\"font-size: 14px\">Indica a continuación el nombre que le quieres poner al informe que se va a generar.</p>\r\n                                    <br>\r\n                                    <cv-text-input\r\n                                        :label=\"$t('graficos.nombre_informe')\"\r\n                                        v-model=\"nombreInforme\"\r\n                                        :disabled=\"false\"\r\n                                    ></cv-text-input>\r\n                                </div>\r\n                            </div>\r\n                            <!-- Tabla de parcelas -->\r\n                            <br>\r\n                            <div class=\"bx--row\">\r\n                                <div class=\"bx--col\">\r\n                                    <div id=\"sentinelLayersList\">\r\n                                        <p style=\"font-size: 14px\">Selecciona a continuación las parcelas sobre las que quieres realizar la consulta. Puedes utilizar el buscador para encontrar la/s parcela/s que necesitas. Para poder ver el nombre de todas las parcelas, por favor utiliza el selector que encontrarás en la parte inferior de la tabla.</p>\r\n                                        <br>\r\n                                        <cv-data-table\r\n                                            :sortable=\"false\"\r\n                                            :pagination=\"{ \r\n                                                numberOfItems: allParcelsOfEnterprisesFilter.length, \r\n                                                pageSizes: [\r\n                                                    {\r\n                                                        value: 10,\r\n                                                        label: '10'\r\n                                                    }, \r\n                                                    {\r\n                                                        value: 15,\r\n                                                        label: '15'\r\n                                                    },\r\n                                                    {\r\n                                                        value: 20,\r\n                                                        label: '20'\r\n                                                    }, \r\n                                                    {\r\n                                                        value: 25,\r\n                                                        label: '25'\r\n                                                    }, \r\n                                                    {\r\n                                                        value: allParcelsOfEnterprisesFilter.length,\r\n                                                        label: 'Todas'\r\n                                                    }\r\n                                                ] \r\n                                            }\" \r\n                                            @pagination=\"actionOnPagination\"\r\n                                            :columns=\"[\r\n                                                {\r\n                                                    key: 'name',\r\n                                                    label: this.$t('graficos.nombre'),\r\n                                                    'sortable': false\r\n                                                },\r\n                                                {\r\n                                                    key: 'description',\r\n                                                    label: this.$t('graficos.descrip'),\r\n                                                    'sortable': false\r\n                                                },\r\n                                                {\r\n                                                    key: 'heactareas',\r\n                                                    label: this.$t('graficos.hectareas'),\r\n                                                    'sortable': false\r\n                                                },\r\n                                                {\r\n                                                    key: 'enterprise',\r\n                                                    label: 'Empresa',\r\n                                                    'sortable': false\r\n                                                },\r\n                                            ]\"\r\n                                            :title=\"$t('graficos.parcel_list')\"\r\n                                            @sort=\"onSort\"\r\n                                            v-model=\"rowSelects\"\r\n                                            ref=\"tableLstadoT2MultiCoop\"\r\n                                            searchLabel=\"Filter\" searchPlaceholder=\"Filter\" searchClearLabel=\"Clear filter\"\r\n                                        >\r\n                                            <template v-if=\"true\" slot=\"actions\">\r\n                                                <cv-search :placeholder=\"$t('graficos.buscar_nombre')\" @input=\"onBuscar\"></cv-search>\r\n                                            </template>\r\n                                            <template v-if=\"true\" slot=\"batch-actions\">\r\n                                                <cv-button>\r\n                                                    Revisa la tabla-resumen de la parte inferior para generar el Informe\r\n                                                </cv-button>  \r\n                                            </template>\r\n                                            <template slot=\"data\">\r\n                                                <cv-data-table-row\r\n                                                    v-for=\"feature in allParcelsOfEnterprisesFilter.slice(start, start+length)\"\r\n                                                    :key=\"`${feature.id}`\"\r\n                                                    :value=\"`${feature.id}`\"\r\n                                                    :aria-label-for-batch-checkbox=\"`Custom aria label for row ${feature.id} batch`\"\r\n                                                >\r\n                                                    <cv-data-table-cell>{{is_superuser ? feature.id+' - ' : ''}}{{feature.properties.name}}</cv-data-table-cell>\r\n                                                    <cv-data-table-cell>{{feature.properties.description}}</cv-data-table-cell>\r\n                                                    <cv-data-table-cell>{{feature.properties.area}}</cv-data-table-cell>\r\n                                                    <cv-data-table-cell>{{getNameEnterprise(feature.properties.enterprise_id)}}</cv-data-table-cell>\r\n                                                </cv-data-table-row>\r\n                                            </template>\r\n                                        </cv-data-table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </template>\r\n                    </cv-accordion-item>\r\n                    <cv-accordion-item :open=\"open[1]\">\r\n                        <template slot=\"title\">Selección de capas y Nubes</template>\r\n                        <template slot=\"content\" style=\"padding-right: 0\">\r\n                            <!-- Capas -->\r\n                            <div class=\"bx--row\">\r\n                                <div class=\"bx--col-sm-4 bx--col-md-4 bx--col-lg-4\">\r\n                                    <p style=\"font-size: 14px\">¿Qué información quieres consultar? Elige a continuación una de las opciones que se muestran.</p>\r\n                                    <br>\r\n                                    <cv-select :label=\"$t('graficos.sel_layer_sen')\" v-model=\"selectValueCapa\">\r\n                                        <cv-select-option value=\"NDVI\">{{$t(\"graficos.NDVI\")}}</cv-select-option>\r\n                                        <cv-select-option value=\"MOISTURE_INDEX\">{{$t(\"graficos.mostisture_index\")}}</cv-select-option>\r\n                                    </cv-select>\r\n                                </div>\r\n                                <div class=\"bx--col\">\r\n                                    <p style=\"font-size: 14px\">¿Quieres incluir detección de nubes en el informe? Esta información se verá reflejada en el informe, añadiendo una nueva imagen real y marcando en rojo la zona con cualquier tipo de nube así como el porcentaje de nubes.</p>\r\n                                    <br>\r\n                                    <cv-toggle\r\n                                        :checked=\"checked_clouds\"\r\n                                        v-model=\"checked_clouds\"\r\n                                        label=\"Incluir análisis de Nubes\"\r\n                                        value=\"check-clouds\"\r\n                                        :small=\"false\"\r\n                                        :disabled=\"false\"\r\n                                        :hide-label=\"false\">\r\n                                        <template v-if=\"true\" slot=\"text-left\">No</template>\r\n                                        <template v-if=\"true\" slot=\"text-right\">Sí</template>\r\n                                    </cv-toggle>\r\n                                </div>\r\n                            </div>\r\n                            <!-- Nubes -->\r\n                        </template>\r\n                    </cv-accordion-item>\r\n                    <cv-accordion-item :open=\"open[2]\">\r\n                        <template slot=\"title\">Selección de Fechas</template>\r\n                        <template slot=\"content\" style=\"padding-right: 0\">\r\n                            <div class=\"bx--row\">\r\n                                <div class=\"bx--col\">\r\n                                    <p style=\"font-size: 14px\">Especifica a continuación el intervalo de fechas sobre el que quieres realizar la consulta. A la hora de generar el informe se mostrarán únicamente las imágenes de fechas disponibles en Sentinel.</p>\r\n                                    <br>\r\n                                    <cv-date-picker\r\n                                        kind=\"range\"\r\n                                        :dateLabel=\"$t('graficos.fecha_incio')\"\r\n                                        :date-end-label=\"$t('graficos.fecha_fin')\"\r\n                                        :cal-options=\"calOptions\"\r\n                                        @change=\"actionChangeDateRange\"\r\n                                        :value=\"valueRange\">\r\n                                    </cv-date-picker>\r\n                                    <p style=\"font-size: 12px; color: red\" v-if=\"verErrorIntervalo\">No se ha seleccionado ningún intervalo de fechas</p>\r\n                                </div>\r\n                            </div>\r\n                            <br>\r\n                            <div class=\"bx--row\">\r\n                                <div class=\"bx--col\">\r\n                                    <p style=\"font-size: 14px\">Utilizando la siguiente opción se puede ver las fechas en las que hay fotografías dentro del intervalo de fechas escogido.</p>\r\n                                    <br>\r\n                                    <cv-date-picker\r\n                                        kind=\"single\"\r\n                                        :cal-options=\"calOptions\"\r\n                                        :dateLabel=\"`Consultar fechas disponibles`\"\r\n                                        :value=\"valueDates\"\r\n                                        placeholder=\"mm/dd/yyyy\"\r\n                                        ref=\"cambiosFechas\"\r\n                                        style=\"width: 100%!important\"\r\n                                    ></cv-date-picker>\r\n                                    <cv-button kind=\"primary\" :disabled=\"false\" v-if=\"rowSelects.length && timeValuesArr.length\" @click=\"getFechasSentBBOX()\">Consultar</cv-button>\r\n                                    <cv-inline-loading\r\n                                    :ending-text=\"`Cargado`\"\r\n                                    :error-text=\"`Error`\"\r\n                                    :loading-text=\"`Cargando..`\"\r\n                                    :loaded-text=\"`Cargando..`\"\r\n                                    :state=\"`loading`\"\r\n                                    v-if=\"verCargandoFechasBbox\"></cv-inline-loading>\r\n                                </div>\r\n                            </div>\r\n                        </template>\r\n                    </cv-accordion-item>\r\n                    <cv-accordion-item :open=\"open[3]\">\r\n                        <template slot=\"title\">Resumen de Informe</template>\r\n                        <template slot=\"content\" style=\"padding-right: 0\">\r\n                                <div class=\"bx--row\"  v-if=\"rowSelects.length\">\r\n                                    <div class=\"bx--col\">\r\n                                        <p style=\"font-size: 14px\">Puedes utilizar el botón de Ver número de imágenes para que se haga una comprobación a Sentinel de las imágenes disponibles en el intervalo de fechas seleccionado así como las fechas en las que hay imagen del satélite.</p>\r\n                                    </div>\r\n                                </div>\r\n                                <br>\r\n                                <div class=\"bx--row\">\r\n                                    <div class=\"bx--col\">\r\n                                        <p style=\"font-size: 14px; color: red\" v-if=\"disabledGenerar\">En el intervalo de fechas seleccionado no hay ninguna imagen disponible para generar. Por favor, especifica otro intervalo de fechas en la zona superior.</p>\r\n                                        <br>\r\n                                        <cv-button kind=\"primary\" v-if=\"rowSelects.length\" @click=\"getFechas()\">Ver número de imágenes</cv-button>\r\n                                        <cv-inline-loading\r\n                                        :ending-text=\"`Cargado`\"\r\n                                        :error-text=\"`Error`\"\r\n                                        :loading-text=\"`Cargando..`\"\r\n                                        :loaded-text=\"`Cargando..`\"\r\n                                        :state=\"`loading`\"\r\n                                        v-if=\"verCargandoImagenes\"></cv-inline-loading>\r\n                                        <p style=\"font-size: 14px; color: red\" v-if=\"verTimeoutNumImg\">Sentinel no ha podido procesar la previsualización de la obtención del número total de imágenes debido al volumen de datos. Esta previsualización es independiente de la generación del informe, por favor procede con la generación mediante el botón de Generar.</p>\r\n                                    </div>\r\n                                </div>\r\n                                <br>\r\n                                <div class=\"bx--row\" v-if=\"rowSelects.length\">\r\n                                    <div class=\"bx--col\">\r\n                                        <cv-data-table\r\n                                            :columns=\"[\r\n                                                    {\r\n                                                        key: 'name',\r\n                                                        label: this.$t('graficos.nombre'),\r\n                                                        'sortable': false\r\n                                                    },\r\n                                                    {\r\n                                                        key: 'imgnum',\r\n                                                        label: 'Número de Imagenes',\r\n                                                        'sortable': false\r\n                                                    },\r\n                                                    {\r\n                                                        key: 'fecha',\r\n                                                        label: 'Fechas',\r\n                                                        'sortable': false\r\n                                                    },\r\n                                                    {\r\n                                                        key: 'fecha',\r\n                                                        label: 'Max. Porcentaje Nubes Encontrado',\r\n                                                        'sortable': false\r\n                                                    }\r\n                                                ]\"\r\n                                        >\r\n                                            <template slot=\"data\">\r\n                                                <cv-data-table-row\r\n                                                    v-for=\"feature in rowSelects\"\r\n                                                    :key=\"`${feature}`\"\r\n                                                    :value=\"`${feature}`\"\r\n                                                    :aria-label-for-batch-checkbox=\"`Custom aria label for row ${feature} batch`\"\r\n                                                    v-html=\"getData(feature)\"\r\n                                                >\r\n                                                    \r\n                                                </cv-data-table-row>\r\n                                            </template>\r\n                                        </cv-data-table>\r\n                                    </div>\r\n                                </div>\r\n                                <br>\r\n                                <div class=\"bx--row\"  v-if=\"rowSelects.length\">\r\n                                    <div class=\"bx--col\">\r\n                                        <p style=\"font-size: 14px\">Tomando como base las pruebas realizadas, el tiempo estimado de procesado será el siguiente</p>\r\n                                    </div>\r\n                                </div>\r\n                                <br>\r\n                                <div class=\"bx--row\" v-if=\"rowSelects.length\">\r\n                                    <div class=\"bx--col\">\r\n                                        <div class=\"bx--grid\">\r\n                                            <cv-list :ordered=\"false\">\r\n                                                <cv-list-item>50 imágenes – 2 minutos</cv-list-item>\r\n                                                <cv-list-item>100 imágenes – 4 minutos</cv-list-item>\r\n                                                <cv-list-item>200 imágenes – 8 minutos</cv-list-item>\r\n                                                <cv-list-item>400 imágenes – 16 minutos</cv-list-item>\r\n                                            </cv-list>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <br>\r\n                                <div class=\"bx--row\">\r\n                                    <div class=\"bx--col\">\r\n                                        <cv-button kind=\"primary\" :disabled=\"disabledGenerar\" v-if=\"rowSelects.length\" @click=\"generarInforme()\">{{$t(\"graficos.generar\")}}</cv-button>\r\n                                    </div>\r\n                                </div>\r\n                        </template>\r\n                    </cv-accordion-item>\r\n                </cv-accordion>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <br>\r\n        <cv-modal ref=\"modal_procesando\">\r\n        <template slot=\"label\">{{this.$t('graficos.gen_iformes')}}</template>\r\n        <template slot=\"title\">{{this.$t('graficos.gen_iformes')}}</template>\r\n        <template slot=\"content\"\r\n            ><p>\r\n                {{this.$t('graficos.grafico_procensandose')}}\r\n            </p></template\r\n            >\r\n            <template slot=\"primary-button\">{{this.$t('graficos.gen_informes_acceptar')}}</template>\r\n        </cv-modal>\r\n        <AlertaGeneral ref=\"alertaGenerall\" :tituloAlert=\"mensajeAlerta\" :tipoAlert=\"tipoAlerta\" />\r\n    </div>\r\n</template>\r\n<script>\r\n//import {getParcelsNotSentinelInstance, postParcelsNotSentinelInstance} from '@/crudFunctions/crudSentinel.js'\r\nimport {getProfile, getPermisos} from '@/auth/index'\r\nimport {getAllEnterprises, getEnterprise, createInformes, getFechasParcelsPreCreate, getFechasParcelsBBOX} from '@/crudFunctions/crudEnterprise'//getFechasSentinelForInformes\r\nimport {getAllCooperatives, getCooperative} from '@/crudFunctions/crudCooperativas'\r\nimport AlertaGeneral from \"@/components/AlertaGeneral\";\r\nexport default {\r\n    name: 'ParcelsToSentinelComponent',\r\n    components: {\r\n        AlertaGeneral\r\n    },\r\n    data(){\r\n        return {\r\n            selectValueEmpresa: '',\r\n            //\r\n            flagIndicatingDataHasBeenLoadedInVariables: false,\r\n            //Usuario\r\n            is_superuser: false,\r\n            is_staff: false,\r\n            is_systemadmin: false,\r\n            is_enterpriseadmin: false,\r\n            is_coop_user: false,\r\n            //Empresas sel\r\n            arrEmpresas: [],\r\n            arrEmpresasList: [],\r\n            arrCooperativas: [],\r\n            allParcelsOfEnterprises: [],\r\n            allParcelsOfEnterprisesFilter: [],\r\n            //\r\n            start: 0,\r\n            length: 10,\r\n            //\r\n            rowSelects: [],\r\n            selectValueCapa: '',\r\n            //\r\n            SentinelLayer: 'NDVI',\r\n            calOptions: {\r\n                \"dateFormat\": \"Y-m-d\"\r\n            },\r\n            time: ``,\r\n            valueDates: [],\r\n            valueRange: [],\r\n            timeValuesArr: [],\r\n            nombreInforme: `Gráfico - ${this.getNow()}`,\r\n            checked_clouds: false,\r\n            //\r\n            tipoAlerta: `error`,\r\n            mensajeAlerta: '',\r\n            //\r\n            fechasParcelasNumImages: {},\r\n            verCargandoImagenes: false,\r\n            //\r\n            disabledGenerar: false,\r\n            //\r\n            verErrorIntervalo: false,\r\n            verCargandoFechasBbox: false,\r\n            //\r\n            initialStep: 1,\r\n            steps: [\r\n                \"Nombre de informe y Selección de Parcelas\",\r\n                \"Selección de capas y Nubes\",\r\n                \"Selección de Fechas\",\r\n                \"Resumen de Informe\",\r\n            ],\r\n            open: [false, false, false, false],\r\n            verTimeoutNumImg: false\r\n        }\r\n    },\r\n    methods: {\r\n        actionChangeAccordeon(ev){\r\n            this.open = this.$refs.acc.state.map((item, index) => index === ev.changedIndex);\r\n        },\r\n        getFechas(){\r\n            this.verTimeoutNumImg = false\r\n            if(this.timeValuesArr.length === 0){\r\n                this.mensajeAlerta = 'No se ha seleccionado ningún intervalo de fechas'\r\n                this.tipoAlerta = 'error'\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                this.verErrorIntervalo = true\r\n                return false\r\n            }\r\n            this.verCargandoImagenes = true\r\n            let fechasNum = 0\r\n            getFechasParcelsPreCreate(this.rowSelects, this.timeValuesArr)\r\n            .then(response => {\r\n                console.info(response.data)\r\n                this.fechasParcelasNumImages = response.data\r\n                //getFechasSentinelForInformes(response.data.toString())\r\n                //.then(response => {console.info(response.data)})\r\n                /*\r\n                \r\n                */\r\n\r\n                this.verCargandoImagenes = false\r\n                console.info(response.data, Object.entries(response.data))\r\n                Object.entries(response.data).forEach(entry => {\r\n                    const [key, value] = entry;\r\n                    console.log(key, value);\r\n                    fechasNum = fechasNum + value.resultados.length\r\n                });\r\n                if(fechasNum === 0){\r\n                    this.disabledGenerar = true\r\n                }else{\r\n                    this.disabledGenerar = false\r\n                }\r\n            })\r\n            .catch(() => {this.verCargandoImagenes = false; this.verTimeoutNumImg = true})\r\n            \r\n        },\r\n        getFechasSentBBOX(){\r\n            this.verCargandoFechasBbox = true\r\n            getFechasParcelsBBOX(this.rowSelects, this.timeValuesArr)\r\n            .then(response => {\r\n                console.info(response.data)\r\n\r\n                const respuesta = response.data\r\n                    const fechasArray = Array()\r\n                    respuesta.forEach(feature =>{\r\n                        fechasArray.push(feature.properties.date)\r\n                    })\r\n                    this.valueDates = fechasArray.reverse()\r\n                /*\r\n                getFechasSentinelForInformes(response.data.toString())\r\n                .then(response => {\r\n                    \r\n                })\r\n                */\r\n                this.verCargandoFechasBbox = false\r\n            })\r\n            .catch(() => this.verCargandoFechasBbox = false)\r\n            \r\n            \r\n        },\r\n        getData(feature){\r\n            const result = this.allParcelsOfEnterprisesFilter.filter(parcel => feature == (String(parcel.id)))\r\n            const fechas = []\r\n            let porcentNubesHigh = 0\r\n            let uniqueFechas = []\r\n            if(this.fechasParcelasNumImages[feature]){\r\n                this.fechasParcelasNumImages[feature].resultados.map(resultado => {\r\n                    if(resultado.properties.cloudCoverPercentage > porcentNubesHigh){\r\n                        porcentNubesHigh = resultado.properties.cloudCoverPercentage \r\n                    }\r\n                    fechas.push(resultado.properties.date)\r\n                })\r\n                uniqueFechas = [...new Set(fechas)];\r\n            }\r\n            \r\n            return `<td>${result[0].properties.name}</td>\r\n            <td>${this.fechasParcelasNumImages[feature] ? uniqueFechas.length : ''}</td>\r\n            <td>${this.fechasParcelasNumImages[feature] ? uniqueFechas : ''}</td>\r\n            <td>${this.checked_clouds ? this.fechasParcelasNumImages[feature] ? porcentNubesHigh +'%' : '' : 'n/a'}</td>`\r\n            \r\n        },\r\n        toGenerar(id_enterprise, is_cooperative){\r\n            if(!this.nombreInforme){\r\n                this.mensajeAlerta = 'El campo Nombre de Informe no debe estar vacío'\r\n                this.tipoAlerta = 'error'\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                return false\r\n            }\r\n            if(this.timeValuesArr.length === 0){\r\n                this.mensajeAlerta = 'No se ha seleccionado ningún intervalo de fechas'\r\n                this.tipoAlerta = 'error'\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                this.verErrorIntervalo = true\r\n                return false\r\n            }\r\n            if(this.selectValueCapa.length === 0){\r\n                this.mensajeAlerta = 'No se ha seleccionado ninguna capa de Sentinel'\r\n                this.tipoAlerta = 'error'\r\n                this.$refs.alertaGenerall.verAlerta()\r\n                this.verErrorIntervalo = true\r\n                return false\r\n            }\r\n            createInformes(this.nombreInforme, this.selectValueCapa, this.timeValuesArr, this.rowSelects, is_cooperative, id_enterprise, this.checked_clouds)\r\n            .then(() => {\r\n                this.$refs.modal_procesando.show()\r\n            })\r\n            \r\n        },\r\n        generarInforme(){\r\n            const results = this.allParcelsOfEnterprisesFilter.filter(parcel => this.rowSelects.includes(String(parcel.id)))\r\n            const enterprisesInResults = []\r\n            results.map(result => {\r\n                enterprisesInResults.push(result.properties.enterprise_id)\r\n            })\r\n            console.info('Resultados empresa => ',enterprisesInResults)\r\n            const uniqueEmpresas = [...new Set(enterprisesInResults)]\r\n            console.info('Unificamos empresa => ',uniqueEmpresas)\r\n            if(uniqueEmpresas.length > 1){\r\n                //*Es multiempresa\r\n                console.info('Seleccion Multiempresa')\r\n                //Comprobar si es cooperativa\r\n                const enterprisesInResultsCoop = []\r\n                this.arrCooperativas.map(cooperative => {\r\n                    cooperative.enterprises.map(enterprise => {\r\n                        if(uniqueEmpresas.includes(enterprise.id)){\r\n                            enterprisesInResultsCoop.push(cooperative.id)\r\n                        }\r\n                    })\r\n                })\r\n                console.info('Resultado Cooperativas => ',enterprisesInResultsCoop)\r\n                if(enterprisesInResultsCoop.length == uniqueEmpresas.length){\r\n                    console.info('Todas las empresas Pertenecen a cooperativas')\r\n                    const uniqueCoops = [...new Set(enterprisesInResultsCoop)]\r\n                    if(uniqueCoops.length > 1){\r\n                        console.info('MultiCoop')\r\n                        console.info('Cooperativas', uniqueCoops)\r\n                        console.info('No se puede generar el informe, parcelas de distintas Cooperativas')\r\n                        this.mensajeAlerta = 'No se puede generar el informe, parcelas seleccionadas de distintas Cooperativas'\r\n                        this.tipoAlerta = 'error'\r\n                        this.$refs.alertaGenerall.verAlerta()\r\n                    }else{\r\n                        console.info('UniCoop')\r\n                        console.info('Cooperativa', uniqueCoops)\r\n                        this.toGenerar(uniqueCoops[0], true)\r\n                    }\r\n                }else{\r\n                    console.info('No se puede generar el informe, Hay una empresa que no pertenece a ninguna cooperativa')\r\n                    this.mensajeAlerta = 'No se puede generar el informe, en la selección hay parcelas que no pertenecen a ninguna cooperativa'\r\n                    this.tipoAlerta = 'error'\r\n                    this.$refs.alertaGenerall.verAlerta()\r\n                }\r\n            }else{\r\n                console.info('Seleccion Uniempresa')\r\n                this.toGenerar(uniqueEmpresas[0], false)\r\n            }\r\n        },\r\n        actionChangeDateRange(range){\r\n            this.disabledGenerar = false\r\n            this.verErrorIntervalo = false\r\n            console.info(range)\r\n            this.timeValuesArr = [range.startDate, range.endDate]\r\n            console.info(this.timeValuesArr)\r\n            this.time = `${range.startDate}/${range.endDate}`\r\n        },\r\n        chageCapas(capa){\r\n            this.SentinelLayer = capa\r\n        },\r\n        seleccionaEmpresa(empresa){\r\n            const arrParcels = []\r\n            if(empresa == 'all'){\r\n                getAllEnterprises()\r\n                    .then(async response => {\r\n                        response.data.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.arrEmpresas = response.data\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n            }else{\r\n                const result = empresa.split('_')\r\n                if(result[0] == 'coop'){\r\n                    getCooperative(result[1])\r\n                    .then(response => {\r\n                        response.data.enterprises.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.arrEmpresas = response.data.enterprises\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n                }else{\r\n                    getEnterprise(empresa)\r\n                    .then(async response => {\r\n                        response.data.parcels.features.map(parcel => {\r\n                            arrParcels.push(parcel)\r\n                        })\r\n                        this.arrEmpresas = [response.data]\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        getNow() {\r\n            const today = new Date();\r\n            const date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n            const time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n            const dateTime = date +' '+ time;\r\n            //this.timestamp = dateTime;\r\n            console.info(dateTime)\r\n            return date\r\n        },\r\n        getNameEnterprise(value){\r\n            const result = this.arrEmpresas.filter(enterprise => enterprise.id == value)\r\n            return result[0].name\r\n        },\r\n        onBuscar(busqueda){\r\n            if(busqueda){\r\n                const result = this.allParcelsOfEnterprises.filter(parcel => parcel.properties.name.toUpperCase().includes(busqueda.toUpperCase()))\r\n                this.allParcelsOfEnterprisesFilter = result\r\n            }else{\r\n                this.allParcelsOfEnterprisesFilter = this.allParcelsOfEnterprises\r\n            }\r\n        },\r\n        actionOnPagination(ev){\r\n            this.start = ev.start-1\r\n            this.length = ev.length\r\n        },\r\n        onSort(order) {\r\n            const index = order.index\r\n            let column = ``\r\n            const orden = order.order\r\n            \r\n            switch (index) {\r\n                case '0':\r\n                    column = `name`\r\n                    break\r\n                case '1':\r\n                    column = `name`\r\n                    break\r\n                case '2':\r\n                    column = 'area'\r\n                    break\r\n                case '3':\r\n                    column = 'enterprise'\r\n                    break\r\n                default:\r\n                    column = `name`\r\n            }\r\n            if(orden == 'ascending'){\r\n                this.allParcelsOfEnterprisesFilter.sort((a, b) => parseFloat(a.name) - parseFloat(b.name));\r\n            }\r\n            console.info(column)\r\n        },\r\n    },\r\n    mounted: function () {\r\n        console.info(this.$refs.acc)\r\n        this.getNow()\r\n        //console.info('User Logged')\r\n    },\r\n    beforeCreate(){\r\n        getProfile()\r\n        .then(response => {\r\n            const user = response.data[0]\r\n            getPermisos(response.data[0].user)\r\n            .then(response => {\r\n                this.is_superuser = response.data.is_superuser\r\n                this.is_staff = response.data.is_staff\r\n                this.is_systemadmin = response.data.is_systemadmin\r\n                this.is_enterpriseadmin = response.data.is_enterpriseadmin\r\n                this.is_coop_user = user.cooperative_user\r\n                /*\r\n                //*Obtenemos la empresa del usuario\r\n                const enterprise_id = user.enterprise_id\r\n                getEnterprise(enterprise_id)\r\n                .then(async response => {\r\n                    this.parcelas = response.data.parcels\r\n                    await this.arrEmpresas.push(response.data)\r\n                    this.flagIndicatingDataHasBeenLoadedInVariables = false\r\n                    this.timestamp()\r\n                })\r\n                */\r\n                \r\n                if(this.is_superuser || this.is_systemadmin){\r\n                    console.info('entra')\r\n                    getAllEnterprises()\r\n                    .then(async response => {\r\n                        this.arrEmpresas = response.data\r\n                        this.arrEmpresasList = response.data\r\n                        const arrParcels = []\r\n                        response.data.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                }else if((this.is_enterpriseadmin || this.is_staff) && !this.is_coop_user){ \r\n                    getEnterprise(user.enterprise_id)\r\n                    .then(async response => {\r\n                        this.arrEmpresas = [response.data]\r\n                        this.arrEmpresasList = [response.data]\r\n                        const arrParcels = []\r\n                        response.data.parcels.features.map(parcel => {\r\n                            arrParcels.push(parcel)\r\n                        })\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                }else if(this.is_coop_user){\r\n                    getCooperative(user.enterprise_id)\r\n                    .then(response => {\r\n                        this.arrCooperativas = [response.data]\r\n                        //this.arrEmpresas = response.data.enterprises\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                }\r\n\r\n                if(this.is_superuser || this.is_systemadmin){\r\n                    getAllCooperatives()\r\n                    .then(async response => {\r\n                        this.arrCooperativas = response.data\r\n                    })\r\n                }\r\n                this.isActiveLoading = false\r\n                this.isVisibleLoad = false\r\n            })\r\n        })\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n    .bx--accordion__content{\r\n        padding-right: 0px!important;\r\n    }\r\n</style>"]}]}