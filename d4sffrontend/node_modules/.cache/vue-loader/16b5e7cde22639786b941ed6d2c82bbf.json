{"remainingRequest":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\@carbon\\vue\\src\\components\\cv-inline-loading\\cv-inline-loading.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\@carbon\\vue\\src\\components\\cv-inline-loading\\cv-inline-loading.vue","mtime":1681731165089},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681731147886},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1681731147886},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1681731156386},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681731147886},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1681731148945}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IFNUQVRFUyB9IGZyb20gJy4vY29uc3RzJzsKaW1wb3J0IEVycm9yRmlsbGVkMTYgZnJvbSAnQGNhcmJvbi9pY29ucy12dWUvbGliL2Vycm9yLS1maWxsZWQvMTYnOwppbXBvcnQgQ2hlY2ttYXJrRmlsbGVkMTYgZnJvbSAnQGNhcmJvbi9pY29ucy12dWUvbGliL2NoZWNrbWFyay0tZmlsbGVkLzE2JzsKaW1wb3J0IHsgY2FyYm9uUHJlZml4TWl4aW4gfSBmcm9tICcuLi8uLi9taXhpbnMnOwppbXBvcnQgQ3ZMb2FkaW5nIGZyb20gJy4uL2N2LWxvYWRpbmcvY3YtbG9hZGluZy52dWUnOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdDdklubGluZUxvYWRpbmcnLAogIGNvbXBvbmVudHM6IHsgRXJyb3JGaWxsZWQxNiwgQ2hlY2ttYXJrRmlsbGVkMTYsIEN2TG9hZGluZyB9LAogIG1peGluczogW2NhcmJvblByZWZpeE1peGluXSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5TVEFURVMgPSBTVEFURVM7CiAgfSwKICBwcm9wczogewogICAgYWN0aXZlOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHVuZGVmaW5lZCwKICAgICAgZGVwcmVjYXRlZDogdHJ1ZSwKICAgICAgdmFsaWRhdG9yOiB2YWwgPT4gewogICAgICAgIGlmICh2YWwgIT09IHVuZGVmaW5lZCAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JykgewogICAgICAgICAgY29uc29sZS53YXJuKCdDdklubGluZUxvYWRpbmc6IGFjdGl2ZSBwcm9wIGRlcHJlY2F0ZWQgaW4gZmF2b3VyIG9mIHN0YXRlIHByb3AnKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0sCiAgICB9LAogICAgZGVzY3JpcHRpb246IHsgdHlwZTogU3RyaW5nLCBkZWZhdWx0OiAnTG9hZGluZycgfSwKICAgIGVuZGluZ1RleHQ6IHsgdHlwZTogU3RyaW5nLCBkZWZhdWx0OiAnTG9hZCBlbmRpbmcuLi4nIH0sCiAgICBlcnJvclRleHQ6IHsgdHlwZTogU3RyaW5nLCBkZWZhdWx0OiAnTG9hZGluZyBkYXRhIGZhaWxlZC4nIH0sCiAgICBsb2FkaW5nVGV4dDogeyB0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6ICdMb2FkaW5nIGRhdGEuLi4nIH0sCiAgICBsb2FkZWRUZXh0OiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogJ0RhdGEgbG9hZGVkLicgfSwKICAgIHN0YXRlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogdW5kZWZpbmVkLAogICAgICB2YWxpZGF0b3I6IHZhbCA9PiB7CiAgICAgICAgaWYgKE9iamVjdC5rZXlzKFNUQVRFUykuc29tZShzdGF0ZSA9PiBTVEFURVNbc3RhdGVdID09PSB2YWwudG9Mb3dlckNhc2UoKSkpIHsKICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjb25zb2xlLmVycm9yKGBDdklubGluZUxvYWRpbmc6IFZhbGlkIHN0YXRlcyBhcmUgJHtKU09OLnN0cmluZ2lmeShPYmplY3QudmFsdWVzKFNUQVRFUykpfWApOwogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgfSwKICAgIH0sCiAgfSwKICBjb21wdXRlZDogewogICAgaW50ZXJuYWxTdGF0ZSgpIHsKICAgICAgaWYgKHRoaXMuc3RhdGUgIT09IHVuZGVmaW5lZCkgewogICAgICAgIHJldHVybiB0aGlzLnN0YXRlLnRvTG93ZXJDYXNlKCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHRoaXMuYWN0aXZlID8gU1RBVEVTLkxPQURJTkcgOiBTVEFURVMuTE9BREVEOwogICAgICB9CiAgICB9LAogICAgc3RhdGVUZXh0KCkgewogICAgICBzd2l0Y2ggKHRoaXMuaW50ZXJuYWxTdGF0ZSkgewogICAgICAgIGNhc2UgU1RBVEVTLkxPQURFRDoKICAgICAgICAgIHJldHVybiB0aGlzLmxvYWRlZFRleHQ7CiAgICAgICAgY2FzZSBTVEFURVMuRVJST1I6CiAgICAgICAgICByZXR1cm4gdGhpcy5lcnJvclRleHQ7CiAgICAgICAgY2FzZSBTVEFURVMuRU5ESU5HOgogICAgICAgICAgcmV0dXJuIHRoaXMuZW5kaW5nVGV4dDsKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgcmV0dXJuIHRoaXMubG9hZGluZ1RleHQ7CiAgICAgIH0KICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["cv-inline-loading.vue"],"names":[],"mappings":";AAyBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"cv-inline-loading.vue","sourceRoot":"node_modules/@carbon/vue/src/components/cv-inline-loading","sourcesContent":["<template>\n  <div data-inline-loading :class=\"`${carbonPrefix}--inline-loading`\" role=\"alert\" aria-live=\"assertive\">\n    <div\n      :class=\"[\n        `${carbonPrefix}--inline-loading__animation`,\n        { [`${carbonPrefix}--loading--stop`]: internalState === STATES.ENDING },\n      ]\"\n    >\n      <div\n        v-show=\"internalState === STATES.LOADING || internalState === STATES.ENDING\"\n        :class=\"`${carbonPrefix}--loading ${carbonPrefix}--loading--small`\"\n      >\n        <cv-loading :description=\"description\" :active=\"active\" small />\n      </div>\n      <CheckmarkFilled16\n        :hidden=\"internalState !== STATES.LOADED\"\n        :class=\"`${carbonPrefix}--inline-loading__checkmark-container`\"\n      />\n      <ErrorFilled16 :hidden=\"internalState !== STATES.ERROR\" :class=\"`${carbonPrefix}--inline-loading--error`\" />\n    </div>\n    <p :class=\"`${carbonPrefix}--inline-loading__text`\">{{ stateText }}</p>\n  </div>\n</template>\n\n<script>\nimport { STATES } from './consts';\nimport ErrorFilled16 from '@carbon/icons-vue/lib/error--filled/16';\nimport CheckmarkFilled16 from '@carbon/icons-vue/lib/checkmark--filled/16';\nimport { carbonPrefixMixin } from '../../mixins';\nimport CvLoading from '../cv-loading/cv-loading.vue';\n\nexport default {\n  name: 'CvInlineLoading',\n  components: { ErrorFilled16, CheckmarkFilled16, CvLoading },\n  mixins: [carbonPrefixMixin],\n  created() {\n    this.STATES = STATES;\n  },\n  props: {\n    active: {\n      type: Boolean,\n      default: undefined,\n      deprecated: true,\n      validator: val => {\n        if (val !== undefined && process.env.NODE_ENV === 'development') {\n          console.warn('CvInlineLoading: active prop deprecated in favour of state prop');\n        }\n        return true;\n      },\n    },\n    description: { type: String, default: 'Loading' },\n    endingText: { type: String, default: 'Load ending...' },\n    errorText: { type: String, default: 'Loading data failed.' },\n    loadingText: { type: String, default: 'Loading data...' },\n    loadedText: { type: String, default: 'Data loaded.' },\n    state: {\n      type: String,\n      default: undefined,\n      validator: val => {\n        if (Object.keys(STATES).some(state => STATES[state] === val.toLowerCase())) {\n          return true;\n        } else {\n          console.error(`CvInlineLoading: Valid states are ${JSON.stringify(Object.values(STATES))}`);\n          return false;\n        }\n      },\n    },\n  },\n  computed: {\n    internalState() {\n      if (this.state !== undefined) {\n        return this.state.toLowerCase();\n      } else {\n        return this.active ? STATES.LOADING : STATES.LOADED;\n      }\n    },\n    stateText() {\n      switch (this.internalState) {\n        case STATES.LOADED:\n          return this.loadedText;\n        case STATES.ERROR:\n          return this.errorText;\n        case STATES.ENDING:\n          return this.endingText;\n        default:\n          return this.loadingText;\n      }\n    },\n  },\n};\n</script>\n"]}]}