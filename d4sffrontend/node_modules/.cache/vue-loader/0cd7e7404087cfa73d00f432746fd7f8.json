{"remainingRequest":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\src\\components\\mapController\\ControllerPanel4Mobile.vue?vue&type=style&index=0&id=bfb90696&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\src\\components\\mapController\\ControllerPanel4Mobile.vue","mtime":1671529918024},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2xheWVyc0NvbnRyb2xlcnsKICAgIHBvc2l0aW9uOiBmaXhlZDsKICAgIHdpZHRoOiBhdXRvOwogICAgcGFkZGluZzogMTBweDsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmNGY0ZjQ7CiAgICBtYXJnaW4tdG9wOiAxMHB4OwogICAgbWFyZ2luLWxlZnQ6IDEwcHg7CiAgICBtYXgtd2lkdGg6IDQ4MC42cHg7Cn0KI2xheWVyc0NvbnRyb2xlclJlc3BvbnNpdmV7CiAgICBib3R0b206IDA7CiAgICBwb3NpdGlvbjogZml4ZWQ7CiAgICB3aWR0aDogMTAwJTsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmNGY0ZjQ7CiAgICAvKgogICAgb3ZlcmZsb3cteTogYXV0bzsKICAgICovCn0KI2Rpdl9idXNjYWRvcnsKICAgIHBvc2l0aW9uOiBmaXhlZDsKICAgIHdpZHRoOiA0MHZ3OwogICAgcGFkZGluZzogMTBweDsKICAgIG1hcmdpbi10b3A6IDBweDsKICAgIG1hcmdpbi1sZWZ0OiA1MDBweDsKfQojcGFyY2VsTGlzdHsKICAgIG1hcmdpbi1ib3R0b206IDFlbTsKfQojc2VudGluZWxMYXllcnMsICNzZW50aW5lbE9wYWNpdHksICNzZW50aW5lbENsb3VkcywgI3NlbnRpbmVsRGF0ZXsKICAgIG1hcmdpbi1ib3R0b206IDFlbTsKfQpmb290ZXJ7CiAgICBkaXNwbGF5OiBub25lOwp9CiNzZW50aW5lbExheWVyc0xpc3R7CiAgICBvdmVyZmxvdy15OiBhdXRvOwogICAgaGVpZ2h0OiAyNTBweDsKfQpAbWVkaWEgKG1heC1oZWlnaHQ6IDcwMHB4KSB7CiAgICAjc2VudGluZWxMYXllcnNMaXN0ewogICAgICAgIG92ZXJmbG93OiBzY3JvbGw7CiAgICAgICAgaGVpZ2h0OiAyODBweDsKICAgIH0KfQojcGFnaW5hY2lvblJlc3B7CiAgICBmb250LXdlaWdodDogNDExOwogICAgbGluZS1oZWlnaHQ6IDEuMTI1cmVtOwogICAgbGV0dGVyLXNwYWNpbmc6IDAuMTZweDsKICAgIHdpZHRoOiAxMHB4OwogICAgYmFja2dyb3VuZC1jb2xvcjogI2Y0ZjRmNDsKICAgIGRpc3BsYXk6IGlubGluZS1ncmlkOwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwOwogICAgaGVpZ2h0OiAzcmVtOwp9Ci5lcnJvckRyYXd7CiAgICBjb2xvcjogI2RhMWUyODsKICAgIGZvbnQtd2VpZ2h0OiA0MDA7CiAgICBmb250LXNpemU6IDEycHg7Cn0KI2NvbnRyb2xfZGVyewogICAgbWFyZ2luLXRvcDogNThweDsKICAgIHBhZGRpbmc6IDEwcHg7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY0OwogICAgcG9zaXRpb246IGZpeGVkOwogICAgdG9wOiAwcHg7CiAgICByaWdodDogOHB4Owp9CkBtZWRpYSAobWF4LWhlaWdodDogOTAwcHgpIHsKICAgICNsYXllcnNDb250cm9sZXJ7CiAgICAgICAgbWF4LWhlaWdodDogOTAlOwogICAgICAgIG92ZXJmbG93LXk6IGF1dG87CiAgICB9Cn0K"},{"version":3,"sources":["ControllerPanel4Mobile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ControllerPanel4Mobile.vue","sourceRoot":"src/components/mapController","sourcesContent":["<template>\r\n    <div id=\"layersControlerResponsive\" class=\"layersControler\" ref=\"layersControlersResponsive\">\r\n        <div class=\"bx--row\" id=\"row_box\">\r\n            <div class=\"bx--col-sm-3\">\r\n                <div id=\"sentinelLayers\">\r\n                    <cv-dropdown @change=\"actionChangeLayers\" :label=\"$t('map.sent_layers')\" up v-if=\"!expand\">\r\n                            <cv-dropdown-item v-for=\"layer in layersSelector\" :value=\"layer.id\" v-bind:key=\"layer.id\" :selected=\"layer.id == 'AGRICULTURE'\">{{layer.title}}</cv-dropdown-item>\r\n                    </cv-dropdown>\r\n                    <cv-dropdown @change=\"actionChangeLayers\" :label=\"$t('map.sent_layers')\" v-else>\r\n                            <cv-dropdown-item v-for=\"layer in layersSelector\" :value=\"layer.id\" v-bind:key=\"layer.id\" :selected=\"layer.id == 'AGRICULTURE'\">{{layer.title}}</cv-dropdown-item>\r\n                    </cv-dropdown>\r\n                </div>\r\n            </div>\r\n            <div class=\"bx--col-sm-1\">\r\n                <ChevronSortUp20 @click=\"onclickTile\" v-if=\"!expand\" style=\"transform: translate(35px, 0px);\"/>\r\n                <ChevronSortDown20  @click=\"onclickTile\" v-if=\"expand\" style=\"transform: translate(35px, 0px);\"/>\r\n            </div>\r\n        </div>\r\n            <div>\r\n                <div class=\"bx--row\">\r\n                    <div class=\"bx--col\">\r\n                        <div id=\"geolocIcon\" style=\"\">\r\n                            <div v-if=\"mostrarIconErrGeoloc === ''\" @click=\"cargaLocalizacionActual()\">\r\n                                <p style=\"cursor: pointer; font-size: 14px;\">Mostrar mi ubicación <img src=\"../../assets/airport-location.svg\" style=\"width: 14px; height: 14px;\"></p>\r\n                            </div>\r\n                            <div v-else-if=\"mostrarIconErrGeoloc === false\" @click=\"cargaLocalizacionActual()\">\r\n                                <p style=\"cursor: pointer; font-size: 14px;\">Para volver a localizar mi ubicación, haz click aquí <Location16 style=\"stroke: #00abff; width: 14px; height: 14px; fill: #00abff;\"/></p>\r\n                            </div>\r\n                            <div v-else-if=\"mostrarIconErrGeoloc === true\" @click=\"cargaLocalizacionActual()\">\r\n                                <p style=\"cursor: pointer; font-size: 14px;\">No temenos acceso a tu ubicación <img src=\"../../assets/location--hazard.svg\" style=\"width: 14px; height: 14px;\"></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        <div v-if=\"expand\">\r\n            <div>\r\n                <cv-select\r\n                    theme=\"\"\r\n                    :label=\"$t('map.listado_empresas')\"\r\n                    :hide-label=\"false\"\r\n                    :inline=\"false\"\r\n                    :disabled=\"false\"\r\n                    @change=\"seleccionaEmpresa\"\r\n                    >\r\n                    <cv-select-option disabled selected hidden>{{$t(\"map.sel_empresa\")}}</cv-select-option>\r\n                    <cv-select-optgroup label=\"Todas las Empresas\" v-if=\"is_superuser || is_systemadmin\">\r\n                        <cv-select-option :value=\"`all`\" v-if=\"is_superuser || is_systemadmin\">{{$t(\"map.most_todas_empresas\")}}</cv-select-option>\r\n                        <cv-select-option v-for=\"empresa in listadoEmpresas\" :value=\"String(empresa.id)\"  v-bind:key=\"empresa.id\">\r\n                            {{empresa.name}}\r\n                        </cv-select-option>\r\n                    </cv-select-optgroup>\r\n                    <cv-select-optgroup :label=\"`Cooperativa ${cooperativa.name}`\" v-bind:key=\"cooperativa.id\" v-for=\"cooperativa in arrCooperativas\">\r\n                        <cv-select-option :value=\"`coop_${cooperativa.id}`\">{{$t(\"map.most_todas_empresas\")}}</cv-select-option>\r\n                        <cv-select-option v-for=\"empresa in cooperativa.enterprises\" :value=\"String(empresa.id)\"  v-bind:key=\"empresa.id\">\r\n                            {{empresa.name}}\r\n                        </cv-select-option>\r\n                    </cv-select-optgroup>\r\n                </cv-select>\r\n            </div>\r\n            <div ref=\"sentinelLayersListCollapse\">\r\n                <cv-search :placeholder=\"`Buscar`\" @input=\"onBuscar\" ></cv-search>\r\n                <cv-structured-list-heading >Listado de Parcelas </cv-structured-list-heading>\r\n                <div id=\"sentinelLayersList\">\r\n                    \r\n                    <cv-structured-list selectable>\r\n                        <template slot=\"items\" v-for=\"parcel in allParcelsOfEnterprisesFilter\">\r\n                            <template>\r\n                                <cv-structured-list-item\r\n                                    v-bind:key=\"parcel.id\" \r\n                                    name=\"group-1\"\r\n                                    :value=\"String(parcel.id)\"\r\n                                    ref=\"listaDeParcelas\"\r\n                                    @change=\"actionChangeParcels\"\r\n                                >\r\n                                    <cv-structured-list-data>{{parcel.properties.name}} - {{getNameEnterprise(parcel.properties.enterprise_id)}}</cv-structured-list-data>\r\n                                </cv-structured-list-item>\r\n                            </template>\r\n                        </template>\r\n                    </cv-structured-list>  \r\n                </div>\r\n            \r\n                <br>\r\n                <div>\r\n                    <div class=\"bx--row\">\r\n                        <div class=\"bx--col\">\r\n                            <cv-toggle\r\n                                :checked=\"checkedToggleMostarTexto\"\r\n                                label=\"Desbordamiento de nombres de Parcelas\"\r\n                                value=\"check-1\"\r\n                                :small=\"true\"\r\n                                :hide-label=\"true\"\r\n                                @change=\"actionChangedToggle\">\r\n                                <template slot=\"text-left\">Desactivado desbordamiento de nombres de Parcelas</template>\r\n                                <template slot=\"text-right\">Activado desbordamiento de nombres de Parcelas</template>\r\n                            </cv-toggle>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        \r\n        \r\n        \r\n        \r\n            <div id=\"sentinelLayers\">\r\n                <cv-button\r\n                    :disabled=\"false\"\r\n                    @click=\"actionClearCacheSentinel\"\r\n                    size=\"small\"\r\n                    style=\"margin-top: 20px\"\r\n                >\r\n                Recargar sistema\r\n                </cv-button>\r\n            </div>\r\n            <br>\r\n            <div id=\"sentinelOpacity\">\r\n                <cv-slider\r\n                    :label=\"$t('map.opacidad')\"\r\n                    @change=\"actionChangeOpacity\"></cv-slider>\r\n            </div>\r\n            <br>\r\n            <div id=\"sentinelDate\">\r\n                <div class=\"bx--row\">\r\n                    <div class=\"bx--col\">\r\n                        <cv-date-picker\r\n                            kind=\"single\"\r\n                            :cal-options=\"calOptions\"\r\n                            @change=\"actionChangeDate\"\r\n                            :dateLabel=\"$t('map.fecha')\"\r\n                            :value=\"valueDates\"\r\n                            placeholder=\"mm/dd/yyyy\"\r\n                            ref=\"cambiosFechas\"\r\n                            style=\"width: 100%!important\"\r\n                        ></cv-date-picker>\r\n                    </div>\r\n                    <div class=\"bx--col\">\r\n                        <cv-button\r\n                            :disabled=\"false\"\r\n                            @click=\"actionClickDateCargaFechasSent\"\r\n                            size=\"small\"\r\n                            style=\"margin-top: 20px\"\r\n                            >\r\n                            {{$t(\"map.fechas_disponibles\")}}\r\n                            <cv-loading\r\n                            :small=\"true\"\r\n                            :active=\"isActiveLoadingFechasSent\"\r\n                            :overlay=\"false\" v-if=\"isVisibleLoadFechasSent\"></cv-loading>\r\n                        </cv-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br>\r\n            <br>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n//import proj4 from 'proj4'\r\n//import {polygonCenter} from '@/crudFunctions/crudEnterprise'\r\nimport {getEnterprise, getAllEnterprises, getFechasSentinel} from '@/crudFunctions/crudEnterprise'//getEnterprise\r\nimport {getCooperative} from '@/crudFunctions/crudCooperativas'\r\nexport default {\r\n    name: 'ControllerPanel4Mobile',\r\n    props: {\r\n        username: String,\r\n        arrEnterprises: Array,\r\n        arrCooperativas: Array,\r\n        centro: [],\r\n        layersSelector: Array,\r\n        checkedToggleMostarTexto: Boolean,\r\n        is_superuser: Boolean,\r\n        is_systemadmin: Boolean,\r\n        mapComponent: Object,\r\n        allParcelsOfEnterprises: Array,\r\n        allParcelsOfEnterprisesFilter: Array,\r\n        SentinelLayer: String,\r\n    },\r\n    data() {\r\n        return {\r\n            listadoEmpresas: this.arrEnterprises,\r\n            calOptions: {\r\n                \"dateFormat\": \"Y-m-d\"\r\n            },\r\n            valueDates: [],\r\n            isActiveLoadingFechasSent: false,\r\n            isVisibleLoadFechasSent: false,\r\n            expand: false,\r\n            expand2: true,\r\n            erorCompaGeoloc: '',\r\n            mostrarIconErrGeoloc: '',\r\n        }\r\n    },\r\n    components: {\r\n        \r\n    },\r\n    methods: {\r\n        cargaLocalizacionActual(){\r\n            if(!(\"geolocation\" in navigator)) {\r\n                this.erorCompaGeoloc =  this.$t('map.loc_no_disponible')\r\n                this.mostrarIconErrGeoloc = true\r\n                return;\r\n            }\r\n            \r\n            // get position\r\n            navigator.geolocation.getCurrentPosition(pos => {\r\n                console.info('Localizacion autorizada', pos)\r\n                this.mostrarIconErrGeoloc = false;\r\n                this.$emit('setCenter', [pos.coords.longitude, pos.coords.latitude])\r\n            }, err => {\r\n                this.mostrarIconErrGeoloc = true\r\n                console.info('Localización no autorizada', err)\r\n            })\r\n        },\r\n        onclickTile(){\r\n            if(this.expand){\r\n                this.expand = false\r\n                this.$refs.layersControlersResponsive.style['max-height'] = ''\r\n                this.$refs.layersControlersResponsive.style['overflow-y'] = ''\r\n                this.componentDrop +=1\r\n            }else{\r\n                this.expand = true\r\n                this.$refs.layersControlersResponsive.style['max-height'] = '90%'\r\n                this.$refs.layersControlersResponsive.style['overflow-y'] = 'auto'\r\n            }\r\n        },\r\n        onclickTile2(){\r\n            if(this.expand2){\r\n                this.expand2 = false\r\n                this.$refs.sentinelLayersListCollapse.style.display = \"none\"\r\n                this.$refs.sentinelLayersListCollapseP.$el.style.display = \"none\"\r\n                this.classfechaR = ``\r\n                this.classfechab1 = ``\r\n                this.classfechab2 = ``\r\n\r\n            }else{\r\n                this.expand2 = true\r\n                this.$refs.sentinelLayersListCollapse.style.display = \"block\"\r\n                this.$refs.sentinelLayersListCollapseP.$el.style.display = \"\"\r\n                this.classfechaR = `bx--row`,\r\n                this.classfechab1 = `bx--col-lg-7 bx--col-md-10 bx--col-sm-8`\r\n                this.classfechab2 = `bx--col-lg-1 bx--col-md-1 bx--col-sm-1`\r\n            }\r\n                \r\n        },\r\n        seleccionaEmpresa(empresa){\r\n            const arrParcels = []\r\n            if(empresa == 'all'){\r\n                getAllEnterprises()\r\n                    .then(async response => {\r\n                        response.data.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.$emit('setEnterprise', response.data)\r\n                        this.$emit('setAllParcelsOfEnterprises', arrParcels)\r\n                    })\r\n            }else{\r\n                const result = empresa.split('_')\r\n                if(result[0] == 'coop'){\r\n                    getCooperative(result[1])\r\n                    .then(response => {\r\n                        response.data.enterprises.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.$emit('setEnterprise', response.data.enterprises)\r\n                        this.$emit('setAllParcelsOfEnterprises', arrParcels)\r\n                    })\r\n                }else{\r\n                    getEnterprise(empresa)\r\n                    .then(async response => {\r\n                        response.data.parcels.features.map(parcel => {\r\n                            arrParcels.push(parcel)\r\n                        })\r\n                        this.$emit('setEnterprise', [response.data])\r\n                        this.$emit('setAllParcelsOfEnterprises', arrParcels)\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        actionChangeParcels(valor){\r\n            let result = []\r\n            this.arrEnterprises.map(enterprise => {\r\n                enterprise.parcels.features.map(feature => {\r\n                    if(feature.id == valor){\r\n                        result.push(feature)\r\n                    }\r\n                })\r\n\r\n            })\r\n            const coordenadasGeometricas = result[0].geometry.coordinates[0]\r\n            const newCenter = this.getCenter(coordenadasGeometricas)\r\n            this.$emit('setCenter', [newCenter[0], newCenter[1]])\r\n            \r\n        },\r\n        actionChangeDate(valor){\r\n            const arrFechas = valor.split(', ')\r\n            if(arrFechas.length == 1){\r\n                this.time = \"2019-01-01/\"+valor\r\n                this.$emit('setFechaSentinel', valor)\r\n            }\r\n        },\r\n        actionClickDateCargaFechasSent(){\r\n            this.isActiveLoadingFechasSent = true\r\n            this.isActiveLoadingFechasSent = true\r\n            getFechasSentinel(this.mapComponent.previousExtent_)\r\n            .then(response => {\r\n                const respuesta = response.data.features\r\n                const fechasArray = Array()\r\n                respuesta.forEach(feature =>{\r\n                    fechasArray.push(feature.properties.date)\r\n                })\r\n                this.valueDates = fechasArray.reverse()\r\n                this.isActiveLoadingFechasSent = false\r\n                this.isActiveLoadingFechasSent = false\r\n            })\r\n        },\r\n        getCenter(coordenadasGeometricas){\r\n            var minX, maxX, minY, maxY;\r\n            for (var i = 0; i < coordenadasGeometricas.length; i++){\r\n                minX = (coordenadasGeometricas[i][0] < minX || minX == null) ? coordenadasGeometricas[i][0] : minX;\r\n                maxX = (coordenadasGeometricas[i][0] > maxX || maxX == null) ? coordenadasGeometricas[i][0] : maxX;\r\n                minY = (coordenadasGeometricas[i][1] < minY || minY == null) ? coordenadasGeometricas[i][1] : minY;\r\n                maxY = (coordenadasGeometricas[i][1] > maxY || maxY == null) ? coordenadasGeometricas[i][1] : maxY;\r\n            }\r\n            return [(minX + maxX) / 2, (minY + maxY) / 2];\r\n        },\r\n        onBuscar(busqueda){\r\n            console.info(busqueda)\r\n            if(busqueda){\r\n                const result = this.allParcelsOfEnterprises.filter(parcel => parcel.properties.name.toUpperCase().includes(busqueda.toUpperCase()))\r\n                this.allParcelsOfEnterprisesFilter = result\r\n            }else{\r\n                this.allParcelsOfEnterprisesFilter = this.allParcelsOfEnterprises\r\n            }\r\n        },\r\n        getNameEnterprise(value){\r\n            const result = this.arrEnterprises.filter(enterprise => enterprise.id == value)\r\n            return result[0].name\r\n        },\r\n        actionChangedToggle(value){\r\n            //this.checkedToggleMostarTexto = value\r\n            this.$emit('setToggleMostrarTexto', value)\r\n        },\r\n        actionChangeLayers(value){\r\n            this.$emit('setSentinelLayer', value)\r\n        },\r\n        actionClearCacheSentinel(){\r\n            this.$emit('setSentinelClearCache')\r\n        },\r\n        actionChangeOpacity(value){\r\n            this.$emit('setSentinelOpacity', value/100)\r\n        }\r\n    },\r\n    mounted: function () {\r\n        \r\n        //console.info('User Logged')\r\n    },\r\n    beforeCreate(){\r\n        \r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n    #layersControler{\r\n        position: fixed;\r\n        width: auto;\r\n        padding: 10px;\r\n        background-color: #f4f4f4;\r\n        margin-top: 10px;\r\n        margin-left: 10px;\r\n        max-width: 480.6px;\r\n    }\r\n    #layersControlerResponsive{\r\n        bottom: 0;\r\n        position: fixed;\r\n        width: 100%;\r\n        background-color: #f4f4f4;\r\n        /*\r\n        overflow-y: auto;\r\n        */\r\n    }\r\n    #div_buscador{\r\n        position: fixed;\r\n        width: 40vw;\r\n        padding: 10px;\r\n        margin-top: 0px;\r\n        margin-left: 500px;\r\n    }\r\n    #parcelList{\r\n        margin-bottom: 1em;\r\n    }\r\n    #sentinelLayers, #sentinelOpacity, #sentinelClouds, #sentinelDate{\r\n        margin-bottom: 1em;\r\n    }\r\n    footer{\r\n        display: none;\r\n    }\r\n    #sentinelLayersList{\r\n        overflow-y: auto;\r\n        height: 250px;\r\n    }\r\n    @media (max-height: 700px) {\r\n        #sentinelLayersList{\r\n            overflow: scroll;\r\n            height: 280px;\r\n        }\r\n    }\r\n    #paginacionResp{\r\n        font-weight: 411;\r\n        line-height: 1.125rem;\r\n        letter-spacing: 0.16px;\r\n        width: 10px;\r\n        background-color: #f4f4f4;\r\n        display: inline-grid;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        border-top: 1px solid #e0e0e0;\r\n        height: 3rem;\r\n    }\r\n    .errorDraw{\r\n        color: #da1e28;\r\n        font-weight: 400;\r\n        font-size: 12px;\r\n    }\r\n    #control_der{\r\n        margin-top: 58px;\r\n        padding: 10px;\r\n        background-color: #f4f4f4;\r\n        position: fixed;\r\n        top: 0px;\r\n        right: 8px;\r\n    }\r\n    @media (max-height: 900px) {\r\n        #layersControler{\r\n            max-height: 90%;\r\n            overflow-y: auto;\r\n        }\r\n    }\r\n</style>\r\n"]}]}