{"remainingRequest":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\@carbon\\vue\\src\\components\\cv-ui-shell\\cv-header.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\@carbon\\vue\\src\\components\\cv-ui-shell\\cv-header.vue","mtime":1681731165089},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681731147886},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1681731147886},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1681731156386},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681731147886},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1681731148945}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IGNhcmJvblByZWZpeE1peGluIH0gZnJvbSAnLi4vLi4vbWl4aW5zJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdDdkhlYWRlcicsCiAgbWl4aW5zOiBbY2FyYm9uUHJlZml4TWl4aW5dLAogIGNyZWF0ZWQoKSB7CiAgICAvLyBhZGQgdGhlc2Ugb24gY3JlYXRlZCBvdGhlcndpc2UgY3Y6bW91bnRlZCBpcyB0b28gbGF0ZS4KICAgIHRoaXMuJG9uKCdjdjpwYW5lbC1jb250cm9sLW1vdW50ZWQnLCB0aGlzLm9uQ3ZQYW5lbENvbnRyb2xNb3VudGVkKTsKICAgIHRoaXMuJG9uKCdjdjpwYW5lbC1jb250cm9sLWJlZm9yZURlc3Ryb3knLCB0aGlzLm9uQ3ZQYW5lbENvbnRyb2xCZWZvcmVEZXN0cm95KTsKICAgIHRoaXMuJG9uKCdjdjpwYW5lbC1jb250cm9sLXRvZ2dsZScsIHRoaXMub25DdlBhbmVsQ29udHJvbFRvZ2dsZSk7CiAgICB0aGlzLiRvbignY3Y6cGFuZWwtY29udHJvbC1mb2N1c291dCcsIHRoaXMub25DdlBhbmVsQ29udHJvbEZvY3Vzb3V0KTsKICAgIHRoaXMuJG9uKCdjdjpwYW5lbC1tb3VudGVkJywgdGhpcy5vbkN2UGFuZWxNb3VudGVkKTsKICAgIHRoaXMuJG9uKCdjdjpwYW5lbC1iZWZvcmVEZXN0cm95JywgdGhpcy5vbkN2UGFuZWxCZWZvcmVEZXN0cm95KTsKICAgIHRoaXMuJG9uKCdjdjpwYW5lbC1mb2N1c291dCcsIHRoaXMub25DdlBhbmVsRm9jdXNvdXQpOwogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBhbmVsQ29udHJvbGxlcnM6IFtdLAogICAgICBwYW5lbHM6IFtdLAogICAgICBoYXNHbG9iYWxIZWFkZXI6IGZhbHNlLAogICAgfTsKICB9LAogIG1vdW50ZWQoKSB7CiAgICAvLyBOT1RFOiB0aGlzLiRzbG90cyBpcyBub3QgcmVhY3RpdmUgc28gbmVlZHMgdG8gYmUgbWFuYWdlZCBvbiB1cGRhdGVkCiAgICB0aGlzLmhhc0dsb2JhbEhlYWRlciA9ICEhdGhpcy4kc2xvdHNbJ2hlYWRlci1nbG9iYWwnXTsKICB9LAogIHVwZGF0ZWQoKSB7CiAgICB0aGlzLmhhc0dsb2JhbEhlYWRlciA9ICEhdGhpcy4kc2xvdHNbJ2hlYWRlci1nbG9iYWwnXTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBpc0N2SGVhZGVyKCkgewogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0sCiAgfSwKICBtZXRob2RzOiB7CiAgICBoYXNSYWlsKF9jdHJsLCBfcGFuZWwpIHsKICAgICAgbGV0IHBhbmVsID0gX3BhbmVsOwogICAgICBsZXQgY3RybCA9IF9jdHJsOwogICAgICBpZiAoY3RybCkgewogICAgICAgIHBhbmVsID0gdGhpcy5wYW5lbHMuZmluZChpdGVtID0+IGl0ZW0uaWQgPT09IGN0cmwuYXJpYUNvbnRyb2xzKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAocGFuZWwpIHsKICAgICAgICAgIGN0cmwgPSB0aGlzLnBhbmVsQ29udHJvbGxlcnMuZmluZChpdGVtID0+IGl0ZW0uYXJpYUNvbnRyb2xzID09PSBwYW5lbC5pZCk7CiAgICAgICAgfQogICAgICB9CiAgICAgIGlmIChjdHJsKSB7CiAgICAgICAgY3RybC5oYXNSYWlsID0gISEocGFuZWwgJiYgY3RybCkgJiYgcGFuZWwucmFpbDsKICAgICAgfQogICAgfSwKICAgIG9uQ3ZQYW5lbENvbnRyb2xNb3VudGVkKHNyY0NvbXBvbmVudCkgewogICAgICB0aGlzLnBhbmVsQ29udHJvbGxlcnMucHVzaChzcmNDb21wb25lbnQpOwogICAgICB0aGlzLmhhc1JhaWwoc3JjQ29tcG9uZW50KTsKICAgIH0sCiAgICBvbkN2UGFuZWxDb250cm9sQmVmb3JlRGVzdHJveShzcmNDb21wb25lbnQpIHsKICAgICAgY29uc3QgaW5kZXggPSB0aGlzLnBhbmVsQ29udHJvbGxlcnMuZmluZEluZGV4KGl0ZW0gPT4gaXRlbS5pZCA9PT0gc3JjQ29tcG9uZW50LmlkKTsKICAgICAgaWYgKGluZGV4ID4gLTEpIHsKICAgICAgICB0aGlzLnBhbmVsQ29udHJvbGxlcnMuc3BsaWNlKGluZGV4LCAxKTsKICAgICAgfQogICAgfSwKICAgIG9uQ3ZQYW5lbENvbnRyb2xUb2dnbGUoc3JjQ29tcG9uZW50LCBmb3JjZSkgewogICAgICBjb25zdCBmb3VuZEluZGV4ID0gdGhpcy5wYW5lbHMuZmluZEluZGV4KGl0ZW0gPT4gaXRlbS5pZCA9PT0gc3JjQ29tcG9uZW50LmFyaWFDb250cm9scyk7CiAgICAgIGlmIChmb3VuZEluZGV4ID4gLTEpIHsKICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IGZvcmNlICE9PSB1bmRlZmluZWQgPyBmb3JjZSA6ICFzcmNDb21wb25lbnQucGFuZWxFeHBhbmRlZDsKCiAgICAgICAgZm9yIChsZXQgaW5kZXggaW4gdGhpcy5wYW5lbHMpIHsKICAgICAgICAgIHRoaXMucGFuZWxzW2luZGV4XS5wYW5lbEV4cGFuZGVkID0gZmFsc2U7CiAgICAgICAgfQogICAgICAgIGZvciAobGV0IGluZGV4IGluIHRoaXMucGFuZWxDb250cm9sbGVycykgewogICAgICAgICAgdGhpcy5wYW5lbENvbnRyb2xsZXJzW2luZGV4XS5wYW5lbEV4cGFuZGVkID0gZmFsc2U7CiAgICAgICAgfQoKICAgICAgICBzcmNDb21wb25lbnQucGFuZWxFeHBhbmRlZCA9IG5ld1ZhbHVlOwogICAgICAgIHRoaXMucGFuZWxzW2ZvdW5kSW5kZXhdLnBhbmVsRXhwYW5kZWQgPSBuZXdWYWx1ZTsKICAgICAgfQogICAgfSwKICAgIG9uQ3ZQYW5lbENvbnRyb2xGb2N1c291dChzcmNDb21wb25lbnQsIHNyY0V2ZW50KSB7CiAgICAgIGNvbnN0IGZvdW5kID0gdGhpcy5wYW5lbHMuZmluZChpdGVtID0+IGl0ZW0uaWQgPT09IHNyY0NvbXBvbmVudC5hcmlhQ29udHJvbHMpOwoKICAgICAgaWYgKGZvdW5kICYmICFmb3VuZC5yYWlsICYmIGZvdW5kLiRlbCAhPT0gc3JjRXZlbnQucmVsYXRlZFRhcmdldCAmJiAhZm91bmQuJGVsLmNvbnRhaW5zKHNyY0V2ZW50LnJlbGF0ZWRUYXJnZXQpKSB7CiAgICAgICAgLy8gY2xvc2Ugd2hlbiBub3QgYSByYWlsCiAgICAgICAgdGhpcy5vbkN2UGFuZWxDb250cm9sVG9nZ2xlKHNyY0NvbXBvbmVudCwgZmFsc2UpOwogICAgICB9CiAgICB9LAogICAgb25DdlBhbmVsTW91bnRlZChzcmNDb21wb25lbnQpIHsKICAgICAgdGhpcy5wYW5lbHMucHVzaChzcmNDb21wb25lbnQpOwogICAgICBzcmNDb21wb25lbnQuaGVhZGVyRW1iZWRkZWQgPSB0cnVlOwogICAgICB0aGlzLmhhc1JhaWwodW5kZWZpbmVkLCBzcmNDb21wb25lbnQpOwogICAgfSwKICAgIG9uQ3ZQYW5lbEJlZm9yZURlc3Ryb3koc3JjQ29tcG9uZW50KSB7CiAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5wYW5lbHMuZmluZEluZGV4KGl0ZW0gPT4gaXRlbS5pZCA9PT0gc3JjQ29tcG9uZW50LmlkKTsKICAgICAgaWYgKGluZGV4ID4gLTEpIHsKICAgICAgICB0aGlzLnBhbmVscy5zcGxpY2UoaW5kZXgsIDEpOwogICAgICB9CiAgICB9LAogICAgb25DdlBhbmVsRm9jdXNvdXQoc3JjQ29tcG9uZW50LCBzcmNFdmVudCkgewogICAgICBjb25zdCBmb3VuZCA9IHRoaXMucGFuZWxDb250cm9sbGVycy5maW5kKGl0ZW0gPT4gaXRlbS5hcmlhQ29udHJvbHMgPT09IHNyY0NvbXBvbmVudC5pZCk7CiAgICAgIGlmICgKICAgICAgICBzcmNDb21wb25lbnQuJGVsICE9PSBzcmNFdmVudC5yZWxhdGVkVGFyZ2V0ICYmCiAgICAgICAgIXNyY0NvbXBvbmVudC4kZWwuY29udGFpbnMoc3JjRXZlbnQucmVsYXRlZFRhcmdldCkgJiYKICAgICAgICBmb3VuZCAmJgogICAgICAgIGZvdW5kLiRlbCAhPT0gc3JjRXZlbnQucmVsYXRlZFRhcmdldAogICAgICApIHsKICAgICAgICB0aGlzLm9uQ3ZQYW5lbENvbnRyb2xUb2dnbGUoZm91bmQsIGZhbHNlKTsKICAgICAgfQogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["cv-header.vue"],"names":[],"mappingsfile":"cv-header.vue","sourceRoot":"node_modules/@carbon/vue/src/components/cv-ui-shell","sourcesContent":["<template>\n  <header :class=\"`cv-header ${carbonPrefix}--header`\" data-header>\n    <slot />\n    <div v-if=\"hasGlobalHeader\" :class=\"`${carbonPrefix}--header__global`\">\n      <slot name=\"header-global\" />\n    </div>\n    <slot name=\"left-panels\" />\n    <slot name=\"right-panels\" />\n  </header>\n</template>\n\n<script>\nimport { carbonPrefixMixin } from '../../mixins';\nexport default {\n  name: 'CvHeader',\n  mixins: [carbonPrefixMixin],\n  created() {\n    // add these on created otherwise cv:mounted is too late.\n    this.$on('cv:panel-control-mounted', this.onCvPanelControlMounted);\n    this.$on('cv:panel-control-beforeDestroy', this.onCvPanelControlBeforeDestroy);\n    this.$on('cv:panel-control-toggle', this.onCvPanelControlToggle);\n    this.$on('cv:panel-control-focusout', this.onCvPanelControlFocusout);\n    this.$on('cv:panel-mounted', this.onCvPanelMounted);\n    this.$on('cv:panel-beforeDestroy', this.onCvPanelBeforeDestroy);\n    this.$on('cv:panel-focusout', this.onCvPanelFocusout);\n  },\n  data() {\n    return {\n      panelControllers: [],\n      panels: [],\n      hasGlobalHeader: false,\n    };\n  },\n  mounted() {\n    // NOTE: this.$slots is not reactive so needs to be managed on updated\n    this.hasGlobalHeader = !!this.$slots['header-global'];\n  },\n  updated() {\n    this.hasGlobalHeader = !!this.$slots['header-global'];\n  },\n  computed: {\n    isCvHeader() {\n      return true;\n    },\n  },\n  methods: {\n    hasRail(_ctrl, _panel) {\n      let panel = _panel;\n      let ctrl = _ctrl;\n      if (ctrl) {\n        panel = this.panels.find(item => item.id === ctrl.ariaControls);\n      } else {\n        if (panel) {\n          ctrl = this.panelControllers.find(item => item.ariaControls === panel.id);\n        }\n      }\n      if (ctrl) {\n        ctrl.hasRail = !!(panel && ctrl) && panel.rail;\n      }\n    },\n    onCvPanelControlMounted(srcComponent) {\n      this.panelControllers.push(srcComponent);\n      this.hasRail(srcComponent);\n    },\n    onCvPanelControlBeforeDestroy(srcComponent) {\n      const index = this.panelControllers.findIndex(item => item.id === srcComponent.id);\n      if (index > -1) {\n        this.panelControllers.splice(index, 1);\n      }\n    },\n    onCvPanelControlToggle(srcComponent, force) {\n      const foundIndex = this.panels.findIndex(item => item.id === srcComponent.ariaControls);\n      if (foundIndex > -1) {\n        const newValue = force !== undefined ? force : !srcComponent.panelExpanded;\n\n        for (let index in this.panels) {\n          this.panels[index].panelExpanded = false;\n        }\n        for (let index in this.panelControllers) {\n          this.panelControllers[index].panelExpanded = false;\n        }\n\n        srcComponent.panelExpanded = newValue;\n        this.panels[foundIndex].panelExpanded = newValue;\n      }\n    },\n    onCvPanelControlFocusout(srcComponent, srcEvent) {\n      const found = this.panels.find(item => item.id === srcComponent.ariaControls);\n\n      if (found && !found.rail && found.$el !== srcEvent.relatedTarget && !found.$el.contains(srcEvent.relatedTarget)) {\n        // close when not a rail\n        this.onCvPanelControlToggle(srcComponent, false);\n      }\n    },\n    onCvPanelMounted(srcComponent) {\n      this.panels.push(srcComponent);\n      srcComponent.headerEmbedded = true;\n      this.hasRail(undefined, srcComponent);\n    },\n    onCvPanelBeforeDestroy(srcComponent) {\n      const index = this.panels.findIndex(item => item.id === srcComponent.id);\n      if (index > -1) {\n        this.panels.splice(index, 1);\n      }\n    },\n    onCvPanelFocusout(srcComponent, srcEvent) {\n      const found = this.panelControllers.find(item => item.ariaControls === srcComponent.id);\n      if (\n        srcComponent.$el !== srcEvent.relatedTarget &&\n        !srcComponent.$el.contains(srcEvent.relatedTarget) &&\n        found &&\n        found.$el !== srcEvent.relatedTarget\n      ) {\n        this.onCvPanelControlToggle(found, false);\n      }\n    },\n  },\n};\n</script>\n"]}]}