{"remainingRequest":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\PruebaFront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\PruebaFront\\src\\components\\mapController\\ControllerQuickCreate.vue?vue&type=style&index=0&id=2d13a354&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\PruebaFront\\src\\components\\mapController\\ControllerQuickCreate.vue","mtime":1671529918025},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\PruebaFront\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\PruebaFront\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\PruebaFront\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\PruebaFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\PruebaFront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2NvbnRyb2xfZGVyewogICAgbWFyZ2luLXRvcDogNThweDsKICAgIHBhZGRpbmc6IDEwcHg7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY0OwogICAgcG9zaXRpb246IGZpeGVkOwogICAgdG9wOiAwcHg7CiAgICByaWdodDogOHB4Owp9Ci5lcnJvckRyYXd7CiAgICBjb2xvcjogI2RhMWUyODsKICAgIGZvbnQtd2VpZ2h0OiA0MDA7CiAgICBmb250LXNpemU6IDEycHg7Cn0K"},{"version":3,"sources":["ControllerQuickCreate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ControllerQuickCreate.vue","sourceRoot":"src/components/mapController","sourcesContent":["<template>\r\n    <div id=\"control_der\">\r\n        <div id=\"btnCrearParcela\" v-if=\"verCrearParcel\">\r\n            <cv-button\r\n            kind=\"primary\"\r\n            size=\"small\"\r\n            :disabled=\"verErrorDraw\"\r\n            @click=\"crearParcela\"\r\n            >\r\n            {{$t(\"map.crear_parcela\")}}\r\n            </cv-button>  \r\n        </div>\r\n        <div id=\"edicionParcela\" v-if=\"!verCrearParcel\">\r\n            <p>{{$t(\"map.parcela_nueva\")}}</p>\r\n            <div>\r\n            <cv-select\r\n                theme=\"\"\r\n                :label=\"$t('map.listado_empresas')\"\r\n                :hide-label=\"false\"\r\n                :inline=\"false\"\r\n                :disabled=\"false\"\r\n                @change=\"seleccionaEmpresa\"\r\n                >\r\n                <cv-select-option disabled selected hidden>{{$t(\"map.sel_empresa\")}}</cv-select-option>\r\n                <cv-select-optgroup label=\"Todas las Empresas\" v-if=\"is_superuser || is_systemadmin\">\r\n                    <cv-select-option :value=\"`all`\" v-if=\"is_superuser || is_systemadmin\">{{$t(\"map.most_todas_empresas\")}}</cv-select-option>\r\n                    <cv-select-option v-for=\"empresa in listadoEmpresas\" :value=\"String(empresa.id)\"  v-bind:key=\"empresa.id\">\r\n                        {{empresa.name}}\r\n                    </cv-select-option>\r\n                </cv-select-optgroup>\r\n                <cv-select-optgroup :label=\"`Cooperativa ${cooperativa.name}`\" v-bind:key=\"cooperativa.id\" v-for=\"cooperativa in arrCooperativas\">\r\n                    <cv-select-option :value=\"`coop_${cooperativa.id}`\">{{$t(\"map.most_todas_empresas\")}}</cv-select-option>\r\n                    <cv-select-option v-for=\"empresa in cooperativa.enterprises\" :value=\"String(empresa.id)\"  v-bind:key=\"empresa.id\">\r\n                        {{empresa.name}}\r\n                    </cv-select-option>\r\n                </cv-select-optgroup>\r\n            </cv-select>\r\n            </div>\r\n            <div class=\"errorDraw\" v-if=\"verErrorDraw\"><br>{{`${errorDrawMsg}`}}</div>\r\n            <p>Creando parcela para {{arrEnterprisesSelectedObj.name}}</p>\r\n            <p>Area {{areaForNewPolygon}}</p>\r\n            <cv-text-input\r\n                :label=\"'Nombre de la parcela'\"\r\n                :value=\"valueName\"\r\n                :disabled=\"false\"\r\n                :type=\"'text'\"\r\n                :invalid-message=\"invalidMessageName\"\r\n                ref=\"inputName\"\r\n                id=\"input-MIRLwtCq\"\r\n                v-model=\"valueName\">\r\n            </cv-text-input>\r\n            <br>\r\n            <cv-text-input\r\n                :label=\"'DescripciÃ³n'\"\r\n                :value=\"valueDesc\"\r\n                :disabled=\"false\"\r\n                :type=\"'text'\"\r\n                :invalid-message=\"invalidMessageDesc\"\r\n                ref=\"inputDesc\"\r\n                id=\"input-3zcRveTf\"\r\n                v-model=\"valueDesc\"\r\n                ></cv-text-input>\r\n            <br>\r\n            <br>\r\n            <br>\r\n            <cv-button\r\n                kind=\"primary\"\r\n                size=\"small\"\r\n                :disabled=\"verErrorDraw\"\r\n                @click=\"guardadoPoligono\"\r\n            >\r\n                {{$t(\"map.guardar\")}}\r\n            </cv-button>\r\n            <cv-button\r\n                kind=\"danger\"\r\n                size=\"small\"\r\n                :disabled=\"false\"\r\n                @click=\"cancelarEdicion\"\r\n            >\r\n                {{$t(\"map.cancelar\")}}\r\n            </cv-button>\r\n            <br>\r\n            <br>\r\n            <cv-button\r\n                kind=\"primary\"\r\n                size=\"small\"\r\n                :disabled=\"false\"\r\n                @click=\"limpiarDibujo\"\r\n            >\r\n                Volver a dibujar\r\n            </cv-button>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport {createQuickParcel, getEnterprise, setParcelsForInstance} from '@/crudFunctions/crudEnterprise'\r\nexport default {\r\n    name: 'ControllerQuickCreate',\r\n    props: {\r\n        verCrearParcel: Boolean,\r\n        verErrorDraw: Boolean,\r\n        errorDrawMsg: String,\r\n        coordinatesPoly: String,\r\n        arrEnterprises: Array,\r\n        arrEnterprisesSelected: Array,\r\n        arrCooperativas: Array,\r\n        is_superuser: Boolean,\r\n        is_systemadmin: Boolean,\r\n        areaForNewPolygon: Number,\r\n        user: Object\r\n    },\r\n    data() {\r\n        return {\r\n            listadoEmpresas: this.arrEnterprises,\r\n            arrEnterprisesSelectedObj: this.arrEnterprisesSelected[0],\r\n            valueName:'',\r\n            invalidMessageName:'',\r\n            valueDesc:'',\r\n            invalidMessageDesc:'',\r\n            enterpriseForCreateParcel: ''\r\n        }\r\n    },\r\n    components: {\r\n        \r\n    },\r\n    methods: {\r\n        seleccionaEmpresa(empresa){\r\n            const result = this.listadoEmpresas.filter(enterprise => enterprise.id == empresa)\r\n            console.info(result)\r\n            this.arrEnterprisesSelectedObj = result[0]\r\n            //this.arrEnterprisesSelected = result\r\n            //this.enterpriseForCreateParcel = result\r\n            this.$emit('setEnterpriseSelect', result)\r\n        },\r\n        crearParcela(){\r\n            this.$emit('setVerCrearParcel', false)\r\n            this.$emit('setverErrorDraw', true)\r\n            this.$emit('setVerCrearParcelDraw', false)\r\n        },\r\n        guardadoPoligono(){\r\n            console.info(this.coordinatesPoly)\r\n            console.info(this.arrEnterprisesSelectedObj)\r\n            console.info(this.user)\r\n            createQuickParcel(this.valueName, this.valueDesc, this.coordinatesPoly, this.areaForNewPolygon, this.arrEnterprisesSelectedObj.id, this.user.id)\r\n            .then(() => {\r\n                getEnterprise(this.arrEnterprisesSelectedObj.id)\r\n                .then(response => {\r\n                    const allCoordinates = Array();\r\n                    const arrParcels = []\r\n                    \r\n                    //const enterprise = response.data\r\n                    const result = this.arrEnterprises.filter(enterprise => enterprise.id == response.data.id)\r\n                    if(result.length == 1 && this.arrEnterprises.length > 1 ){\r\n                        const posEnterprise = this.arrEnterprises.indexOf(result[0])\r\n                        this.arrEnterprises[posEnterprise] = response.data\r\n                        this.arrEnterprises.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        response.data.parcels.features.map(parcel => {\r\n                            allCoordinates.push(parcel.geometry.coordinates)\r\n                        })\r\n                    }else{\r\n                        this.arrEnterprises[0] = response.data\r\n                        response.data.parcels.features.map(parcel => {\r\n                            allCoordinates.push(parcel.geometry.coordinates)\r\n                            arrParcels.push(parcel)\r\n                        })\r\n                    }\r\n                    \r\n                    setParcelsForInstance(response.data.name, allCoordinates, response.data.sentinel_instance)\r\n                    .then(() => {\r\n                        this.$emit('setSentinelClearCache')\r\n                        this.$emit('setEnterprise', this.arrEnterprises)\r\n                        this.$emit('setAllParcelsOfEnterprises', arrParcels)\r\n                        this.cancelarEdicion()\r\n                    })\r\n                    .catch(err => console.info(err))\r\n                })\r\n            })\r\n            /*\r\n            name: this.$refs.inputName.$refs.input.value,\r\n            description: this.$refs.inputDesc.$refs.input.value,\r\n            polygon: this.poligonObjecto,\r\n            area: this.area,\r\n            enterprise: this.enterprise.id,\r\n            user_created: sessionStorage.getItem('user')\r\n            */\r\n            /*\r\n            putParcelPolygon(this.coordinatesPoly, this.parcelSelected.id)\r\n            .then(response => {\r\n                console.info(response.data)\r\n                getEnterprise(response.data.enterprise)\r\n                .then(response => {\r\n                    const allCoordinates = Array();\r\n                    response.data.parcels.features.map(parcel => {\r\n                        allCoordinates.push(parcel.geometry.coordinates)\r\n                    })\r\n                    setParcelsForInstance(response.data.name, allCoordinates, response.data.sentinel_instance)\r\n                    .then(response => {\r\n                        console.info(response.data)\r\n                        this.$emit('setSentinelClearCache')\r\n                        this.$emit('setcoordinatesPoly', '')\r\n                        this.$emit('setifQuickEdit', false)\r\n                        this.$emit('setverErrorDraw', true)\r\n                    })\r\n                    .catch(err => console.info(err))\r\n                })\r\n            })\r\n            */\r\n        },\r\n        cancelarEdicion(){ {\r\n            this.$emit('setVerCrearParcel', true)\r\n            this.$emit('setVerCrearParcelDraw', true)\r\n            this.$emit('setverErrorDraw', false)\r\n            this.$emit('setSentinelClearCache')\r\n            this.$emit('setcoordinatesPoly', '')\r\n            this.$emit('setifQuickEdit', false)\r\n            this.$emit('setverErrorDraw', false)\r\n            this.$emit('setClearParcels')\r\n            this.$emit('setClearFeatures')\r\n            this.$emit('clearCacheDraw')\r\n        }},\r\n        limpiarDibujo(){\r\n            this.$emit('setClearFeatures')\r\n            this.$emit('setVerCrearParcel', false)\r\n            this.$emit('setVerCrearParcelDraw', false)\r\n        }\r\n    },\r\n    mounted: function () {\r\n        \r\n        \r\n    },\r\n    beforeCreate(){\r\n        console.info(this.arrEnterprises)\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n    #control_der{\r\n        margin-top: 58px;\r\n        padding: 10px;\r\n        background-color: #f4f4f4;\r\n        position: fixed;\r\n        top: 0px;\r\n        right: 8px;\r\n    }\r\n    .errorDraw{\r\n        color: #da1e28;\r\n        font-weight: 400;\r\n        font-size: 12px;\r\n    }\r\n</style>"]}]}