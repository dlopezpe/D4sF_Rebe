{"remainingRequest":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\src\\views\\ListaUsuarios.vue?vue&type=style&index=0&id=3625df9c&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\src\\views\\ListaUsuarios.vue","mtime":1606136451835},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmJ4LS1tb2RhbC1jb250ZW50ewogICAgd2lkdGg6IDEwMCU7CiAgICBoZWlnaHQ6IDEwMCUhaW1wb3J0YW50OwogICAgb3ZlcmZsb3c6IGluaXRpYWwhaW1wb3J0YW50OwogICAgb3ZlcmZsb3cteTogaW5pdGlhbDsKfQo="},{"version":3,"sources":["ListaUsuarios.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2NA;AACA;AACA;AACA;AACA;AACA","file":"ListaUsuarios.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div class=\"employee-list\">\r\n        <cv-data-table\r\n            :sortable=\"sortable\"\r\n            :columns=\"[\r\n                {\r\n                key: 'first_name',\r\n                label: this.$t('empleados.nombre')\r\n                },\r\n                {\r\n                key: 'last_name',\r\n                label: this.$t('empleados.apellido')\r\n                },\r\n                {\r\n                key: 'phone_number',\r\n                label: this.$t('empleados.telefono')\r\n                },\r\n                \r\n            ]\"\r\n            @sort=\"onSort\"\r\n            :title=\"$t('empleados.empleados_lista')\"\r\n            ref=\"table\"\r\n            :pagination=\"{ numberOfItems: usuarios.length, pageSizes: [10, 15, 20, 25, usuarios.length] }\" @pagination=\"actionOnPagination\"\r\n        >\r\n            <template v-if=\"true\" slot=\"actions\">\r\n                <cv-button small @click=\"nuevoUsuario\">{{$t(\"empleados.add\")}}</cv-button>\r\n            </template>\r\n            <template v-if=\"use_batchActions\" slot=\"batch-actions\">\r\n                <cv-button @click=\"onBatchAction1\">\r\n                    {{$t(\"empleados.eliminar\")}}\r\n                    <TrashCan32 class=\"bx--btn__icon\" />\r\n                </cv-button>\r\n                <cv-button @click=\"editarUsuario\">\r\n                    {{$t(\"empleados.editar\")}}\r\n                    <Edit32 class=\"bx--btn__icon\" />\r\n                </cv-button>\r\n                <cv-button @click=\"onBatchAction3\" v-if=\"false\">\r\n                    Descargar\r\n                    <Download16 class=\"bx--btn__icon\" />\r\n                </cv-button>\r\n            </template>\r\n            <template slot=\"data\">\r\n                <cv-data-table-row\r\n                    v-for=\"usuario in usuarios.slice(start, start+length)\"\r\n                    :key=\"`${usuario.id}`\"\r\n                    :value=\"`${usuario.id}`\"\r\n                    :aria-label-for-batch-checkbox=\"`Custom aria label for row ${usuario.id} batch`\"\r\n                >\r\n                    \r\n                    <cv-data-table-cell>{{usuario.first_name}}</cv-data-table-cell>\r\n                    <cv-data-table-cell>{{usuario.last_name}}</cv-data-table-cell>\r\n                    <cv-data-table-cell>{{usuario.phone_number}}</cv-data-table-cell>\r\n                </cv-data-table-row>\r\n            </template>\r\n        </cv-data-table>\r\n        <EditarUser ref=\"modal\" :userSeleccionado=\"userSeleccionado\" />\r\n        <Alertas :tituloAlert=\"mensajeAlerta\" ref=\"alerta\" />\r\n        <AlertaGeneral ref=\"alertaGeneral\" :tituloAlert=\"mensajeAlerta\" :tipoAlert=\"tipoAlerta\" />\r\n        <cv-modal\r\n        ref=\"alerta_eliminar\"\r\n        kind=\"danger\"\r\n        :visible=\"visibleAlertaEliminar\"\r\n        @primary-click=\"eliminarUsuario\">\r\n            <template slot=\"label\">{{$t(\"empleados.seguro\")}}</template>\r\n            <template slot=\"title\">{{$t(\"empleados.eliminar\")}}</template>\r\n            <template slot=\"content\">\r\n            <p>{{$t(\"empleados.seguro_user_del\")}}</p>\r\n            </template>\r\n            <template slot=\"secondary-button\">{{$t(\"empleados.cancelar\")}}</template>\r\n            <template slot=\"primary-button\">{{$t(\"empleados.eliminar\")}}</template>\r\n        </cv-modal>\r\n    </div>\r\n</template> \r\n<script>\r\nimport axios from \"axios\";\r\n//Componentes internos\r\nimport Alertas from \"../components/Alertas.vue\";\r\nimport EditarUser from \"../components/EditarUser.vue\";\r\nimport AlertaGeneral from \"../components/AlertaGeneral\";\r\n\r\nexport default {\r\n    name: \"ListaUsuarios\",\r\n    props: {},\r\n    components: { Alertas,EditarUser, AlertaGeneral },\r\n    data() {\r\n        return {\r\n            sortable: false,\r\n            start: 0,\r\n            length: 10,\r\n            columns3: [\r\n                {\r\n                key: \"first_name\",\r\n                label: this.$t('empleados.nombre')\r\n                },\r\n                {\r\n                key: \"last_name\",\r\n                label: this.$t('empleados.apellido')\r\n                },\r\n                {\r\n                key: \"phone_number\",\r\n                label: this.$t('empleados.telefono')\r\n                },\r\n                \r\n            ],\r\n            usuarios: [],\r\n            basicPagination: false,\r\n            use_batchActions: true,\r\n            hasExpandingRows: false,\r\n            use_slottedData: true,\r\n            visibleAlertaEliminar: false\r\n        };\r\n    },\r\n    methods: {\r\n        showAlert(){\r\n            this.mensajeAlerta = this.$t('empleados.desarrollo')\r\n            this.tipoAlerta = 'info'\r\n            this.$refs.alertaGeneral.verAlerta()\r\n        },\r\n        actionOnPagination(ev){\r\n            this.start = ev.start-1\r\n            this.length = ev.length\r\n        },\r\n        getUsuariosEmpresa(idEmpresa){\r\n            const path = `${this.$apiURL}/profiles_enterprises/${idEmpresa}/`;\r\n            axios.defaults.headers.common['Authorization'] = \"Bearer \"+sessionStorage.getItem(\"apiAccess\")\r\n            axios\r\n            .get(path)\r\n            .then(response => {\r\n                this.usuarios =  response.data\r\n            })\r\n        },\r\n        editarUsuario(){\r\n            const rowSeleccionado = this.$refs.table.selectedRows;\r\n            if (rowSeleccionado.length > 1) {\r\n                this.mensajeAlerta = `${this.$t('empleados.un_user_selec')}`;\r\n                this.$refs.alerta.verAlerta()\r\n            } else {\r\n                this.userSeleccionado = rowSeleccionado[0]\r\n                this.$refs.modal.openModal(this.userSeleccionado)\r\n            }\r\n        },\r\n        nuevoUsuario(){\r\n            this.$refs.modal.openModal()\r\n        },\r\n        onBatchAction1(){\r\n            this.$refs.alerta_eliminar.dataVisible = true\r\n            console.warn(this.$refs.alerta_eliminar.dataVisible)\r\n        },\r\n        eliminarUsuario(){\r\n            const rowSeleccionado = this.$refs.table.selectedRows\r\n            let flag = false\r\n            rowSeleccionado.forEach(element => {\r\n                /*\r\n                    1. Buscamos por el usuario y sacamos el campo `user`\r\n                    2. Eliminamos el perfil\r\n                    3. Desabilitamos el usuario \r\n                    \r\n                */\r\n                \r\n                const path = `${this.$apiURL}/profiles/${element}/`\r\n                axios\r\n                .get(path)\r\n                .then(response => {\r\n                    const user = response.data.user;\r\n                    axios\r\n                    .delete(`${this.$apiURL}/profiles/${element}/`)\r\n                    .then(() =>{\r\n                        /*\r\n                        axios\r\n                        .put(`${this.$apiURL}/permisos/${user}/`, {\r\n                            is_active: false\r\n                        })\r\n                        .then(() =>{\r\n                            this.getUsuariosEmpresa(this.$route.query.enterprise);\r\n                        })\r\n                        */\r\n                        axios\r\n                        .delete(`${this.$apiURL}/permisos/${user}/`)\r\n                        .then(() =>{\r\n                            const enterprise_id_ = (this.$route.query.enterprise) ? this.$route.query.enterprise : (this.$route.query.cooperative) ? this.$route.query.cooperative : ''\r\n                            this.getUsuariosEmpresa(enterprise_id_);\r\n                        })\r\n                    })\r\n                })\r\n                .catch(response =>{\r\n                    flag = true\r\n                    console.log(response.error)\r\n                });\r\n            });\r\n            if(flag){\r\n                console.error('error')\r\n                this.mensajeAlerta = `${this.$t('empleados.user_error')}`;\r\n                this.$refs.alerta.verAlerta()\r\n            }else{\r\n                this.$refs.alerta_eliminar.hide()\r\n            }\r\n        },\r\n    },\r\n    mounted() {\r\n        const path_lang = `${this.$apiURL}/profiledata/${this.$session.get('user')}/`;\r\n        axios.defaults.headers.common['Authorization'] = \"Bearer \"+sessionStorage.getItem(\"apiAccess\")\r\n        axios\r\n        .get(path_lang)\r\n        .then(response =>{\r\n            this.$root.$i18n.locale = response.data.language\r\n        })\r\n    },\r\n    created() {\r\n        const path_lang = `${this.$apiURL}/profiledata/${this.$session.get('user')}/`;\r\n        axios.defaults.headers.common['Authorization'] = \"Bearer \"+sessionStorage.getItem(\"apiAccess\")\r\n        axios\r\n        .get(path_lang)\r\n        .then(response =>{\r\n            this.$root.$i18n.locale = response.data.language\r\n        })\r\n    }\r\n};\r\n</script> \r\n<style scoped>\r\n    .bx--modal-content{\r\n        width: 100%;\r\n        height: 100%!important;\r\n        overflow: initial!important;\r\n        overflow-y: initial;\r\n    }\r\n</style>"]}]}