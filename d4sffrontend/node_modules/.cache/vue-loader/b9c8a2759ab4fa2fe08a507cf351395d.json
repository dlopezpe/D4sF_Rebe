{"remainingRequest":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\src\\components\\importParcels\\InportParcelsKMLComponent.vue?vue&type=template&id=bddc45c8&scoped=true&","dependencies":[{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\src\\components\\importParcels\\InportParcelsKMLComponent.vue","mtime":1675070139801},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}