{"remainingRequest":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\src\\views\\Board.vue?vue&type=template&id=188e5bc8&","dependencies":[{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\src\\views\\Board.vue","mtime":1709553265809},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJkaXYiLAogICAgWwogICAgICBfYygKICAgICAgICAiY3YtaGVhZGVyIiwKICAgICAgICB7IGF0dHJzOiB7ICJhcmlhLWxhYmVsIjogIkNhcmJvbiBoZWFkZXIiLCBpZDogInRvcC1tZW51IiB9IH0sCiAgICAgICAgWwogICAgICAgICAgX2MoImN2LWhlYWRlci1tZW51LWJ1dHRvbiIsIHsKICAgICAgICAgICAgYXR0cnM6IHsgImFyaWEtbGFiZWwiOiAiSGVhZGVyIG1lbnUiLCAiYXJpYS1jb250cm9scyI6ICJzaWRlLW5hdiIgfSwKICAgICAgICAgIH0pLAogICAgICAgICAgX2MoImN2LXNraXAtdG8tY29udGVudCIsIHsgYXR0cnM6IHsgaHJlZjogIiNtYWluLWNvbnRlbnQiIH0gfSksCiAgICAgICAgICBfYygiY3YtaGVhZGVyLW5hbWUiLCB7IGF0dHJzOiB7IHByZWZpeDogIiIsIHRvOiAiLyIgfSB9LCBbCiAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgIGFsdDogIlZ1ZSBsb2dvIiwKICAgICAgICAgICAgICAgIHNyYzogcmVxdWlyZSgiLi4vYXNzZXRzL2xvZ28tY2FiZWNlcmEucG5nIiksCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSksCiAgICAgICAgICBdKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiY3YtaGVhZGVyLW5hdiIsCiAgICAgICAgICAgIHsgYXR0cnM6IHsgImFyaWEtbGFiZWwiOiAiQ2FyYm9uIG5hdiIgfSB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoImN2LWhlYWRlci1tZW51LWl0ZW0iLCB7IGF0dHJzOiB7IHRvOiAiL21hcCIgfSB9LCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS4kdCgiYXBwLmRhc2hib2FyZCIpKSksCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX3ZtLmlzX3N1cGVydXNlciB8fCBfdm0uaXNfc3lzdGVtYWRtaW4gfHwgX3ZtLmlzX2VudGVycHJpc2VhZG1pbgogICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAiY3YtaGVhZGVyLW1lbnUiLAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICJhcmlhLWxhYmVsIjogX3ZtLiR0KCJhcHAuYWRtaW5pc3RyYWNpb24iKSwKICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6IF92bS4kdCgiYXBwLmFkbWluaXN0cmFjaW9uIiksCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX3ZtLmlzX3N1cGVydXNlciB8fCBfdm0uaXNfc3lzdGVtYWRtaW4KICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJjdi1oZWFkZXItbWVudS1pdGVtIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgdG86ICIvYWRtaW4tZW50ZXJwcmlzZXMiIH0gfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhfdm0uJHQoImFwcC5hZG1pbmlzdHJhY2lvbl9lbXByZXNhcyIpKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgICAgICAgIF92bS5pc19zdXBlcnVzZXIgfHwgX3ZtLmlzX3N5c3RlbWFkbWluCiAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiY3YtaGVhZGVyLW1lbnUtaXRlbSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IHRvOiAiL2FkbWluLXVzZXJzIiB9IH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoX3ZtLiR0KCJhcHAuYWRtaW5pc3RyYWNpb25fdXN1YXJpb3MiKSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLmlzX2VudGVycHJpc2VhZG1pbiAmJiAhX3ZtLmlzX2Nvb3BfdXNlcgogICAgICAgICAgICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgImN2LWhlYWRlci1tZW51LWl0ZW0iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyB0bzogX3ZtLmN1c3RvbUxpbmtFbnRlcnByaXNlIH0gfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhfdm0uJHQoImFwcC5hZG1pbmlzdHJhY2lvbl9lbXByZXNhcyIpKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uaXNfZW50ZXJwcmlzZWFkbWluICYmIF92bS5pc19jb29wX3VzZXIKICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJjdi1oZWFkZXItbWVudS1pdGVtIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgdG86IF92bS5jdXN0b21MaW5rQ29vcCB9IH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHQoImFwcC5hZG1pbmlzdHJhY2lvbl9jb29wZXJhdGl2YXMiKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICAgICAgICBfdm0uaXNfc3VwZXJ1c2VyIHx8IF92bS5pc19zeXN0ZW1hZG1pbgogICAgICAgICAgICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgImN2LWhlYWRlci1tZW51LWl0ZW0iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyB0bzogIi9hZG1pbi1jb29wZXJhdGl2ZXMiIH0gfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kdCgiYXBwLmFkbWluaXN0cmFjaW9uX2Nvb3BlcmF0aXZhcyIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICBfdm0uaXNfc3VwZXJ1c2VyCiAgICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAgICJjdi1oZWFkZXItbWVudSIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgImFyaWEtbGFiZWwiOiAiU3VwZXJBZG0gQWNjaW9uZXMiLAogICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogIlN1cGVyQWRtIEFjY2lvbmVzIiwKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uaXNfc3VwZXJ1c2VyCiAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiY3YtaGVhZGVyLW1lbnUtaXRlbSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IHRvOiAiL2ltcG9ydHBhcmNlbHNmcm9tZmlsZSIgfSB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiSW1wb3J0YXIgUGFyY2VsYXMgZGVzZGUgQXJjaGl2byIpXQogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgICAgICAgIF92bS5pc19zdXBlcnVzZXIKICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJjdi1oZWFkZXItbWVudS1pdGVtIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgdG86ICIvaW1wb3J0cGFyY2Vsc2Zyb21maWxlS01MIiB9IH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCJJbXBvcnRhciBQYXJjZWxhcyBkZXNkZSBBcmNoaXZvIEtNTC9LTVoiKV0KICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICAgICAgICBfdm0uaXNfc3VwZXJ1c2VyCiAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiY3YtaGVhZGVyLW1lbnUtaXRlbSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IHRvOiAiL2ltcG9ydHBhcmNlbHNIaXRmcm9tZmlsZUtNTCIgfSB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIkltcG9ydGFyIFBhcmNlbGFzIGRlc2RlIEFyY2hpdm8gS01ML0tNWiAoZW1wcmVzYSBIaXQpIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgICAgICAgIF92bS5pc19zdXBlcnVzZXIKICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJjdi1oZWFkZXItbWVudS1pdGVtIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgdG86ICIvaW1wb3J0cGFyY2Vsc2Zyb21HZW9KU09OIiB9IH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCJJbXBvcnRhciBQYXJjZWxhcyBkZXNkZSBBcmNoaXZvIEdlb0pTT04iKV0KICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICAgICAgICBfdm0uaXNfc3VwZXJ1c2VyCiAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiY3YtaGVhZGVyLW1lbnUtaXRlbSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IHRvOiAiL3BhcmNlbHN0b3NlbnQiIH0gfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIlBhcmNlbGFzIDIgU2VudGluZWwiKV0KICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICAgICAgICBfdm0uaXNfc3VwZXJ1c2VyCiAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiY3YtaGVhZGVyLW1lbnUtaXRlbSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IHRvOiAiL3NlbnRpbmVsaW5zdGFuY2VzcmVmcmVzaCIgfSB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiUmVmcmVzaCBJbnN0YW5jZXMgUGFyY2VscyIpXQogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgICAgICAgIF92bS5pc19zdXBlcnVzZXIKICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJjdi1oZWFkZXItbWVudS1pdGVtIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgdG86ICIvZ2VuZ3JhZmljb3NuZXciIH0gfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIk51ZXZvIEdlbmVyYWRvciBkZSBHcsOhZmljb3MiKV0KICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICAgICAgICBfdm0uaXNfc3VwZXJ1c2VyCiAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiY3YtaGVhZGVyLW1lbnUtaXRlbSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IHRvOiAiL2dlbmdyYWZpY29zYW50ZXJpb3Jlc25ldyIgfSB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiTnVldm8gR3LDoWZpY29zIEFudGVyaW9yZXMiKV0KICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICAgICAgICBfdm0uaXNfc3VwZXJ1c2VyCiAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiY3YtaGVhZGVyLW1lbnUtaXRlbSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IHRvOiAiL3BhcmNlbHN0b2NoZWNraGFzIiB9IH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCJDb21wcm9iYXIgSGFzIFBhcmNlbGFzIildCiAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgICAgICAgICAgX3ZtLmlzX3N1cGVydXNlcgogICAgICAgICAgICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgImN2LWhlYWRlci1tZW51LWl0ZW0iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyB0bzogIi9wYXJjZWxzdG9jaGVja2hhcyIgfSB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiSW1wb3J0YXIgUGFyY2VsYXMgZGVzZGUgQXJjaGl2byIpXQogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgICAgICAgIF92bS5pc19zdXBlcnVzZXIKICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJjdi1oZWFkZXItbWVudS1pdGVtIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgdG86ICIvaW1wb3J0Y2FtcGFuYWZyb21maWxlIiB9IH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCJJbXBvcnRhciBDYW1wYcOxYSBkZXNkZSBBcmNoaXZvIildCiAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImN2LWhlYWRlci1tZW51IiwKICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgImFyaWEtbGFiZWwiOiAiTW9uaXRvciIsIHRpdGxlOiAiTW9uaXRvciIgfSB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygiY3YtaGVhZGVyLW1lbnUtaXRlbSIsIHsgYXR0cnM6IHsgdG86ICIvbW9uaXRvciIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJFdm9sdWNpw7NuIGRlIGN1bHRpdm8gKE1vbml0b3IpIiksCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiY3YtaGVhZGVyLW1lbnUtaXRlbSIsCiAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyB0bzogIi9hY3R1YWxpemFyTW9uaXRvciIgfSB9LAogICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIkFjdHVhbGl6YXIgTW9uaXRvciIpXQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF92bS5pc19zdXBlcnVzZXIgfHwgX3ZtLmlzX3N5c3RlbWFkbWluIHx8IF92bS5pc19lbnRlcnByaXNlYWRtaW4KICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgImN2LWhlYWRlci1tZW51IiwKICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7ICJhcmlhLWxhYmVsIjogIkluZm9ybWVzIiwgdGl0bGU6ICJJbmZvcm1lcyIgfSB9LAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5pc19zdXBlcnVzZXIgfHwKICAgICAgICAgICAgICAgICAgICAgIF92bS5pc19zeXN0ZW1hZG1pbiB8fAogICAgICAgICAgICAgICAgICAgICAgX3ZtLmlzX2VudGVycHJpc2VhZG1pbgogICAgICAgICAgICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgImN2LWhlYWRlci1tZW51LWl0ZW0iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyB0bzogIi9nZW5ncmFmaWNvc25ldyIgfSB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiR2VuZXJhciBJbmZvcm1lIildCiAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgICAgICAgICAgX3ZtLmlzX3N1cGVydXNlciB8fAogICAgICAgICAgICAgICAgICAgICAgX3ZtLmlzX3N5c3RlbWFkbWluIHx8CiAgICAgICAgICAgICAgICAgICAgICBfdm0uaXNfZW50ZXJwcmlzZWFkbWluCiAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiY3YtaGVhZGVyLW1lbnUtaXRlbSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IHRvOiAiL2dlbmdyYWZpY29zYW50ZXJpb3Jlc25ldyIgfSB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiSW5mb3JtZXMgQW50ZXJpb3JlcyIpXQogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAidGVtcGxhdGUiLAogICAgICAgICAgICB7IHNsb3Q6ICJoZWFkZXItZ2xvYmFsIiB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiY3YtaGVhZGVyLWdsb2JhbC1hY3Rpb24iLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICJhcmlhLWxhYmVsIjogIlVzZXIgYXZhdGFyIiwKICAgICAgICAgICAgICAgICAgICB0aXRsZTogX3ZtLiR0KCJhcHAucGVyZmlsIiksCiAgICAgICAgICAgICAgICAgICAgImFyaWEtY29udHJvbHMiOiAidXNlci1wYW5lbCIsCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0uZWRpdGFyUGVyZmlsIH0sCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgW19jKCJVc2VyQXZhdGFyRmlsbGVkQWx0MjAiKV0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJjdi1oZWFkZXItZ2xvYmFsLWFjdGlvbiIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgImFyaWEtbGFiZWwiOiAiTG9nb3V0IiwKICAgICAgICAgICAgICAgICAgICB0aXRsZTogX3ZtLiR0KCJhcHAuZGVzY29uZWN0IiksCiAgICAgICAgICAgICAgICAgICAgImFyaWEtY29udHJvbHMiOiAidXNlci1wYW5lbCIsCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0ubG9nT3V0IH0sCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgW19jKCJMb2dvdXQyMCIpXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApLAogICAgICAgICAgICBdLAogICAgICAgICAgICAxCiAgICAgICAgICApLAogICAgICAgIF0sCiAgICAgICAgMgogICAgICApLAogICAgICBfYygiRWRpdGFyUGVyZmlsIiwgeyByZWY6ICJlZGl0YXJQZXJmaWwiIH0pLAogICAgXSwKICAgIDEKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}