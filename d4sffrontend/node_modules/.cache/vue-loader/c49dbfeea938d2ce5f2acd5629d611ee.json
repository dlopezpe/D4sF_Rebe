{"remainingRequest":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\src\\components\\monitor\\tableColors.vue?vue&type=template&id=7dbc916e&","dependencies":[{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\src\\components\\monitor\\tableColors.vue","mtime":1656438009501},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXY+CiAgICA8aDQ+e3skdCgiZ3JhZmljb3MudGFibGFfY29sb3JlcyIpfX0gPGltZyBzcmM9Ii4uLy4uL2Fzc2V0cy9jcm9wLWhlYWx0aC5zdmciIHN0eWxlPSJ3aWR0aDogMjBweDsiPjwvaDQ+CiAgICA8YnI+CiAgICA8Y3YtZGF0YS10YWJsZQogICAgcmVmPSJ0YWJsZSI+CiAgICAgICAgPHRlbXBsYXRlIHNsb3Q9ImhlYWRpbmdzIj4KICAgICAgICAgICAgPGN2LWRhdGEtdGFibGUtaGVhZGluZyA6aGVhZGluZz0iJHQoJ2FkbWluRW50ZXJwcmlzZS5ub21icmUnKSIvPgoKCiAgICAgICAgICAgIDxjdi1kYXRhLXRhYmxlLWhlYWRpbmcgOmhlYWRpbmc9IiR0KCdncmFmaWNvcy5yb2pvc19hbHRvcycpIi8+CiAgICAgICAgICAgIDxjdi1kYXRhLXRhYmxlLWhlYWRpbmcgOmhlYWRpbmc9IiR0KCdncmFmaWNvcy5yb2pvc19tZWRpb3MnKSIvPgogICAgICAgICAgICA8Y3YtZGF0YS10YWJsZS1oZWFkaW5nIDpoZWFkaW5nPSIkdCgnZ3JhZmljb3Mucm9qb3NfYmFqb3MnKSIvPgoKICAgICAgICAgICAgPGN2LWRhdGEtdGFibGUtaGVhZGluZyA6aGVhZGluZz0iJHQoJ2dyYWZpY29zLmFtYXJpbGxvc19hbHRvcycpIi8+CiAgICAgICAgICAgIDxjdi1kYXRhLXRhYmxlLWhlYWRpbmcgOmhlYWRpbmc9IiR0KCdncmFmaWNvcy5hbWFyaWxsb3NfbWVkaW9zJykiLz4KICAgICAgICAgICAgPGN2LWRhdGEtdGFibGUtaGVhZGluZyA6aGVhZGluZz0iJHQoJ2dyYWZpY29zLmFtYXJpbGxvc19iYWpvcycpIi8+CgogICAgICAgICAgICA8Y3YtZGF0YS10YWJsZS1oZWFkaW5nIDpoZWFkaW5nPSIkdCgnZ3JhZmljb3MuYXp1bGVzX2FsdG9zJykiLz4KICAgICAgICAgICAgPGN2LWRhdGEtdGFibGUtaGVhZGluZyA6aGVhZGluZz0iJHQoJ2dyYWZpY29zLmF6dWxlc19tZWRpb3MnKSIvPgogICAgICAgICAgICA8Y3YtZGF0YS10YWJsZS1oZWFkaW5nIDpoZWFkaW5nPSIkdCgnZ3JhZmljb3MuYXp1bGVzX2Jham9zJykiLz4KCiAgICAgICAgICAgIDxjdi1kYXRhLXRhYmxlLWhlYWRpbmcgOmhlYWRpbmc9IiR0KCdncmFmaWNvcy52ZXJkZXNfYWx0b3MnKSIvPgogICAgICAgICAgICA8Y3YtZGF0YS10YWJsZS1oZWFkaW5nIDpoZWFkaW5nPSIkdCgnZ3JhZmljb3MudmVyZGVzX21lZGlvcycpIi8+CiAgICAgICAgICAgIDxjdi1kYXRhLXRhYmxlLWhlYWRpbmcgOmhlYWRpbmc9IiR0KCdncmFmaWNvcy5jbG91ZHMnKSIvPgoKICAgICAgICAgICAgPGN2LWRhdGEtdGFibGUtaGVhZGluZyA6aGVhZGluZz0iJHQoJ2dyYWZpY29zLmltYWdlbicpIi8+CiAgICAgICAgICAgIDxjdi1kYXRhLXRhYmxlLWhlYWRpbmcgOmhlYWRpbmc9IiR0KCdncmFmaWNvcy5pbWFnZW5DbG91ZHMnKSIvPgogICAgICAgICAgICA8Y3YtZGF0YS10YWJsZS1oZWFkaW5nIDpoZWFkaW5nPSIkdCgnZ3JhZmljb3MuaW1hZ2VuVHJ1ZUNvbG9yJykiLz4KCiAgICAgICAgICAgIDxjdi1kYXRhLXRhYmxlLWhlYWRpbmcgOmhlYWRpbmc9IiR0KCdncmFmaWNvcy5wbGFudGFzJykiLz4KICAgICAgICAgICAgPGN2LWRhdGEtdGFibGUtaGVhZGluZyA6aGVhZGluZz0iJHQoJ2dyYWZpY29zLmNvc2VjaGEnKSIvPgogICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgPHRlbXBsYXRlIHNsb3Q9ImRhdGEiPgogICAgICAgICAgICA8Y3YtZGF0YS10YWJsZS1yb3cgIHYtZm9yPSJkYXRvIGluIGRhdG9zIiA6dmFsdWU9IlN0cmluZyhkYXRvLm5hbWUpIiB2LWJpbmQ6a2V5PSJkYXRvIj4KICAgICAgICAgICAgICAgIDxjdi1kYXRhLXRhYmxlLWNlbGw+CiAgICAgICAgICAgICAgICAgICAge3tkYXRvLm5hbWV9fQogICAgICAgICAgICAgICAgPC9jdi1kYXRhLXRhYmxlLWNlbGw+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxjdi1kYXRhLXRhYmxlLWNlbGw+CiAgICAgICAgICAgICAgICAgICAge3tkYXRvLnBpeF9yb2pvX2FsdG9zX3BvcmNlbnQgKyBgJWB9fQogICAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9ImRhdG8ucGl4X3Jvam9fYWx0b3NfYXJlYV9wb3JjZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAge3siLSJ9fQogICAgICAgICAgICAgICAgICAgICAgICB7e01hdGgucm91bmQoKGRhdG8ucGl4X3Jvam9fYWx0b3NfYXJlYV9wb3JjZW50ICsgTnVtYmVyLkVQU0lMT04pICogMTAwKSAvIDEwMCArICdIYSd9fQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8YnI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gOnN0eWxlPSJgd2lkdGg6ICR7KGRhdG8ucGl4X3Jvam9fYWx0b3NfcG9yY2VudCA+IDEuMDApID8gZGF0by5waXhfcm9qb19hbHRvc19wb3JjZW50IDogMn0lOyBoZWlnaHQ6IDEwcHg7IGJhY2tncm91bmQ6ICNmZTAxMDM7ZGlzcGxheTogaW5saW5lLWJsb2NrO2AiPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvY3YtZGF0YS10YWJsZS1jZWxsPgogICAgICAgICAgICAgICAgPGN2LWRhdGEtdGFibGUtY2VsbD4KICAgICAgICAgICAgICAgICAgICB7e2RhdG8ucGl4X3Jvam9fbWVkaW9zX3BvcmNlbnQgKyBgJWB9fQogICAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9ImRhdG8ucGl4X3Jvam9fbWVkaW9zX2FyZWFfcG9yY2VudCI+CiAgICAgICAgICAgICAgICAgICAgICAgIHt7Ii0ifX0KICAgICAgICAgICAgICAgICAgICAgICAge3tNYXRoLnJvdW5kKChkYXRvLnBpeF9yb2pvX21lZGlvc19hcmVhX3BvcmNlbnQgKyBOdW1iZXIuRVBTSUxPTikgKiAxMDApIC8gMTAwICsgJ0hhJ319CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxicj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiA6c3R5bGU9ImB3aWR0aDogJHsoZGF0by5waXhfcm9qb19tZWRpb3NfcG9yY2VudCA+IDEuMDApID8gZGF0by5waXhfcm9qb19tZWRpb3NfcG9yY2VudCA6IDJ9JTsgaGVpZ2h0OiAxMHB4OyBiYWNrZ3JvdW5kOiAjOWIwMDA0O2Rpc3BsYXk6IGlubGluZS1ibG9jaztgIj48L3NwYW4+CiAgICAgICAgICAgICAgICA8L2N2LWRhdGEtdGFibGUtY2VsbD4KICAgICAgICAgICAgICAgIDxjdi1kYXRhLXRhYmxlLWNlbGw+CiAgICAgICAgICAgICAgICAgICAge3tkYXRvLnBpeF9yb2pvX2Jham9zX3BvcmNlbnQgKyBgJWB9fQogICAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9ImRhdG8ucGl4X3Jvam9fYmFqb3NfYXJlYV9wb3JjZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAge3siLSJ9fQogICAgICAgICAgICAgICAgICAgICAgICB7e01hdGgucm91bmQoKGRhdG8ucGl4X3Jvam9fYmFqb3NfYXJlYV9wb3JjZW50ICsgTnVtYmVyLkVQU0lMT04pICogMTAwKSAvIDEwMCArICdIYSd9fQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8YnI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gOnN0eWxlPSJgd2lkdGg6ICR7KGRhdG8ucGl4X3Jvam9fYmFqb3NfcG9yY2VudCA+IDEuMDApID8gZGF0by5waXhfcm9qb19iYWpvc19wb3JjZW50IDogMn0lOyBoZWlnaHQ6IDEwcHg7IGJhY2tncm91bmQ6ICM2ODAwMDA7ZGlzcGxheTogaW5saW5lLWJsb2NrO2AiPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvY3YtZGF0YS10YWJsZS1jZWxsPgogICAgICAgICAgICAgICAgPGN2LWRhdGEtdGFibGUtY2VsbD4KICAgICAgICAgICAgICAgICAgICB7e2RhdG8ucGl4X2FtYXJpbGxvX2FsdG9zX3BvcmNlbnQgKyBgJWB9fQogICAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9ImRhdG8ucGl4X2FtYXJpbGxvX2FsdG9zX2FyZWFfcG9yY2VudCI+CiAgICAgICAgICAgICAgICAgICAgICAgIHt7Ii0ifX0KICAgICAgICAgICAgICAgICAgICAgICAge3tNYXRoLnJvdW5kKChkYXRvLnBpeF9hbWFyaWxsb19hbHRvc19hcmVhX3BvcmNlbnQgKyBOdW1iZXIuRVBTSUxPTikgKiAxMDApIC8gMTAwICsgJ0hhJ319CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxicj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiA6c3R5bGU9ImB3aWR0aDogJHsoZGF0by5waXhfYW1hcmlsbG9fYWx0b3NfcG9yY2VudCA+IDEuMDApID8gZGF0by5waXhfYW1hcmlsbG9fYWx0b3NfcG9yY2VudCA6IDJ9JTsgaGVpZ2h0OiAxMHB4OyBiYWNrZ3JvdW5kOiAjZmZmZjMzO2Rpc3BsYXk6IGlubGluZS1ibG9jaztgIj48L3NwYW4+CiAgICAgICAgICAgICAgICA8L2N2LWRhdGEtdGFibGUtY2VsbD4KICAgICAgICAgICAgICAgIDxjdi1kYXRhLXRhYmxlLWNlbGw+CiAgICAgICAgICAgICAgICAgICAge3tkYXRvLnBpeF9hbWFyaWxsb19tZWRpb3NfcG9yY2VudCArIGAlYH19CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gdi1pZj0iZGF0by5waXhfYW1hcmlsbG9fbWVkaW9zX2FyZWFfcG9yY2VudCI+CiAgICAgICAgICAgICAgICAgICAgICAgIHt7Ii0ifX0KICAgICAgICAgICAgICAgICAgICAgICAge3tNYXRoLnJvdW5kKChkYXRvLnBpeF9hbWFyaWxsb19tZWRpb3NfYXJlYV9wb3JjZW50ICsgTnVtYmVyLkVQU0lMT04pICogMTAwKSAvIDEwMCArICdIYSd9fQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8YnI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gOnN0eWxlPSJgd2lkdGg6ICR7KGRhdG8ucGl4X2FtYXJpbGxvX21lZGlvc19wb3JjZW50ID4gMS4wMCkgPyBkYXRvLnBpeF9hbWFyaWxsb19tZWRpb3NfcG9yY2VudCA6IDJ9JTsgaGVpZ2h0OiAxMHB4OyBiYWNrZ3JvdW5kOiAjY2NjYzMzO2Rpc3BsYXk6IGlubGluZS1ibG9jaztgIj48L3NwYW4+CiAgICAgICAgICAgICAgICA8L2N2LWRhdGEtdGFibGUtY2VsbD4KICAgICAgICAgICAgICAgIDxjdi1kYXRhLXRhYmxlLWNlbGw+CiAgICAgICAgICAgICAgICAgICAge3tkYXRvLnBpeF9hbWFyaWxsb19iYWpvc19wb3JjZW50ICsgYCVgfX0KICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LWlmPSJkYXRvLnBpeF9hbWFyaWxsb19iYWpvc19hcmVhX3BvcmNlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICB7eyItIn19CiAgICAgICAgICAgICAgICAgICAgICAgIHt7TWF0aC5yb3VuZCgoZGF0by5waXhfYW1hcmlsbG9fYmFqb3NfYXJlYV9wb3JjZW50ICsgTnVtYmVyLkVQU0lMT04pICogMTAwKSAvIDEwMCArICdIYSd9fQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8YnI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gOnN0eWxlPSJgd2lkdGg6ICR7KGRhdG8ucGl4X2FtYXJpbGxvX2Jham9zX3BvcmNlbnQgPiAxLjAwKSA/IGRhdG8ucGl4X2FtYXJpbGxvX2Jham9zX3BvcmNlbnQgOiAyfSU7IGhlaWdodDogMTBweDsgYmFja2dyb3VuZDogIzY2NjYwMDtkaXNwbGF5OiBpbmxpbmUtYmxvY2s7YCI+PC9zcGFuPgogICAgICAgICAgICAgICAgPC9jdi1kYXRhLXRhYmxlLWNlbGw+CiAgICAgICAgICAgICAgICA8Y3YtZGF0YS10YWJsZS1jZWxsPgogICAgICAgICAgICAgICAgICAgIHt7ZGF0by5waXhfYXp1bF9hbHRvc19wb3JjZW50ICsgYCVgfX0KICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LWlmPSJkYXRvLnBpeF9henVsX2FsdG9zX2FyZWFfcG9yY2VudCI+CiAgICAgICAgICAgICAgICAgICAgICAgIHt7Ii0ifX0KICAgICAgICAgICAgICAgICAgICAgICAge3tNYXRoLnJvdW5kKChkYXRvLnBpeF9henVsX2FsdG9zX2FyZWFfcG9yY2VudCArIE51bWJlci5FUFNJTE9OKSAqIDEwMCkgLyAxMDAgKyAnSGEnfX0KICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPGJyPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIDpzdHlsZT0iYHdpZHRoOiAkeyhkYXRvLnBpeF9henVsX2FsdG9zX3BvcmNlbnQgPiAxLjAwKSA/IGRhdG8ucGl4X2F6dWxfYWx0b3NfcG9yY2VudCA6IDJ9JTsgaGVpZ2h0OiAxMHB4OyBiYWNrZ3JvdW5kOiAjMzNmZmZmO2Rpc3BsYXk6IGlubGluZS1ibG9jaztgIj48L3NwYW4+CiAgICAgICAgICAgICAgICA8L2N2LWRhdGEtdGFibGUtY2VsbD4KICAgICAgICAgICAgICAgIDxjdi1kYXRhLXRhYmxlLWNlbGw+CiAgICAgICAgICAgICAgICAgICAge3tkYXRvLnBpeF9henVsX21lZGlvc19wb3JjZW50ICsgYCVgfX0KICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LWlmPSJkYXRvLnBpeF9henVsX21lZGlvc19hcmVhX3BvcmNlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICB7eyItIn19CiAgICAgICAgICAgICAgICAgICAgICAgIHt7TWF0aC5yb3VuZCgoZGF0by5waXhfYXp1bF9tZWRpb3NfYXJlYV9wb3JjZW50ICsgTnVtYmVyLkVQU0lMT04pICogMTAwKSAvIDEwMCArICdIYSd9fQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8YnI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gOnN0eWxlPSJgd2lkdGg6ICR7KGRhdG8ucGl4X2F6dWxfbWVkaW9zX3BvcmNlbnQgPiAxLjAwKSA/IGRhdG8ucGl4X2F6dWxfbWVkaW9zX3BvcmNlbnQgOiAyfSU7IGhlaWdodDogMTBweDsgYmFja2dyb3VuZDogIzMzY2NjYztkaXNwbGF5OiBpbmxpbmUtYmxvY2s7YCI+PC9zcGFuPgogICAgICAgICAgICAgICAgPC9jdi1kYXRhLXRhYmxlLWNlbGw+CiAgICAgICAgICAgICAgICA8Y3YtZGF0YS10YWJsZS1jZWxsPgogICAgICAgICAgICAgICAgICAgIHt7ZGF0by5waXhfYXp1bF9iYWpvc19wb3JjZW50ICsgYCVgfX0KICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LWlmPSJkYXRvLnBpeF9henVsX2Jham9zX2FyZWFfcG9yY2VudCI+CiAgICAgICAgICAgICAgICAgICAgICAgIHt7Ii0ifX0KICAgICAgICAgICAgICAgICAgICAgICAge3tNYXRoLnJvdW5kKChkYXRvLnBpeF9henVsX2Jham9zX2FyZWFfcG9yY2VudCArIE51bWJlci5FUFNJTE9OKSAqIDEwMCkgLyAxMDAgKyAnSGEnfX0KICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPGJyPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIDpzdHlsZT0iYHdpZHRoOiAkeyhkYXRvLnBpeF9henVsX2Jham9zX3BvcmNlbnQgPiAxLjAwKSA/IGRhdG8ucGl4X2F6dWxfYmFqb3NfcG9yY2VudCA6IDJ9JTsgaGVpZ2h0OiAxMHB4OyBiYWNrZ3JvdW5kOiAjMDA2NjY2O2Rpc3BsYXk6IGlubGluZS1ibG9jaztgIj48L3NwYW4+CiAgICAgICAgICAgICAgICA8L2N2LWRhdGEtdGFibGUtY2VsbD4KICAgICAgICAgICAgICAgIDxjdi1kYXRhLXRhYmxlLWNlbGw+CiAgICAgICAgICAgICAgICAgICAge3tkYXRvLnBpeF92ZXJkZV9hbHRvc19wb3JjZW50ICsgYCVgfX0KICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LWlmPSJkYXRvLnBpeF92ZXJkZV9hbHRvc19hcmVhX3BvcmNlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICB7eyItIn19CiAgICAgICAgICAgICAgICAgICAgICAgIHt7TWF0aC5yb3VuZCgoZGF0by5waXhfdmVyZGVfYWx0b3NfYXJlYV9wb3JjZW50ICsgTnVtYmVyLkVQU0lMT04pICogMTAwKSAvIDEwMCArICdIYSd9fQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8YnI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gOnN0eWxlPSJgd2lkdGg6ICR7KGRhdG8ucGl4X3ZlcmRlX2FsdG9zX3BvcmNlbnQgPiAxLjAwKSA/IGRhdG8ucGl4X3ZlcmRlX2FsdG9zX3BvcmNlbnQgOiAyfSU7IGhlaWdodDogMTBweDsgYmFja2dyb3VuZDogIzMzZmYzMztkaXNwbGF5OiBpbmxpbmUtYmxvY2s7YCI+PC9zcGFuPgogICAgICAgICAgICAgICAgPC9jdi1kYXRhLXRhYmxlLWNlbGw+CiAgICAgICAgICAgICAgICA8Y3YtZGF0YS10YWJsZS1jZWxsPgogICAgICAgICAgICAgICAgICAgIHt7ZGF0by5waXhfdmVyZGVfbWVkaW9zX3BvcmNlbnQgKyBgJWB9fQogICAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9ImRhdG8ucGl4X3ZlcmRlX21lZGlvc19hcmVhX3BvcmNlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICB7eyItIn19CiAgICAgICAgICAgICAgICAgICAgICAgIHt7TWF0aC5yb3VuZCgoZGF0by5waXhfdmVyZGVfbWVkaW9zX2FyZWFfcG9yY2VudCArIE51bWJlci5FUFNJTE9OKSAqIDEwMCkgLyAxMDAgKyAnSGEnfX0KICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPGJyPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIDpzdHlsZT0iYHdpZHRoOiAkeyhkYXRvLnBpeF92ZXJkZV9tZWRpb3NfcG9yY2VudCA+IDEuMDApID8gZGF0by5waXhfdmVyZGVfbWVkaW9zX3BvcmNlbnQgOiAyfSU7IGhlaWdodDogMTBweDsgYmFja2dyb3VuZDogIzMzY2MzMztkaXNwbGF5OiBpbmxpbmUtYmxvY2s7YCI+PC9zcGFuPgogICAgICAgICAgICAgICAgPC9jdi1kYXRhLXRhYmxlLWNlbGw+CiAgICAgICAgICAgICAgICA8Y3YtZGF0YS10YWJsZS1jZWxsPgogICAgICAgICAgICAgICAgICAgIHt7ZGF0by5udWJlc19wb3JjZW50ICsgYCVgfX0KICAgICAgICAgICAgICAgICAgICA8c3BhbiA6c3R5bGU9ImB3aWR0aDogJHsoZGF0by5udWJlc19wb3JjZW50ID4gMS4wMCkgPyBkYXRvLm51YmVzX3BvcmNlbnQgOiAyfSU7IGhlaWdodDogMTBweDsgYmFja2dyb3VuZDogI2Y5MDRiYjtkaXNwbGF5OiBpbmxpbmUtYmxvY2s7YCI+PC9zcGFuPgogICAgICAgICAgICAgICAgPC9jdi1kYXRhLXRhYmxlLWNlbGw+CiAgICAgICAgICAgICAgICA8Y3YtZGF0YS10YWJsZS1jZWxsPgogICAgICAgICAgICAgICAgICAgIDxpbWcgYWx0PSIiIGlkPSIiICA6c3JjPSJgaHR0cHM6Ly9tb25pdG9yZDRzZi5kZXZzbWIuZXMvYCtkYXRvLmltYWdlIiBzdHlsZT0id2lkdGg6IDEwMHB4OyI+CiAgICAgICAgICAgICAgICA8L2N2LWRhdGEtdGFibGUtY2VsbD4KICAgICAgICAgICAgICAgIDxjdi1kYXRhLXRhYmxlLWNlbGw+CiAgICAgICAgICAgICAgICAgICAgPGltZyBhbHQ9IiIgaWQ9IiIgIDpzcmM9ImBodHRwczovL21vbml0b3JkNHNmLmRldnNtYi5lcy9gK2RhdG8ubnViZXNJbWFnZSIgc3R5bGU9IndpZHRoOiA4MHB4OyI+CiAgICAgICAgICAgICAgICA8L2N2LWRhdGEtdGFibGUtY2VsbD4KICAgICAgICAgICAgICAgIDxjdi1kYXRhLXRhYmxlLWNlbGw+CiAgICAgICAgICAgICAgICAgICAgPGltZyBhbHQ9IiIgaWQ9IiIgIDpzcmM9ImBodHRwczovL21vbml0b3JkNHNmLmRldnNtYi5lcy9gK2RhdG8udHJ1ZUNvbG9ySW1hZ2UiIHN0eWxlPSJ3aWR0aDogODBweDsiPgogICAgICAgICAgICAgICAgPC9jdi1kYXRhLXRhYmxlLWNlbGw+CgogICAgICAgICAgICAgICAgPGN2LWRhdGEtdGFibGUtY2VsbD4KICAgICAgICAgICAgICAgICAgICB7e2RhdG8ucGxhbnRhc19yZWFsZXN9fQogICAgICAgICAgICAgICAgPC9jdi1kYXRhLXRhYmxlLWNlbGw+CiAgICAgICAgICAgICAgICA8Y3YtZGF0YS10YWJsZS1jZWxsPgogICAgICAgICAgICAgICAgICAgIHt7ZGF0by5jb3NlY2hhfX0KICAgICAgICAgICAgICAgIDwvY3YtZGF0YS10YWJsZS1jZWxsPgogICAgICAgICAgICA8L2N2LWRhdGEtdGFibGUtcm93PgogICAgICAgIDwvdGVtcGxhdGU+CiAgICA8L2N2LWRhdGEtdGFibGU+CjwvZGl2Pgo="},null]}