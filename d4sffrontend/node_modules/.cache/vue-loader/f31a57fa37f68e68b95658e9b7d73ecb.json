{"remainingRequest":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\src\\components\\mapController\\ControllerPanel.vue?vue&type=style&index=0&id=03cd3151&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\src\\components\\mapController\\ControllerPanel.vue","mtime":1717087094381},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1681731155390},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1681731149151},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681731147886},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1681731148945}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiNsYXllcnNDb250cm9sZXJ7CiAgICBwb3NpdGlvbjogZml4ZWQ7CiAgICB3aWR0aDogNDUwcHg7CiAgICBwYWRkaW5nOiAxMHB4OwogICAgYmFja2dyb3VuZC1jb2xvcjogI2Y0ZjRmNDsKICAgIG1hcmdpbi10b3A6IDEwcHg7CiAgICBtYXJnaW4tbGVmdDogMTBweDsKICAgIG1heC13aWR0aDogNDgwLjZweDsKICAgIG92ZXJmbG93OiBzY3JvbGw7CiAgICBoZWlnaHQ6IGF1dG87CiAgICBtYXgtaGVpZ2h0OiA4NTBweDsKICAgIG92ZXJmbG93LXg6IGhpZGRlbjsKfQojc2VudGluZWxMYXllcnNMaXN0ewogICAgb3ZlcmZsb3cteTogYXV0bzsKICAgIGhlaWdodDogMjUwcHg7Cn0KQG1lZGlhIChtYXgtaGVpZ2h0OiA3MDBweCkgewogICAgI3NlbnRpbmVsTGF5ZXJzTGlzdHsKICAgICAgICBvdmVyZmxvdzogc2Nyb2xsOwogICAgICAgIGhlaWdodDogMjgwcHg7CiAgICB9Cn0KCkBtZWRpYSAobWF4LWhlaWdodDogNzAwcHgpIHsKICAgICNzZW50aW5lbExheWVyc0xpc3R7CiAgICAgICAgb3ZlcmZsb3c6IHNjcm9sbDsKICAgICAgICBoZWlnaHQ6IDI4MHB4OwogICAgfQogICAgI2xheWVyc0NvbnRyb2xlcnsKICAgICAgICBoZWlnaHQ6IDYwMHB4OwogICAgICAgIG92ZXJmbG93LXg6IGhpZGRlbjsKICAgIH0KfQovKgpAbWVkaWEgKG1heC1oZWlnaHQ6IDgwMHB4KSB7CiAgICAjbGF5ZXJzQ29udHJvbGVyewogICAgICAgIGhlaWdodDogNjAwcHg7CiAgICAgICAgb3ZlcmZsb3cteDogaGlkZGVuOwogICAgfQoqLwo="},{"version":3,"sources":["ControllerPanel.vue"],"names":[],"mappings":";AAihBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ControllerPanel.vue","sourceRoot":"src/components/mapController","sourcesContent":["<template>\r\n    <div id=\"layersControler\" class=\"layersControler\" ref=\"layersController\">\r\n        <div>\r\n            <div class=\"bx--row\">\r\n                <div class=\"bx--col\">\r\n                    <span><ChevronSortDown20  @click=\"onclickTile2\" v-if=\"expand2\"/></span><span><ChevronSortUp20 @click=\"onclickTile2\" v-if=\"!expand2\" style=\"transform: translate(0px, 10px)\"/></span>\r\n                </div>\r\n                <div class=\"bx--col\">\r\n                    <div id=\"geolocIcon\" style=\"text-align: right;\">\r\n                        <div v-if=\"mostrarIconErrGeoloc === ''\" @click=\"cargaLocalizacionActual()\">\r\n                            <p style=\"cursor: pointer; font-size: 14px;\">Mostrar mi ubicación <img src=\"../../assets/airport-location.svg\" style=\"width: 14px; height: 14px;\"></p>\r\n                        </div>\r\n                        <div v-else-if=\"mostrarIconErrGeoloc === false\" @click=\"cargaLocalizacionActual()\">\r\n                            <p style=\"cursor: pointer; font-size: 14px;\">Para volver a localizar mi ubicación, haz click aquí <Location16 style=\"stroke: #00abff; width: 14px; height: 14px; fill: #00abff;\"/></p>\r\n                        </div>\r\n                        <div v-else-if=\"mostrarIconErrGeoloc === true\" @click=\"cargaLocalizacionActual()\">\r\n                            <p style=\"cursor: pointer; font-size: 14px;\">No temenos acceso a tu ubicación <img src=\"../../assets/location--hazard.svg\" style=\"width: 14px; height: 14px;\"></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        <div v-if=\"is_superuser || is_systemadmin || is_coop_user\">\r\n            <cv-select\r\n                theme=\"\"\r\n                :label=\"$t('map.listado_empresas')\"\r\n                :hide-label=\"false\"\r\n                :inline=\"false\"\r\n                :disabled=\"false\"\r\n                @change=\"seleccionaEmpresa\"\r\n                id=\"selectEmp\"\r\n                >\r\n                <cv-select-option disabled selected hidden>{{$t(\"map.sel_empresa\")}}</cv-select-option>\r\n                <cv-select-optgroup label=\"Todas las Empresas\" v-if=\"is_superuser || is_systemadmin\">\r\n                    <cv-select-option :value=\"`all`\" v-if=\"is_superuser || is_systemadmin\">{{$t(\"map.most_todas_empresas\")}}</cv-select-option>\r\n                    <cv-select-option v-for=\"empresa in sortedListadoEmpresas\" :value=\"String(empresa.id)\"  v-bind:key=\"empresa.id\">\r\n                        {{empresa.name}}\r\n                    </cv-select-option>\r\n                </cv-select-optgroup>\r\n                <cv-select-optgroup :label=\"`Cooperativa ${cooperativa.name}`\" v-bind:key=\"cooperativa.id\" v-for=\"cooperativa in arrCooperativas\">\r\n                    <cv-select-option :value=\"`coop_${cooperativa.id}`\">{{$t(\"map.most_todas_empresas\")}}</cv-select-option>\r\n                    <cv-select-option v-for=\"empresa in getSortedCooperativa(cooperativa).enterprises\" :value=\"String(empresa.id)\"  v-bind:key=\"empresa.id\">\r\n                        {{empresa.name}}\r\n                    </cv-select-option>\r\n                </cv-select-optgroup>\r\n            </cv-select>\r\n            <p>Actualmente mostrando las parcelas de: <strong><u><span id=\"empresa\"></span></u></strong></p>\r\n        </div>\r\n        <!--\r\n        <div id=\"sentinelLayersList\" ref=\"sentinelLayersListCollapse\">\r\n            <cv-structured-list selectable>\r\n                <template slot=\"headings\">\r\n                    <cv-structured-list-heading>{{$t(\"map.parcelas_de\")}}</cv-structured-list-heading>\r\n                </template>\r\n                <template slot=\"items\" v-for=\"enterprise in arrEnterprises\">\r\n                        {{`${enterprise.name}`}}\r\n                    <template v-if=\"enterprise.parcels\">\r\n                        <cv-structured-list-item\r\n                            v-for=\"feature in enterprise.parcels.features\"\r\n                            v-bind:key=\"feature.id\" \r\n                            name=\"group-1\"\r\n                            :value=\"String(feature.id)\"\r\n                            ref=\"listaDeParcelas\"\r\n                            @change=\"actionChangeParcels\"\r\n                        >\r\n                            <cv-structured-list-data>{{feature.properties.name}} - {{enterprise.name}}</cv-structured-list-data>\r\n                        </cv-structured-list-item>\r\n                    </template>\r\n                </template>\r\n            </cv-structured-list>  \r\n        </div>\r\n        -->\r\n        <div ref=\"sentinelLayersListCollapse\">\r\n            <cv-search :placeholder=\"`Buscar`\" @input=\"onBuscar\" ></cv-search>\r\n            <cv-structured-list-heading >Listado de Parcelas </cv-structured-list-heading>\r\n            <div id=\"sentinelLayersList\">\r\n                \r\n                <cv-structured-list selectable>\r\n                    <template slot=\"items\" v-for=\"parcel in allParcelsOfEnterprisesFilter\">\r\n                        <template>\r\n                            <cv-structured-list-item\r\n                                v-bind:key=\"parcel.id\" \r\n                                name=\"group-1\"\r\n                                :value=\"String(parcel.id)\"\r\n                                ref=\"listaDeParcelas\"\r\n                                @change=\"actionChangeParcels\"\r\n                            >\r\n                                <cv-structured-list-data>{{is_superuser ? parcel.id+' - ' : ''}}{{parcel.properties.name}} - {{getNameEnterprise(parcel.properties.enterprise_id)}}</cv-structured-list-data>\r\n                            </cv-structured-list-item>\r\n                        </template>\r\n                    </template>\r\n                </cv-structured-list>  \r\n            </div>\r\n        \r\n            <br>\r\n\r\n            <div v-if=\"this.is_superuser\">\r\n                <div class=\"bx--row\">\r\n                    <div class=\"bx--col\">\r\n                        <cv-toggle\r\n                            :checked=\"true\"\r\n                            label=\"Desbordamiento de Alerta  de Parcelas\"\r\n                            value=\"check-2\"\r\n                            :small=\"true\"\r\n                            :hide-label=\"true\"\r\n                            @change=\"actionChangedAlertSolpamientoToggle\">\r\n                            <template slot=\"text-left\">Desactivado alerta de solapamiento de Parcelas</template>\r\n                            <template slot=\"text-right\">Activado alerta de solapamiento de Parcelas</template>\r\n                        </cv-toggle>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        \r\n            <br>\r\n            <div>\r\n                <div class=\"bx--row\">\r\n                    <div class=\"bx--col\">\r\n                        <cv-toggle\r\n                            :checked=\"checkedToggleMostarTexto\"\r\n                            label=\"Desbordamiento de nombres de Parcelas\"\r\n                            value=\"check-1\"\r\n                            :small=\"true\"\r\n                            :hide-label=\"true\"\r\n                            @change=\"actionChangedToggle\">\r\n                            <template slot=\"text-left\">Desactivado desbordamiento de nombres de Parcelas</template>\r\n                            <template slot=\"text-right\">Activado desbordamiento de nombres de Parcelas</template>\r\n                        </cv-toggle>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br>\r\n            <div>\r\n                <div class=\"bx--row\">\r\n                    <div class=\"bx--col\">\r\n                        <cv-toggle\r\n                            :checked=\"false\"\r\n                            label=\"Ocultar icono de mi ubicación\"\r\n                            value=\"check-1\"\r\n                            :small=\"true\"\r\n                            :hide-label=\"false\"\r\n                            @change=\"actionChangedToggleIconoUbi\">\r\n                            <template slot=\"text-left\">No</template>\r\n                            <template slot=\"text-right\">Sí</template>\r\n                        </cv-toggle>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div id=\"sentinelLayers\">\r\n            <cv-dropdown \r\n                @change=\"actionChangeLayers\" \r\n                :label=\"$t('map.sent_layers')\">\r\n                    <cv-dropdown-item v-for=\"layer in layersSelector\" :value=\"layer.id\" v-bind:key=\"layer.id\" :selected=\"layer.id == 'AGRICULTURE'\">{{layer.title}}</cv-dropdown-item>\r\n            </cv-dropdown>\r\n        </div>\r\n        <div v-if=\"SentinelLayer == 'NDVI'\">\r\n            <label for=\"text-input-3h9mddk235a\" class=\"bx--label\">{{$t(\"map.colors\")}}</label>\r\n            <br>\r\n            <img alt=\"D4SF\" id=\"logo\" src=\"../../assets/NDVI-colores.png\" style=\"width: 100%;\">\r\n        </div>\r\n        <div v-if=\"SentinelLayer == 'MOISTURE_INDEX'\">\r\n            <label for=\"text-input-3h9mddk235a\" class=\"bx--label\">{{$t(\"map.colors\")}}</label>\r\n            <br>\r\n            <img alt=\"D4SF\" id=\"logo\" src=\"../../assets/Moisture-index-valores.png\" style=\"width: 100%;\">\r\n        </div>\r\n        <br>\r\n        <div id=\"sentinelLayers\">\r\n            <cv-button\r\n                :disabled=\"false\"\r\n                @click=\"actionClearCacheSentinel\"\r\n                size=\"small\"\r\n                style=\"margin-top: 20px\"\r\n            >\r\n            Recargar sistema\r\n            </cv-button>\r\n        </div>\r\n        <br>\r\n        <div id=\"sentinelOpacity\">\r\n            <cv-slider\r\n                :label=\"$t('map.opacidad')\"\r\n                @change=\"actionChangeOpacity\"></cv-slider>\r\n        </div>\r\n        <br>\r\n        <div id=\"sentinelDate\">\r\n            <div class=\"bx--row\">\r\n                <div class=\"bx--col\">\r\n                    <cv-date-picker\r\n                        kind=\"single\"\r\n                        :cal-options=\"calOptions\"\r\n                        @change=\"actionChangeDate\"\r\n                        :dateLabel=\"$t('map.fecha')\"\r\n                        :value=\"valueDates\"\r\n                        placeholder=\"mm/dd/yyyy\"\r\n                        ref=\"cambiosFechas\"\r\n                        style=\"width: 100%!important\"\r\n                    ></cv-date-picker>\r\n                </div>\r\n                <div class=\"bx--col\">\r\n                    <cv-button\r\n                        :disabled=\"false\"\r\n                        @click=\"actionClickDateCargaFechasSent\"\r\n                        size=\"small\"\r\n                        style=\"margin-top: 20px\"\r\n                        >\r\n                        {{$t(\"map.fechas_disponibles\")}}\r\n                        <cv-loading\r\n                        :small=\"true\"\r\n                        :active=\"isActiveLoadingFechasSent\"\r\n                        :overlay=\"false\" v-if=\"isVisibleLoadFechasSent\"></cv-loading>\r\n                    </cv-button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <br>\r\n    </div>\r\n</template>\r\n<script>\r\n//import proj4 from 'proj4'\r\n//import {polygonCenter} from '@/crudFunctions/crudEnterprise'\r\nimport {getEnterprise, getAllEnterprises, /*getAllActiveEnterprises,*/ getFechasSentinel, setParcelsForInstance} from '@/crudFunctions/crudEnterprise'//getEnterprise\r\nimport {getCooperative} from '@/crudFunctions/crudCooperativas'\r\nexport default {\r\n    name: 'ControllerPanel',\r\n    props: {\r\n        username: String,\r\n        arrEnterprises: Array,\r\n        arrCooperativas: Array,\r\n        centro: [],\r\n        layersSelector: Array,\r\n        checkedToggleMostarTexto: Boolean,\r\n        is_superuser: Boolean,\r\n        is_systemadmin: Boolean,\r\n        is_staff: Boolean,\r\n        is_enterpriseadmin: Boolean,\r\n        is_coop_user: Boolean,\r\n        mapComponent: Object,\r\n        allParcelsOfEnterprises: Array,\r\n        allParcelsOfEnterprisesFilter: Array,\r\n        SentinelLayer: String,\r\n    },\r\n    data() {\r\n        return {\r\n            listadoEmpresas: this.arrEnterprises,\r\n            calOptions: {\r\n                \"dateFormat\": \"Y-m-d\"\r\n            },\r\n            valueDates: [],\r\n            isActiveLoadingFechasSent: false,\r\n            isVisibleLoadFechasSent: false,\r\n            expand: true,\r\n            expand2: true,\r\n            erorCompaGeoloc: '',\r\n            mostrarIconErrGeoloc: '',\r\n            empresa_selec:Object()\r\n        }\r\n    },\r\n    components: {\r\n        \r\n    },\r\n    methods: {\r\n        // para ordenar las empresas de la cooperativa alfabéticamente\r\n        getSortedCooperativa(cooperativa) {\r\n            return {\r\n                ...cooperativa,\r\n                enterprises: cooperativa.enterprises.slice().sort((a, b) => {\r\n                return a.name.localeCompare(b.name);\r\n                }),\r\n            };\r\n        },\r\n        cargaLocalizacionActual(){\r\n            if(!(\"geolocation\" in navigator)) {\r\n                this.erorCompaGeoloc =  this.$t('map.loc_no_disponible')\r\n                this.mostrarIconErrGeoloc = true\r\n                return;\r\n            }\r\n            \r\n            // get position\r\n            navigator.geolocation.getCurrentPosition(pos => {\r\n                console.info('Localizacion autorizada', pos)\r\n                this.mostrarIconErrGeoloc = false;\r\n                this.$emit('setCenter', [pos.coords.longitude, pos.coords.latitude])\r\n                this.$emit('setCenterLocation', [pos.coords.longitude, pos.coords.latitude])\r\n            }, err => {\r\n                this.mostrarIconErrGeoloc = true\r\n                console.info('Localización no autorizada', err)\r\n            })\r\n        },\r\n        onclickTile(){\r\n            if(this.expand){\r\n                this.expand = false\r\n                this.$refs.layersControlersResponsive.style['max-height'] = ''\r\n                this.$refs.layersControlersResponsive.style['overflow-y'] = ''\r\n                this.componentDrop +=1\r\n            }else{\r\n                this.expand = true\r\n                this.$refs.layersControlersResponsive.style['max-height'] = '90%'\r\n                this.$refs.layersControlersResponsive.style['overflow-y'] = 'auto'\r\n            }\r\n        },\r\n        onclickTile2(){\r\n            if(this.expand2){\r\n                this.expand2 = false\r\n                this.$refs.sentinelLayersListCollapse.style.display = \"none\"\r\n                this.$refs.sentinelLayersListCollapseP.$el.style.display = \"none\"\r\n                this.classfechaR = ``\r\n                this.classfechab1 = ``\r\n                this.classfechab2 = ``\r\n\r\n            }else{\r\n                this.expand2 = true\r\n                this.$refs.sentinelLayersListCollapse.style.display = \"block\"\r\n                this.$refs.sentinelLayersListCollapseP.$el.style.display = \"\"\r\n                this.classfechaR = `bx--row`,\r\n                this.classfechab1 = `bx--col-lg-7 bx--col-md-10 bx--col-sm-8`\r\n                this.classfechab2 = `bx--col-lg-1 bx--col-md-1 bx--col-sm-1`\r\n            }\r\n                \r\n        },\r\n        seleccionaEmpresa(empresa){\r\n            this.empresa_selec = empresa;\r\n            const nombre = document.getElementById(\"selectEmp\");\r\n            document.getElementById(\"empresa\").innerHTML = nombre.options[nombre.selectedIndex].text;\r\n            const arrParcels = [];\r\n            console.log(\"Empresa selecccionada \", empresa);\r\n\r\n            if (empresa == 'all') {\r\n                getAllEnterprises()\r\n                    .then(async response => {\r\n                        response.data.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel);\r\n                            });\r\n                        });\r\n                        this.$emit('setEnterprise', response.data);\r\n                        this.$emit('setAllParcelsOfEnterprises', arrParcels);\r\n                    })\r\n                    .catch(error => {\r\n                        console.error('Error al obtener empresas activas:', error);\r\n                    });\r\n            }else{\r\n                const result = empresa.split('_')\r\n                if(result[0] == 'coop'){\r\n                    getCooperative(result[1])\r\n                    .then(response => {\r\n                        response.data.enterprises.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.$emit('setEnterprise', response.data.enterprises)\r\n                        this.$emit('setAllParcelsOfEnterprises', arrParcels)\r\n                    })\r\n                }else{\r\n                    getEnterprise(empresa)\r\n                    .then(async response => {\r\n                        response.data.parcels.features.map(parcel => {\r\n                            arrParcels.push(parcel)\r\n                        })\r\n                        console.log('parada')\r\n                        this.$emit('setEnterprise', [response.data])   \r\n                        this.$emit('setAllParcelsOfEnterprises', arrParcels)                     \r\n\r\n                        const allCoordinates = Array();\r\n                        arrParcels.map(parcel => {\r\n                            allCoordinates.push(parcel.geometry.coordinates)\r\n                        })\r\n                        await setParcelsForInstance(response.data.name, allCoordinates, response.data.sentinel_instance)\r\n                        .then(response1 => {\r\n                            console.info(`OK refrescado parcelas de ${response.data.name}`, response1.data)\r\n                            \r\n                            console.log(response.data)\r\n                        })\r\n                        .catch(err => console.info(`ERROR refrescado parcelas de ${response.data.name}`, err))\r\n                        })\r\n                }\r\n            }\r\n        },\r\n        actionChangeParcels(valor){\r\n            let result = []\r\n            this.arrEnterprises.map(enterprise => {\r\n                enterprise.parcels.features.map(feature => {\r\n                    if(feature.id == valor){\r\n                        result.push(feature)\r\n                    }\r\n                })\r\n            })\r\n            const coordenadasGeometricas = result[0].geometry.coordinates[0]\r\n            const newCenter = this.getCenter(coordenadasGeometricas)\r\n            const arrAllParcelsFilter = this.allParcelsOfEnterprisesFilter\r\n            this.$emit('setCenter', [newCenter[0], newCenter[1]])\r\n            this.$emit('setflagparcela', 16.5)\r\n            this.$emit('setAllParcelsOfEnterprisesFilter', arrAllParcelsFilter)\r\n        },\r\n        actionChangeDate(valor){\r\n            const arrFechas = valor.split(', ')\r\n            if(arrFechas.length == 1){\r\n                this.time = \"2019-01-01/\"+valor\r\n                this.$emit('setFechaSentinel', valor)\r\n            }\r\n        },\r\n        actionClickDateCargaFechasSent(){\r\n            this.isActiveLoadingFechasSent = true\r\n            this.isActiveLoadingFechasSent = true\r\n            getFechasSentinel(this.mapComponent.previousExtent_)\r\n            .then(response => {\r\n                const respuesta = response.data.features\r\n                const fechasArray = Array()\r\n                respuesta.forEach(feature =>{\r\n                    fechasArray.push(feature.properties.date)\r\n                })\r\n                this.valueDates = fechasArray.reverse()\r\n                this.isActiveLoadingFechasSent = false\r\n                this.isActiveLoadingFechasSent = false\r\n            })\r\n        },\r\n        getCenter(coordenadasGeometricas){\r\n            var minX, maxX, minY, maxY;\r\n            for (var i = 0; i < coordenadasGeometricas.length; i++){\r\n                minX = (coordenadasGeometricas[i][0] < minX || minX == null) ? coordenadasGeometricas[i][0] : minX;\r\n                maxX = (coordenadasGeometricas[i][0] > maxX || maxX == null) ? coordenadasGeometricas[i][0] : maxX;\r\n                minY = (coordenadasGeometricas[i][1] < minY || minY == null) ? coordenadasGeometricas[i][1] : minY;\r\n                maxY = (coordenadasGeometricas[i][1] > maxY || maxY == null) ? coordenadasGeometricas[i][1] : maxY;\r\n            }\r\n            return [(minX + maxX) / 2, (minY + maxY) / 2];\r\n        },\r\n        onBuscar(busqueda){\r\n            if(busqueda){\r\n                const result = this.allParcelsOfEnterprises.filter(parcel => parcel.properties.name.toUpperCase().includes(busqueda.toUpperCase()))\r\n                this.allParcelsOfEnterprisesFilter = result\r\n            }else{\r\n                this.allParcelsOfEnterprisesFilter = this.allParcelsOfEnterprises\r\n            }\r\n        },\r\n        getNameEnterprise(value){\r\n            const result = this.arrEnterprises.filter(enterprise => enterprise.id == value)\r\n            return result[0].name\r\n        },\r\n        actionChangedToggle(value){\r\n            //this.checkedToggleMostarTexto = value\r\n            this.$emit('setToggleMostrarTexto', value)\r\n        },\r\n\r\n        actionChangedAlertSolpamientoToggle(value){\r\n            console.warn('actionChangedAlertSolpamientoToggle', value)\r\n            //this.checkedToggleMostarTexto = value\r\n            this.$emit('setToggleAlertSolpamiento', value)\r\n        },\r\n\r\n        actionChangedToggleIconoUbi(value){\r\n            this.$emit('setOcultarInconoUbi', value)\r\n        },\r\n        actionChangeLayers(value){\r\n            this.$emit('setSentinelLayer', value)\r\n        },\r\n        actionClearCacheSentinel(){\r\n            this.$emit('setSentinelClearCache')\r\n        },\r\n        actionChangeOpacity(value){\r\n            this.$emit('setSentinelOpacity', value/100)\r\n        }\r\n    },\r\n    mounted: function () {\r\n        this.$nextTick(function(){\r\n            this.seleccionaEmpresa('all');\r\n        }\r\n \r\n        )\r\n        //console.info('User Logged')\r\n    },\r\n    beforeCreate(){\r\n        \r\n    },\r\n    computed: {\r\n    // para ordenar las empresas alfabéticamente\r\n    sortedListadoEmpresas() {\r\n      return this.listadoEmpresas.slice().sort((a, b) => {\r\n        return a.name.localeCompare(b.name);\r\n      });\r\n    },\r\n  },\r\n}\r\n</script>\r\n<style scoped>\r\n    #layersControler{\r\n        position: fixed;\r\n        width: 450px;\r\n        padding: 10px;\r\n        background-color: #f4f4f4;\r\n        margin-top: 10px;\r\n        margin-left: 10px;\r\n        max-width: 480.6px;\r\n        overflow: scroll;\r\n        height: auto;\r\n        max-height: 850px;\r\n        overflow-x: hidden;\r\n    }\r\n    #sentinelLayersList{\r\n        overflow-y: auto;\r\n        height: 250px;\r\n    }\r\n    @media (max-height: 700px) {\r\n        #sentinelLayersList{\r\n            overflow: scroll;\r\n            height: 280px;\r\n        }\r\n    }\r\n\r\n    @media (max-height: 700px) {\r\n        #sentinelLayersList{\r\n            overflow: scroll;\r\n            height: 280px;\r\n        }\r\n        #layersControler{\r\n            height: 600px;\r\n            overflow-x: hidden;\r\n        }\r\n    }\r\n    /*\r\n    @media (max-height: 800px) {\r\n        #layersControler{\r\n            height: 600px;\r\n            overflow-x: hidden;\r\n        }\r\n    */\r\n</style>\r\n"]}]}