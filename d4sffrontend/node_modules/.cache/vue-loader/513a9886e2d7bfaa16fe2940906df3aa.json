{"remainingRequest":"C:\\Users\\respana\\source\\D4SF\\dataforsmartfarming\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\respana\\source\\D4SF\\dataforsmartfarming\\src\\views\\AdminEnterprises.vue?vue&type=style&index=0&id=683eed1d&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\respana\\source\\D4SF\\dataforsmartfarming\\src\\views\\AdminEnterprises.vue","mtime":1622545923166},{"path":"C:\\Users\\respana\\source\\D4SF\\dataforsmartfarming\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\respana\\source\\D4SF\\dataforsmartfarming\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\respana\\source\\D4SF\\dataforsmartfarming\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\respana\\source\\D4SF\\dataforsmartfarming\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\respana\\source\\D4SF\\dataforsmartfarming\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNncmlkLWFkbWluewogICAgbWFyZ2luLWJvdHRvbTogNTBweDsKfQo="},{"version":3,"sources":["AdminEnterprises.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgNA;AACA;AACA","file":"AdminEnterprises.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div>\r\n        <Board />\r\n        <div class=\"bx--grid\" id=\"grid-admin\">\r\n            <div class=\"group-list\">\r\n                <cv-data-table\r\n                    :sortable=\"false\"\r\n                    :columns=\"[\r\n                {\r\n                    key: 'name',\r\n                    label: this.$t('adminEnterprise.nombre')\r\n                },\r\n                {\r\n                    key: 'cif',\r\n                    label: this.$t('adminEnterprise.cif')\r\n                },\r\n                {\r\n                    key: 'hectares',\r\n                    label: this.$t('adminEnterprise.hectareas_disponibles')\r\n                },\r\n                {\r\n                    key: 'hectaresUsed',\r\n                    label: this.$t('adminEnterprise.hectareas_usadas')\r\n                },\r\n            ]\"\r\n                    :title=\"$t('adminEnterprise.listado_empresas')\"\r\n                    ref=\"table\"\r\n                    :pagination=\"{ numberOfItems: enterprises.length, pageSizes: [10, 15, 20, 25, enterprises.length] }\" @pagination=\"actionOnPagination\"\r\n                >\r\n                    <template v-if=\"true\" slot=\"actions\">\r\n                        <cv-button small @click=\"nuevaEmpresa\">{{$t(\"adminEnterprise.add_empresa\")}}</cv-button>\r\n                    </template>\r\n                    <template v-if=\"use_batchActions\" slot=\"batch-actions\">\r\n                        <cv-button @click=\"eliminarEmpresaModal\">\r\n                            {{$t(\"adminEnterprise.eliminar\")}}\r\n                            <TrashCan32 class=\"bx--btn__icon\" />\r\n                        </cv-button>\r\n                        <cv-button @click=\"editarEmpresa\">\r\n                            {{$t(\"adminEnterprise.editar\")}}\r\n                            <Edit32 class=\"bx--btn__icon\" />\r\n                        </cv-button>\r\n                    </template>\r\n                    <template slot=\"data\">\r\n                        <cv-data-table-row\r\n                            v-for=\"enterprise in enterprises.slice(start, start+length)\"\r\n                            :key=\"`${enterprise.id}`\"\r\n                            :value=\"`${enterprise.id}`\"\r\n                            :aria-label-for-batch-checkbox=\"`Custom aria label for row ${enterprise.id} batch`\"\r\n                        >\r\n                            <cv-data-table-cell>{{enterprise.name}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{enterprise.cif}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{enterprise.hectares_available}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{countParcels(enterprise.parcels)}}</cv-data-table-cell>\r\n                        </cv-data-table-row>\r\n                    </template>\r\n                </cv-data-table>\r\n            </div>\r\n            <newEnterprise ref=\"modal\"/>\r\n            <AlertaGeneral ref=\"alertaGeneral\" :tituloAlert=\"mensajeAlerta\" :tipoAlert=\"tipoAlerta\" />\r\n            <cv-modal\r\n            ref=\"alerta_eliminar\"\r\n            kind=\"danger\"\r\n            :visible=\"visibleAlertaEliminar\"\r\n            @primary-click=\"eliminarUsuario\">\r\n                <template slot=\"label\">{{$t(\"adminEnterprise.seguro\")}}</template>\r\n                <template slot=\"title\">{{$t(\"adminEnterprise.eliminar\")}}</template>\r\n                <template slot=\"content\">\r\n                <p>{{$t(\"adminEnterprise.seguro_enterprise_del\")}}</p>\r\n                </template>\r\n                <template slot=\"secondary-button\">{{$t(\"adminEnterprise.cancelar\")}}</template>\r\n                <template slot=\"primary-button\">{{$t(\"adminEnterprise.eliminar\")}}</template>\r\n            </cv-modal>\r\n        \r\n        </div>\r\n        <Footer/>\r\n    </div>\r\n    \r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nimport newEnterprise from \"../components/newEnterprise.vue\";\r\nimport Board from \"@/views/Board.vue\";\r\nimport Footer from \"../views/Footer.vue\";\r\n\r\nimport AlertaGeneral from \"../components/AlertaGeneral\";\r\nexport default {\r\n    name: \"AdminEnterprises\",\r\n    props: {},\r\n    components: {\r\n        newEnterprise,\r\n        Footer,\r\n        AlertaGeneral,\r\n        Board\r\n    },\r\n    data() {\r\n        return {\r\n            basicPagination: false,\r\n            use_batchActions: true,\r\n            hasExpandingRows: false,\r\n            use_slottedData: true,\r\n            visibleAlertaEliminar: false,\r\n            start: 0,\r\n            length: 10,\r\n            columns3: [\r\n                {\r\n                    key: \"name\",\r\n                    label: this.$t('adminEnterprise.nombre')\r\n                },\r\n                {\r\n                    key: \"cif\",\r\n                    label: this.$t('adminEnterprise.cif')\r\n                },\r\n                {\r\n                    key: \"hectares\",\r\n                    label: this.$t('adminEnterprise.hectareas_disponibles')\r\n                },\r\n                {\r\n                    key: \"hectaresUsed\",\r\n                    label: this.$t('adminEnterprise.hectareas_usadas')\r\n                },\r\n            ],\r\n            enterprises: [],\r\n        }\r\n    },\r\n    methods: {\r\n\r\n        countParcels(parcels){\r\n            //const regx = '/Ha/g;'\r\n            let hectareas_disponibles = 0        \r\n            parcels.features.forEach(parcel =>{\r\n                hectareas_disponibles = (hectareas_disponibles + parcel.properties.area)\r\n            })\r\n            const total = Math.round((hectareas_disponibles + Number.EPSILON) * 100) / 100\r\n            return total.toString().replace('.', ',')\r\n            \r\n        },\r\n        showAlert(){\r\n            this.mensajeAlerta = \"En desarrollo\"\r\n            this.tipoAlerta = 'info'\r\n            this.$refs.alertaGeneral.verAlerta()\r\n        },\r\n        actionOnPagination(ev){\r\n            this.start = ev.start-1\r\n            this.length = ev.length\r\n        },\r\n        obtenerListaEmpresas(){\r\n            const path = `${this.$apiURL}/enterprises/`;\r\n            axios.defaults.headers.common['Authorization'] = \"Bearer \"+sessionStorage.getItem(\"apiAccess\")\r\n            axios\r\n            .get(path)\r\n            .then(response => {\r\n                this.enterprises = response.data\r\n            }).catch(error =>{\r\n                console.info(error)\r\n            })\r\n        },\r\n        editarEmpresa(){\r\n            const rowSeleccionado = this.$refs.table.selectedRows\r\n            this.$router.push(`/edit-enterprise?enterprise=${rowSeleccionado}`);\r\n        },\r\n        nuevaEmpresa(){\r\n            const rowSeleccionado = this.$refs.table.selectedRows;\r\n            if (rowSeleccionado.length > 1) {\r\n                this.mensajeAlerta = `${this.$t('adminEnterprise.solo_una_empresa')}`;\r\n                this.$refs.alerta.verAlerta()\r\n            } else {\r\n                this.userSeleccionado = rowSeleccionado[0]\r\n                this.$refs.modal.openModal()\r\n            }\r\n            \r\n        },\r\n        eliminarEmpresaModal(){\r\n            this.$refs.alerta_eliminar.dataVisible = true\r\n        },\r\n        eliminarUsuario(){\r\n            const rowSeleccionado = this.$refs.table.selectedRows\r\n            let flag = false\r\n            rowSeleccionado.forEach(element => {\r\n                console.log(element)\r\n                const path = `${this.$apiURL}/enterprises/${element}/`\r\n                axios\r\n                .delete(path)\r\n                .then(() => {\r\n                    this.obtenerListaEmpresas();\r\n                })\r\n                .catch(response =>{\r\n                    flag = true\r\n                    console.log(response.error)\r\n                });\r\n            });\r\n            if(flag){\r\n                console.error('error')\r\n                this.mensajeAlerta = `${this.$t('adminEnterprise.del_empresa_error')}`;\r\n                this.$refs.alerta.verAlerta()\r\n            }else{\r\n                this.$refs.alerta_eliminar.hide()\r\n            }\r\n        }\r\n    },\r\n    created(){\r\n        this.obtenerListaEmpresas()\r\n    },\r\n    mounted(){\r\n\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n    #grid-admin{\r\n        margin-bottom: 50px;\r\n    }\r\n</style>"]}]}