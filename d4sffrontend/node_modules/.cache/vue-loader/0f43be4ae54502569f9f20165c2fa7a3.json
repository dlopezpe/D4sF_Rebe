{"remainingRequest":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\@carbon\\vue\\src\\components\\cv-button\\cv-icon-button.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\@carbon\\vue\\src\\components\\cv-button\\cv-icon-button.vue","mtime":499162500000},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\respana\\source\\D4SF\\d4sffrontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBidXR0b25NaXhpbiBmcm9tICcuL2J1dHRvbi1taXhpbic7CmltcG9ydCB7IGNhcmJvblByZWZpeE1peGluIH0gZnJvbSAnLi4vLi4vbWl4aW5zJzsKaW1wb3J0IEN2U3ZnIGZyb20gJy4uL2N2LXN2Zy9fY3Ytc3ZnJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ3ZJY29uQnV0dG9uJywKICBtaXhpbnM6IFtidXR0b25NaXhpbiwgY2FyYm9uUHJlZml4TWl4aW5dLAogIGNvbXBvbmVudHM6IHsgQ3ZTdmcgfSwKICBwcm9wczogewogICAgbGFiZWw6IHsgdHlwZTogU3RyaW5nLCBkZWZhdWx0OiB1bmRlZmluZWQgfSwKICAgIHNlbGVjdGVkOiBCb29sZWFuLAogICAgdGlwUG9zaXRpb246IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnYm90dG9tJywKICAgICAgdmFsaWRhdG9yOiB2YWwgPT4gWyd0b3AnLCAnbGVmdCcsICdib3R0b20nLCAncmlnaHQnXS5pbmNsdWRlcyh2YWwpLAogICAgfSwKICAgIHRpcEFsaWdubWVudDogeyB0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6ICdjZW50ZXInLCB2YWxpZGF0b3I6IHZhbCA9PiBbJ3N0YXJ0JywgJ2NlbnRlcicsICdlbmQnXS5pbmNsdWRlcyh2YWwpIH0sCiAgfSwKfTsK"},{"version":3,"sources":["cv-icon-button.vue"],"names":[],"mappings":";AAsBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"cv-icon-button.vue","sourceRoot":"node_modules/@carbon/vue/src/components/cv-button","sourcesContent":["<template>\n  <button\n    :aria-pressed=\"kind === 'ghost' && selected\"\n    class=\"cv-button\"\n    :class=\"[\n      ...buttonClassOpts({ iconOnly: true }),\n      `${carbonPrefix}--tooltip__trigger`,\n      `${carbonPrefix}--tooltip--a11y`,\n      `${carbonPrefix}--tooltip--${tipPosition || 'bottom'}`,\n      `${carbonPrefix}--tooltip--align-${tipAlignment || 'center'}`,\n    ]\"\n    v-on=\"inputListeners\"\n    type=\"button\"\n  >\n    <span :class=\"`${carbonPrefix}--assistive-text`\">{{ label }}</span>\n    <slot name=\"icon\">\n      <CvSvg v-if=\"icon || iconHref\" :svg=\"icon || iconHref\" :class=\"`${carbonPrefix}--btn__icon`\" />\n    </slot>\n  </button>\n</template>\n\n<script>\nimport buttonMixin from './button-mixin';\nimport { carbonPrefixMixin } from '../../mixins';\nimport CvSvg from '../cv-svg/_cv-svg';\n\nexport default {\n  name: 'CvIconButton',\n  mixins: [buttonMixin, carbonPrefixMixin],\n  components: { CvSvg },\n  props: {\n    label: { type: String, default: undefined },\n    selected: Boolean,\n    tipPosition: {\n      type: String,\n      default: 'bottom',\n      validator: val => ['top', 'left', 'bottom', 'right'].includes(val),\n    },\n    tipAlignment: { type: String, default: 'center', validator: val => ['start', 'center', 'end'].includes(val) },\n  },\n};\n</script>\n"]}]}