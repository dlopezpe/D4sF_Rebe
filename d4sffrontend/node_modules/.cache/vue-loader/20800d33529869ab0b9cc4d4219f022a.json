{"remainingRequest":"C:\\Users\\respana\\source\\D4SF\\dataforsmartfarming\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\respana\\source\\D4SF\\dataforsmartfarming\\src\\components\\adminActions\\SentinelInstancesRefreshParcels.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\respana\\source\\D4SF\\dataforsmartfarming\\src\\components\\adminActions\\SentinelInstancesRefreshParcels.vue","mtime":1652779238921},{"path":"C:\\Users\\respana\\source\\D4SF\\dataforsmartfarming\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\respana\\source\\D4SF\\dataforsmartfarming\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\respana\\source\\D4SF\\dataforsmartfarming\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\respana\\source\\D4SF\\dataforsmartfarming\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQge2dldEFsbEVudGVycHJpc2VzLCBzZXRQYXJjZWxzRm9ySW5zdGFuY2V9IGZyb20gJ0AvY3J1ZEZ1bmN0aW9ucy9jcnVkRW50ZXJwcmlzZScvL2dldEVudGVycHJpc2UNCg0KZXhwb3J0IGRlZmF1bHQgew0KICAgIG5hbWU6ICdQYXJjZWxzVG9TZW50aW5lbENvbXBvbmVudCcsDQogICAgY29tcG9uZW50czogew0KICAgIH0sDQogICAgZGF0YSgpew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgcm93U2VsZWN0czogW10sDQogICAgICAgICAgICBsaXN0YWRvUGFyY2VsYXM6IEFycmF5LA0KICAgICAgICAgICAgbGlzdGFkb1BhcmNlbGFzRmlsdGVyOiBBcnJheSwNCiAgICAgICAgICAgIGFyckVtcHJlc2FzOiBbXSwNCiAgICAgICAgICAgIHJvd1NpemU6ICIiLA0KICAgICAgICAgICAgYXV0b1dpZHRoOiBmYWxzZSwNCiAgICAgICAgICAgIHNvcnRhYmxlOiBmYWxzZSwNCiAgICAgICAgICAgIHRpdGxlOiAiTGlzdGFkbyBkZSBFbXByZXNhcyIsDQogICAgICAgICAgICBhY3Rpb25CYXJBcmlhTGFiZWw6ICJDdXN0b20gYWN0aW9uIGJhciBhcmlhIGxhYmVsIiwNCiAgICAgICAgICAgIGJhdGNoQ2FuY2VsTGFiZWw6ICJDYW5jZWwiLA0KICAgICAgICAgICAgemVicmE6IHRydWUsDQogICAgICAgICAgICBjb2x1bW5zOiBbDQogICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICBrZXk6ICdpZCcsDQogICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnSUQnLA0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICBrZXk6ICduYW1lJywNCiAgICAgICAgICAgICAgICAgICAgbGFiZWw6ICdOb21icmUgZGUgbGEgZW1wcmVzYScsDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgIGtleTogJ3NlbnRpbmVsX2luc3RhbmNlJywNCiAgICAgICAgICAgICAgICAgICAgbGFiZWw6IGBJbnN0YW5jaWEgZGUgc2VudGluZWxgLA0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICBdLA0KICAgICAgICB9DQogICAgfSwNCiAgICBtZXRob2RzOiB7DQogICAgICAgIHJlZnJlc2Nhckluc2FuY2lhKCl7DQogICAgICAgICAgICBjb25zdCByZXN1bHQgPSB0aGlzLmFyckVtcHJlc2FzLmZpbHRlcihlbXByZXNhID0+IHRoaXMucm93U2VsZWN0cy5pbmNsdWRlcyhlbXByZXNhLmlkKSkNCiAgICAgICAgICAgIGNvbnNvbGUuaW5mbyhyZXN1bHQpDQogICAgICAgICAgICByZXN1bHQubWFwKCBhc3luYyBlbnRlcnByaXNlID0+IHsNCiAgICAgICAgICAgICAgICBjb25zdCBhbGxDb29yZGluYXRlcyA9IEFycmF5KCk7DQogICAgICAgICAgICAgICAgZW50ZXJwcmlzZS5wYXJjZWxzLmZlYXR1cmVzLm1hcChwYXJjZWwgPT4gew0KICAgICAgICAgICAgICAgICAgICBhbGxDb29yZGluYXRlcy5wdXNoKHBhcmNlbC5nZW9tZXRyeS5jb29yZGluYXRlcykNCiAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAgIGNvbnNvbGUuaW5mbyhgcGFyY2VsYXMgZGUgJHtlbnRlcnByaXNlLm5hbWV9YCwgYWxsQ29vcmRpbmF0ZXMpDQogICAgICAgICAgICAgICAgYXdhaXQgc2V0UGFyY2Vsc0Zvckluc3RhbmNlKGVudGVycHJpc2UubmFtZSwgYWxsQ29vcmRpbmF0ZXMsIGVudGVycHJpc2Uuc2VudGluZWxfaW5zdGFuY2UpDQogICAgICAgICAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuaW5mbyhgT0sgcmVmcmVzY2FkbyBwYXJjZWxhcyBkZSAke2VudGVycHJpc2UubmFtZX1gLCByZXNwb25zZS5kYXRhKQ0KICAgICAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAgICAgICAuY2F0Y2goZXJyID0+IGNvbnNvbGUuaW5mbyhgRVJST1IgcmVmcmVzY2FkbyBwYXJjZWxhcyBkZSAke2VudGVycHJpc2UubmFtZX1gLCBlcnIpKQ0KICAgICAgICAgICAgfSkNCiAgICAgICAgICAgIC8vcG9zdFBhcmNlbHNOb3RTZW50aW5lbEluc3RhbmNlKHRoaXMucm93U2VsZWN0cykNCiAgICAgICAgfQ0KICAgIH0sDQogICAgbW91bnRlZDogZnVuY3Rpb24gKCkgew0KICAgICAgICAvL2NvbnNvbGUuaW5mbygnVXNlciBMb2dnZWQnKQ0KICAgIH0sDQogICAgYmVmb3JlQ3JlYXRlKCl7DQogICAgICAgIGdldEFsbEVudGVycHJpc2VzKCkNCiAgICAgICAgICAgIC50aGVuKGFzeW5jIHJlc3BvbnNlID0+IHsNCiAgICAgICAgICAgICAgICB0aGlzLmFyckVtcHJlc2FzID0gcmVzcG9uc2UuZGF0YQ0KICAgICAgICAgICAgICAgIHRoaXMuZmxhZ0luZGljYXRpbmdEYXRhSGFzQmVlbkxvYWRlZEluVmFyaWFibGVzID0gdHJ1ZQ0KICAgICAgICAgICAgfSkNCiAgICB9DQp9DQo="},{"version":3,"sources":["SentinelInstancesRefreshParcels.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SentinelInstancesRefreshParcels.vue","sourceRoot":"src/components/adminActions","sourcesContent":["<template>\r\n    <div class=\"bx--grid\">\r\n        <template id=\"txt-explicativo\" class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <p>Procesado de las instancias de Sentinel para volver a cargar todas las parcelas en la instancia de nuevo</p>\r\n            </div>\r\n        </template>\r\n        <template class=\"bx--row\">\r\n            <cv-data-table\r\n                :row-size=\"rowSize\"\r\n                :auto-width=\"autoWidth\"\r\n                :sortable=\"sortable\"\r\n                :title=\"title\"\r\n                :action-bar-aria-label=\"actionBarAriaLabel\"\r\n                :batch-cancel-label=\"batchCancelLabel\"\r\n                :zebra=\"zebra\"\r\n                :columns=\"columns\"\r\n                v-model=\"rowSelects\"\r\n            >\r\n            <template v-if=\"true\" slot=\"batch-actions\">\r\n                <cv-button @click=\"refrescarInsancia\">\r\n                    Refrescar Instancia\r\n                    <Analytics20 class=\"bx--btn__icon\" />\r\n                </cv-button> \r\n            </template>\r\n            <template slot=\"data\" v-if=\"listadoParcelas\">\r\n                <cv-data-table-row\r\n                    v-for=\"enterprise in arrEmpresas\"\r\n                    :key=\"`${enterprise.id}`\"\r\n                    :value=\"`${enterprise.id}`\"\r\n                >\r\n                    <cv-data-table-cell>{{enterprise.id}}</cv-data-table-cell>\r\n                    <cv-data-table-cell>{{enterprise.name}}</cv-data-table-cell>\r\n                    <cv-data-table-cell>{{enterprise.sentinel_instance}}</cv-data-table-cell>\r\n                </cv-data-table-row>\r\n            </template>\r\n            </cv-data-table>\r\n        </template>\r\n    </div>\r\n</template>\r\n<script>\r\nimport {getAllEnterprises, setParcelsForInstance} from '@/crudFunctions/crudEnterprise'//getEnterprise\r\n\r\nexport default {\r\n    name: 'ParcelsToSentinelComponent',\r\n    components: {\r\n    },\r\n    data(){\r\n        return {\r\n            rowSelects: [],\r\n            listadoParcelas: Array,\r\n            listadoParcelasFilter: Array,\r\n            arrEmpresas: [],\r\n            rowSize: \"\",\r\n            autoWidth: false,\r\n            sortable: false,\r\n            title: \"Listado de Empresas\",\r\n            actionBarAriaLabel: \"Custom action bar aria label\",\r\n            batchCancelLabel: \"Cancel\",\r\n            zebra: true,\r\n            columns: [\r\n                {\r\n                    key: 'id',\r\n                    label: 'ID',\r\n                },\r\n                {\r\n                    key: 'name',\r\n                    label: 'Nombre de la empresa',\r\n                },\r\n                {\r\n                    key: 'sentinel_instance',\r\n                    label: `Instancia de sentinel`,\r\n                },\r\n            ],\r\n        }\r\n    },\r\n    methods: {\r\n        refrescarInsancia(){\r\n            const result = this.arrEmpresas.filter(empresa => this.rowSelects.includes(empresa.id))\r\n            console.info(result)\r\n            result.map( async enterprise => {\r\n                const allCoordinates = Array();\r\n                enterprise.parcels.features.map(parcel => {\r\n                    allCoordinates.push(parcel.geometry.coordinates)\r\n                })\r\n                console.info(`parcelas de ${enterprise.name}`, allCoordinates)\r\n                await setParcelsForInstance(enterprise.name, allCoordinates, enterprise.sentinel_instance)\r\n                    .then(response => {\r\n                        console.info(`OK refrescado parcelas de ${enterprise.name}`, response.data)\r\n                    })\r\n                    .catch(err => console.info(`ERROR refrescado parcelas de ${enterprise.name}`, err))\r\n            })\r\n            //postParcelsNotSentinelInstance(this.rowSelects)\r\n        }\r\n    },\r\n    mounted: function () {\r\n        //console.info('User Logged')\r\n    },\r\n    beforeCreate(){\r\n        getAllEnterprises()\r\n            .then(async response => {\r\n                this.arrEmpresas = response.data\r\n                this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n            })\r\n    }\r\n}\r\n</script>"]}]}