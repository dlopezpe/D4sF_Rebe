{"remainingRequest":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\src\\views\\AdminUsers.vue?vue&type=style&index=0&id=412a3d9a&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\src\\views\\AdminUsers.vue","mtime":1622446350284},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2dyaWQtYWRtaW57CiAgICBtYXJnaW4tYm90dG9tOiA1MHB4Owp9Cg=="},{"version":3,"sources":["AdminUsers.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8WA;AACA;AACA","file":"AdminUsers.vue","sourceRoot":"src/views","sourcesContent":["\r\n<template>\r\n    <div>\r\n        <Board />\r\n        <div class=\"bx--grid\" id=\"grid-admin\">\r\n            <div class=\"group-list\">\r\n                <cv-data-table\r\n                    :sortable=\"false\"\r\n                    :columns=\"[\r\n                        {\r\n                            key: 'name',\r\n                            label: this.$t('adminEnterprise.nombre')\r\n                        },\r\n                        {\r\n                            key: 'apellido',\r\n                            label: this.$t('empleados.apellido')\r\n                        },\r\n                        {\r\n                            key: 'Empresa',\r\n                            label: this.$t('app.emprise')\r\n                        },\r\n                        {\r\n                            key: 'Login',\r\n                            label: this.$t('login.login')\r\n                        },\r\n                    ]\"\r\n                    :title=\"enterpriseSel.length > 0 ? $t('map.listado_usuarios') + ' - ' +enterpriseSel[0].name : $t('map.listado_usuarios')\"\r\n                    ref=\"table\"\r\n                    :pagination=\"{ numberOfItems: usersSel.length, pageSizes: [10, 15, 20, 25, usersSel.length] }\" @pagination=\"actionOnPagination\"\r\n                >\r\n                <template v-if=\"true\" slot=\"actions\">\r\n                    <cv-search :placeholder=\"$t('parcelas.place_buscar')\" @input=\"onBuscar\"></cv-search>\r\n                    <div id=\"sentinelLayers\">\r\n                        <cv-select\r\n                        theme=\"\"\r\n                        :hide-label=\"false\"\r\n                        :inline=\"false\"\r\n                        :disabled=\"false\"\r\n                        @change=\"seleccionaEmpresa\"\r\n                        label=\"\"\r\n                        >\r\n                            <cv-select-option disabled selected hidden>{{$t(\"map.sel_empresa\")}}</cv-select-option>\r\n                            <cv-select-option :value=\"`all`\">Todas</cv-select-option>\r\n                            \r\n                            <cv-select-option v-for=\"empresa in allEnterprises\" :value=\"String(empresa.id)\"  v-bind:key=\"empresa.id\">\r\n                                {{empresa.name}}\r\n                            </cv-select-option>\r\n                        </cv-select>\r\n                    </div>\r\n                </template>\r\n                    <template slot=\"data\">\r\n            \r\n                        <cv-data-table-row\r\n                            v-for=\"user in usersSel.slice(start, start+length)\"\r\n                            :key=\"`${user.id}`\"\r\n                            :value=\"`${user.id}`\"\r\n                            :aria-label-for-batch-checkbox=\"`Custom aria label for row ${user.id} batch`\"\r\n                            \r\n                        >\r\n                            <cv-data-table-cell >{{user.first_name}}</cv-data-table-cell>\r\n                            <cv-data-table-cell >{{user.last_name}}</cv-data-table-cell>\r\n                            <cv-data-table-cell >{{getEmprise(user.enterprise_id)}}</cv-data-table-cell>\r\n                            <cv-data-table-cell >{{getUltAcc(user.user) | formatDate}}</cv-data-table-cell>\r\n\r\n                        </cv-data-table-row>\r\n                        \r\n                        \r\n                    </template>\r\n                    \r\n                </cv-data-table>\r\n            </div>\r\n        </div>\r\n        <Footer/>\r\n    </div>\r\n    \r\n</template>\r\n\r\n\r\n<script>\r\n//v-show=\"getEmprise(user.id) != 'no encontrado' \"\r\nimport axios from \"axios\";\r\nimport Board from \"@/views/Board.vue\";\r\nimport Footer from \"../views/Footer.vue\";\r\n\r\nexport default {\r\n    name: \"AdminUsers\",\r\n    props: {},\r\n    components: {\r\n        Footer,\r\n        Board\r\n    },\r\n    data() {\r\n        return {\r\n            basicPagination: false,\r\n            use_batchActions: true,\r\n            hasExpandingRows: false,\r\n            use_content: true,\r\n            use_slottedData: true,\r\n            visibleAlertaEliminar: false,\r\n        \r\n            start: 0,\r\n            length: 10,\r\n            columns3: [\r\n                {\r\n                    key: \"user\",\r\n                    label: this.$t('adminEnterprise.nombre')\r\n                },\r\n                {\r\n                    key: \"lastlogin\",\r\n                    label: this.$t('adminEnterprise.cif')\r\n                },\r\n            ],\r\n            users: [],\r\n            userList:[],\r\n            usersName: [],\r\n            enterprises: [],\r\n            userSeleccionado : \"\",\r\n            //Fermin\r\n            allEnterprises: Array(),\r\n            allUsers: Array(),\r\n            enterpriseSel: Array(),\r\n            usersSel: Array(),\r\n            ultimosAcc: Array(),\r\n        }\r\n    },\r\n    methods: {\r\n        getUltAcc(userID){\r\n            const result = this.ultimosAcc.filter(user => user.id === userID)\r\n            if(result.length > 0){\r\n                return result[0].last_login\r\n            }\r\n            return 'No login'\r\n        },\r\n        onBuscar(search){\r\n            let result = Array()\r\n            if(this.enterpriseSel.length > 0){\r\n                result = this.allUsers.filter(user => {\r\n                    if(user.first_name.includes(search) && this.enterpriseSel[0].id === user.enterprise_id){\r\n                        return user\r\n                    }\r\n                })\r\n                this.usersSel = result\r\n            }else{\r\n                result = this.allUsers.filter(user => {\r\n                    if(user.first_name.includes(search)){\r\n                        return user\r\n                    }\r\n                })\r\n                this.usersSel = result\r\n            }\r\n        },\r\n        actionOnPagination(ev){\r\n            this.start = ev.start-1\r\n            this.length = ev.length\r\n        },\r\n        seleccionaEmpresa(empresa){\r\n            if(empresa === 'all'){\r\n                this.usersSel = this.allUsers\r\n                this.enterpriseSel = Array()\r\n            }else{\r\n                this.usersSel = this.allUsers.filter( x=> x.enterprise_id == empresa )\r\n                this.enterpriseSel = this.allEnterprises.filter(enterprise => enterprise.id === empresa)\r\n            }\r\n        },\r\n        obtenerListaEmpresas(){\r\n            const path = `${this.$apiURL}/profiledata/`;\r\n            axios.defaults.headers.common['Authorization'] = \"Bearer \"+sessionStorage.getItem(\"apiAccess\")\r\n            axios\r\n            .get(path)\r\n            .then(response =>{\r\n                const data = response.data\r\n                this.users = data.filter( x=> x.last_login != null) \r\n                //console.info(this.users)\r\n            })   \r\n            //esta funcion hace lo mismo\r\n            \r\n            const path2 = `${this.$apiURL}/profiles/`;\r\n            axios.defaults.headers.common['Authorization'] = \"Bearer \"+sessionStorage.getItem(\"apiAccess\")\r\n            axios\r\n            .get(path2)\r\n            .then(response =>{\r\n                this.usersName = response.data\r\n            })\r\n            \r\n            this.getEnterprise()\r\n        },\r\n        getEnterprise(){\r\n            /*\r\n            const path3 = `${this.$apiURL}/enterprises/`;\r\n            axios.defaults.headers.common['Authorization'] = \"Bearer \"+sessionStorage.getItem(\"apiAccess\")\r\n            axios\r\n            .get(path3)\r\n            .then(response => {\r\n                this.enterprises = response.data\r\n                this.allEnterprises = response.data\r\n            }).catch(error =>{\r\n                console.info(error)\r\n            })\r\n        \r\n            const idSmartbits = '178e5240-1a64-4631-a95d-a9a8f70f3305'\r\n            if(this.$session.get('enterprise') != idSmartbits ){\r\n                this.enterprises = this.enterprises.filter( x=> x.name != 'Smartbits') \r\n                this.allEnterprises = this.enterprises.filter( x=> x.name != 'Smartbits')\r\n            } \r\n            */\r\n        },\r\n        getName(userid){\r\n            let name = \"no encontrado\"\r\n            this.usersName.forEach((value) => {\r\n                if (value.user == userid ){\r\n                        name= value.first_name\r\n                    }  \r\n                });\r\n                return name\r\n        },\r\n        getlastame(userid){\r\n            let name = \"no encontrado\"\r\n            this.usersName.forEach((value) => {\r\n                if (value.user == userid ){\r\n                    name= value.last_name\r\n                }  \r\n            });\r\n            return name\r\n        },\r\n        getEmprise(userid){\r\n            let name = \"no encontrado\"\r\n            /*\r\n            this.usersName.forEach((value) => {\r\n                if (value.user == userid ){\r\n                    this.enterprises.forEach((valueEm) => {\r\n                        if (value.enterprise_id == valueEm.id ){\r\n                            name= valueEm.name\r\n                        }  \r\n                    });\r\n                }  \r\n            });\r\n            */\r\n            const result = this.allEnterprises.filter(enterpise => enterpise.id === userid)\r\n            if(result.length > 0){\r\n                return result[0].name\r\n            }\r\n            return name\r\n        },\r\n        //Fermin\r\n        obtenerListadoEmpresas(){\r\n            const path3 = `${this.$apiURL}/enterprises/`;\r\n            axios.defaults.headers.common['Authorization'] = \"Bearer \"+sessionStorage.getItem(\"apiAccess\")\r\n            axios\r\n            .get(path3)\r\n            .then(response => {\r\n                this.allEnterprises = response.data\r\n\r\n                const idSmartbits = '178e5240-1a64-4631-a95d-a9a8f70f3305'\r\n                if(this.$session.get('enterprise') != idSmartbits ){\r\n                    this.allEnterprises = this.allEnterprises.filter( x=> x.name != 'Smartbits')\r\n                }\r\n                //this.enterpriseSel = this.allEnterprises.filter( x=> x.id == this.$session.get('enterprise'))\r\n                //this.enterpriseSel[0].push({name: 'Todas las empresas'})\r\n                this.getAllUsers()\r\n            }).catch(error =>{\r\n                console.info(error)\r\n            })\r\n        \r\n        },\r\n        getAllUsers(){\r\n            const arrUsuarios = Array()\r\n            let path = ``\r\n            this.allEnterprises.forEach(enterprise => {\r\n                path = `${this.$apiURL}/profiles_enterprises/${enterprise.id}/`;\r\n                axios.defaults.headers.common['Authorization'] = \"Bearer \"+sessionStorage.getItem(\"apiAccess\")\r\n                axios\r\n                .get(path)\r\n                .then(response => {\r\n                    response.data.forEach(usuario => {\r\n                        arrUsuarios.push(usuario)\r\n                    })\r\n                })\r\n            })\r\n            this.allUsers = arrUsuarios\r\n            this.usersSel =  arrUsuarios\r\n        },\r\n        getUltimosAccesos(){\r\n            const path = `${this.$apiURL}/profiledata/`;\r\n            axios.defaults.headers.common['Authorization'] = \"Bearer \"+sessionStorage.getItem(\"apiAccess\")\r\n            axios\r\n            .get(path)\r\n            .then(response =>{\r\n                this.ultimosAcc = response.data\r\n                /*\r\n                const data = response.data\r\n                this.users = data.filter( x=> x.last_login != null) \r\n                //console.info(this.users)\r\n                */\r\n            })  \r\n        },\r\n\r\n        getDatosUser(){\r\n            if(sessionStorage.getItem(\"apiAccess\")){\r\n                const path_lang = `${this.$apiURL}/profiledata/${this.$session.get('user')}/`;\r\n                axios.defaults.headers.common['Authorization'] = \"Bearer \"+sessionStorage.getItem(\"apiAccess\")\r\n                axios\r\n                .get(path_lang)\r\n                .then(response =>{\r\n                    this.$root.$i18n.locale = response.data.language\r\n                })\r\n                const path = `${this.$apiURL}/profile/`;\r\n                axios.defaults.headers.common['Authorization'] = \"Bearer \"+sessionStorage.getItem(\"apiAccess\")\r\n                axios\r\n                .get(path)\r\n                .then(response => {\r\n                    this.$session.start()\r\n                    //---------------------------------------------------------------\r\n                    this.$session.set('enterprise', response.data[0].enterprise_id)\r\n                    this.$session.set('user', response.data[0].user)\r\n                    sessionStorage.setItem('enterprise', response.data[0].enterprise_id)\r\n                    sessionStorage.setItem('user', response.data[0].user)\r\n\r\n                    let pathEnterpriseInstance = `${this.$apiURL}/enterprises/${response.data[0].enterprise_id}/`;\r\n                    axios.defaults.headers.common['Authorization'] = \"Bearer \"+sessionStorage.getItem(\"apiAccess\")\r\n                    axios.get(pathEnterpriseInstance)\r\n                    .then(response =>{\r\n                        sessionStorage.setItem('sI', response.data.sentinel_instance)\r\n                        \r\n                    })\r\n                    //---------------------------------------------------------------\r\n                    this.getPermisosUser(response.data[0].user)\r\n                }).catch(error =>{\r\n                    console.warn(error)\r\n                })\r\n            }\r\n        },\r\n        getPermisosUser(id){\r\n            const pathRol = `${this.$apiURL}/permisos/${id}/`;\r\n            axios.defaults.headers.common['Authorization'] = \"Bearer \"+sessionStorage.getItem(\"apiAccess\")\r\n            axios\r\n            .get(pathRol)\r\n            .then(response => {\r\n                //---------------------------------------------------------------\r\n                this.$session.set('is_enterpriseadmin', response.data.is_enterpriseadmin)\r\n                this.$session.set('is_staff', response.data.is_staff)\r\n                this.$session.set('is_superuser', response.data.is_superuser)\r\n                this.$session.set('is_systemadmin', response.data.is_systemadmin)\r\n                sessionStorage.setItem('is_enterpriseadmin', response.data.is_enterpriseadmin)\r\n                sessionStorage.setItem('is_staff', response.data.is_staff)\r\n                sessionStorage.setItem('is_superuser', response.data.is_superuser)\r\n                sessionStorage.setItem('is_systemadmin', response.data.is_systemadmin)\r\n                this.$parent.is_superuser = response.data.is_superuser\r\n                this.$parent.is_staff = response.data.is_staff,\r\n                this.$parent.is_systemadmin = response.data.is_systemadmin,\r\n                this.$parent.is_enterpriseadmin = response.data.is_enterpriseadmin\r\n                this.$parent.customLinkEnterprise = 'edit-enterprise?enterprise='+this.$session.get('enterprise')\r\n                //---------------------------------------------------------------\r\n                this.obtenerListadoEmpresas()\r\n                this.getUltimosAccesos()\r\n            })\r\n        },\r\n    },\r\n    created(){\r\n        this.getDatosUser()\r\n    },\r\n    mounted(){\r\n        this.getDatosUser()\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n    #grid-admin{\r\n        margin-bottom: 50px;\r\n    }\r\n</style>"]}]}