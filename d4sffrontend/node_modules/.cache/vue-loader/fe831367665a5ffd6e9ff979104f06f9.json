{"remainingRequest":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\src\\components\\MapComponent4.vue?vue&type=style&index=0&id=572db85a&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\src\\components\\MapComponent4.vue","mtime":1652784450691},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI21hcHsKICAgIHdpZHRoOiAxMDAlOyBoZWlnaHQ6IDEwMCU7IHBvc2l0aW9uOmZpeGVkCn0KCi5tYXBhewogICAgd2lkdGg6IDEwMCU7IGhlaWdodDogMTAwJSFpbXBvcnRhbnQ7IHBvc2l0aW9uOiBmaXhlZAp9CiNjYXJnYW5kb3sKICAgIHBvc2l0aW9uOmZpeGVkCn0K"},{"version":3,"sources":["MapComponent4.vue"],"names":[],"mappingsyhBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"MapComponent4.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div>\r\n        <cv-loading\r\n            :small=\"true\"\r\n            :active=\"true\"\r\n            :overlay=\"false\" v-if=\"true\" id=\"cargando\"></cv-loading>\r\n        <vl-map\r\n            :load-tiles-while-animating=\"false\"\r\n            :load-tiles-while-interacting=\"false\"\r\n            data-projection=\"EPSG:4326\"\r\n            style=\"height: 400px\"\r\n            id=\"map\"\r\n            class=\"mapa\"\r\n            ref=\"map\"\r\n            \r\n        >\r\n            <vl-view :zoom.sync=\"zoom\" :center=\"center\"></vl-view> \r\n            \r\n            \r\n\r\n            \r\n            <vl-layer-tile :id=\"`wmts_${enterprise.id}`\" :opacity=\"opacitylayer\" v-bind:key=\"`${enterprise.id}_layers_${timestampSentinel}`\" v-for=\"enterprise in arrEmpresas\" :z-index=\"2\">\r\n                <vl-source-wms\r\n                    v-if=\"enterprise.parcels.features.length\"\r\n                    :key=\"`${enterprise.id}_${timestampSentinel}`\" \r\n                    :url=\"`${urlSentinel}${enterprise.sentinel_instance}/?MAXCC=100&v=${timestampSentinel}&`\"\r\n                    :urlProcessingApi=\"`${urlSentinel}${enterprise.sentinel_instance}/?MAXCC=100&&v=${timestampSentinel}&`\"\r\n                    maxcc=\"100\"\r\n                    :minZoom=\"minZoom\"\r\n                    :maxZoom=\"maxZoom\"\r\n                    :preset=\"preset\"\r\n                    :layers=\"SentinelLayer\"\r\n                    :time.sync=\"time\"\r\n                    :serverType=\"serverType\"\r\n                    :opacity=\"opacitylayer\"\r\n                    :transition='transition'\r\n                    :tiled = false\r\n                />\r\n            </vl-layer-tile>\r\n            \r\n            <vl-layer-vector v-for=\"enterprise in arrEmpresas\" v-bind:key=\"`${enterprise.id}_1_${timestamp}`\" :z-index=\"3\">\r\n                <vl-source-vector ref=\"drawTarget\" v-if=\"enterprise.parcels\" :features=\"enterprise.parcels.features\" />\r\n                <vl-style-func :factory=\"pointsStyleFunc\" />\r\n            </vl-layer-vector>\r\n            \r\n            <vl-interaction-select v-if=\"verCrearParcel\" :id=\"`modify_target_${timestamp}`\" ref=\"selectInteraction\" ident=\"modify-target\" @select=\"selecionaPolygon\" :key=\"timestampSentinel\"></vl-interaction-select>\r\n            <vl-interaction-modify v-if=\"verCrearParcel\" source=\"modify-target\" @modifyend=\"editado\"></vl-interaction-modify>\r\n            \r\n            <vl-layer-vector :z-index=\"4\" v-bind:key=\"`the_source_indent_${timestampDrawPolygon}`\">\r\n                <vl-source-vector ident=\"the-source\" :features.sync=\"featuresNewPolygon\"></vl-source-vector>\r\n                <vl-style-box>\r\n                    <vl-style-stroke color=\"green\"></vl-style-stroke>\r\n                    <vl-style-fill color=\"rgba(255,255,255,0.5)\"></vl-style-fill>\r\n                </vl-style-box>\r\n            </vl-layer-vector>\r\n\r\n            <vl-interaction-draw v-bind:key=\"`the_source_${timestampDrawPolygon}`\" type=\"Polygon\" source=\"the-source\" v-if=\"!verCrearParcel && !verCrearParcelDraw\" @drawend=\"terminadoNewPolygon\"></vl-interaction-draw>\r\n\r\n            <vl-feature v-if=\"!olcultarInconoUbi\">\r\n                <vl-geom-point :coordinates.sync=\"coordenadasPunto\"></vl-geom-point>\r\n                <vl-style-box>\r\n                    <vl-style-icon src=\"https://d4smartfarming.smartbits-es.com/imgMail/icono-mapa.png\"></vl-style-icon>\r\n                </vl-style-box>\r\n            </vl-feature>\r\n            \r\n            <vl-layer-tile id=\"bingmaps\">\r\n                <vl-source-bingmaps :api-key=\"apiKeyBing\" :imagery-set=\"imagerySetBing\" :maxZoom=\"maxZoomBing\"></vl-source-bingmaps>\r\n            </vl-layer-tile>\r\n            \r\n        </vl-map>\r\n        \r\n        <template v-if=\"flagIndicatingDataHasBeenLoadedInVariables\">\r\n            <ControllerPanel\r\n                v-if=\"!isMobile()\"\r\n                :username=\"name\" \r\n                :arr-enterprises=\"arrEmpresas4List\"\r\n                :arr-cooperativas=\"arrCooperativas\"\r\n                :is_superuser=\"is_superuser\"\r\n                :is_systemadmin=\"is_systemadmin\"\r\n                :is_staff=\"is_staff\"\r\n                :is_enterpriseadmin=\"is_enterpriseadmin\"\r\n                :is_coop_user=\"is_coop_user\"\r\n                :checked-toggle-mostar-texto=\"checkedToggleMostarTexto\"\r\n                :layers-selector=\"layersSelector\"\r\n                :map-component=\"$refs.map.$map\"\r\n                :all-parcels-of-enterprises=\"allParcelsOfEnterprises\"\r\n                :all-parcels-of-enterprises-filter=\"allParcelsOfEnterprisesFilter\"\r\n                :sentinel-layer=\"SentinelLayer\"\r\n\r\n                v-on:setCenter=\"center = $event\"  \r\n                v-on:setCenterLocation=\"coordenadasPunto = $event\"  \r\n                v-on:setToggleMostrarTexto=\"checkedToggleMostarTexto = $event, getNow()\"\r\n                v-on:setEnterprise=\"arrEmpresas = $event, getNow(), arrEmpresas4List = $event\"\r\n                v-on:setSentinelLayer=\"getNowSentinel(), SentinelLayer = $event\"\r\n                v-on:setSentinelClearCache=\"getNowSentinel()\"\r\n                v-on:setSentinelOpacity=\"opacitylayer = $event\"\r\n                v-on:setFechaSentinel=\"time = $event\"\r\n                v-on:setAllParcelsOfEnterprises=\"allParcelsOfEnterprises = $event, allParcelsOfEnterprisesFilter = $event\"\r\n                v-on:setAllParcelsOfEnterprisesFilter=\"allParcelsOfEnterprisesFilter = $event\"\r\n                v-on:setOcultarInconoUbi=\"olcultarInconoUbi = $event\"\r\n            />\r\n            <ControllerPanel4Mobile\r\n                v-if=\"isMobile()\"\r\n                :username=\"name\" \r\n                :arr-enterprises=\"arrEmpresas4List\"\r\n                :arr-cooperativas=\"arrCooperativas\"\r\n                :is_superuser=\"is_superuser\"\r\n                :is_systemadmin=\"is_systemadmin\"\r\n                :checked-toggle-mostar-texto=\"checkedToggleMostarTexto\"\r\n                :layers-selector=\"layersSelector\"\r\n                :map-component=\"$refs.map.$map\"\r\n                :all-parcels-of-enterprises=\"allParcelsOfEnterprises\"\r\n                :all-parcels-of-enterprises-filter=\"allParcelsOfEnterprisesFilter\"\r\n                :sentinel-layer=\"SentinelLayer\"\r\n\r\n                v-on:setCenter=\"center = $event\"  \r\n                v-on:setToggleMostrarTexto=\"checkedToggleMostarTexto = $event, getNow()\"\r\n                v-on:setEnterprise=\"arrEmpresas = $event, getNow(), arrEmpresas4List = $event\"\r\n                v-on:setSentinelLayer=\"getNowSentinel(), SentinelLayer = $event\"\r\n                v-on:setSentinelClearCache=\"getNowSentinel()\"\r\n                v-on:setSentinelOpacity=\"opacitylayer = $event\"\r\n                v-on:setFechaSentinel=\"time = $event\"\r\n                v-on:setAllParcelsOfEnterprises=\"allParcelsOfEnterprises = $event, allParcelsOfEnterprisesFilter = $event\"\r\n                v-on:setAllParcelsOfEnterprisesFilter=\"allParcelsOfEnterprisesFilter = $event\"\r\n            />\r\n            <ControllerQuickEdit \r\n                v-if=\"ifQuickEdit && !is_coop_user && !is_staff\"\r\n                :parcel-selected=\"parcelSelected\"\r\n                :error-draw-msg=\"errorDrawMsg\"\r\n                :ver-error-draw=\"verErrorDraw\"\r\n                :coordinates-poly=\"coordinatesPoly\"\r\n                :value-name=\"valueName\"\r\n                :value-desc=\"valueDesc\"\r\n                :arr-enterprises=\"arrEmpresas\"\r\n                :arr-cooperativas=\"arrCooperativas\"\r\n                :area-for-new-polygon=\"areaForNewPolygon\"\r\n\r\n                v-on:setcoordinatesPoly=\"coordinatesPoly = $event, featuresNewPolygon = []\"\r\n                v-on:setifQuickEdit=\"ifQuickEdit = $event\"\r\n                v-on:setverErrorDraw=\"verErrorDraw = $event\"\r\n                v-on:setSentinelClearCache=\"getNowSentinel()\"\r\n                v-on:setClearParcels=\"getNow()\"\r\n                v-on:setEnterprise=\"arrEmpresas = $event, getNow(), arrEmpresas4List = $event\"\r\n                v-on:setAllParcelsOfEnterprises=\"allParcelsOfEnterprises = $event, allParcelsOfEnterprisesFilter = $event\"\r\n\r\n            />\r\n            <ControllerGoogleSearch\r\n                v-on:setCenter=\"center = $event, coordenadasPunto = $event\"  \r\n            />\r\n            \r\n            <ControllerQuickCreate \r\n                v-if=\"!ifQuickEdit && !is_coop_user && !is_staff\"\r\n                :ver-crear-parcel=\"verCrearParcel\"\r\n                :error-draw-msg=\"errorDrawMsg\"\r\n                :ver-error-draw=\"verErrorDraw\"\r\n                :coordinates-poly=\"coordinatesPoly\"\r\n                :arr-enterprises=\"arrEmpresas4List\"\r\n                :arr-enterprises-selected=\"empresaSelForCreateParcel ? empresaSelForCreateParcel : arrEmpresas\"\r\n                :arr-cooperativas=\"arrCooperativas\"\r\n                :is_superuser=\"is_superuser\"\r\n                :is_systemadmin=\"is_systemadmin\"\r\n                :area-for-new-polygon=\"areaForNewPolygon\"\r\n                :user=\"user\"\r\n\r\n                v-on:setVerCrearParcel=\"verCrearParcel = $event\"\r\n                v-on:setverErrorDraw=\"verErrorDraw = $event\"\r\n                v-on:setEnterpriseSelect=\"empresaSelForCreateParcel = $event\"\r\n                v-on:setClearFeatures=\"featuresNewPolygon = []\"\r\n                v-on:setVerCrearParcelDraw=\"verCrearParcelDraw = $event\"\r\n                v-on:clearCacheDraw=\"getNowRefreshDrawPolygon()\"\r\n                v-on:setSentinelClearCache=\"getNowSentinel()\"\r\n                v-on:setcoordinatesPoly=\"coordinatesPoly = $event, featuresNewPolygon = []\"\r\n                v-on:setEnterprise=\"arrEmpresas = $event, getNow(), arrEmpresas4List = $event\"\r\n                v-on:setAllParcelsOfEnterprises=\"allParcelsOfEnterprises = $event, allParcelsOfEnterprisesFilter = $event\"\r\n            />\r\n        </template>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {getProfile, getPermisos} from '@/auth/index'\r\nimport {getAllEnterprises, getLayersFromSentinel, getEnterprise} from '@/crudFunctions/crudEnterprise'//getEnterprise\r\nimport {getAllCooperatives, getCooperative} from '@/crudFunctions/crudCooperativas'\r\nimport ControllerPanel from '@/components/mapController/ControllerPanel.vue'\r\nimport ControllerPanel4Mobile from '@/components/mapController/ControllerPanel4Mobile.vue'\r\nimport ControllerQuickEdit from '@/components/mapController/ControllerQuickEdit.vue'\r\nimport ControllerGoogleSearch from '@/components/mapController/ControllerGoogleSearch.vue'\r\nimport ControllerQuickCreate from '@/components/mapController/ControllerQuickCreate.vue'\r\nimport {checkValidPolygon} from '@/crudFunctions/crudEnterprise'\r\nimport proj4 from 'proj4'\r\nimport Style from 'ol/style/Style'\r\nimport Text from 'ol/style/Text'\r\nimport Fill from 'ol/style/Fill'\r\nimport Stroke from 'ol/style/Stroke'\r\nimport L from 'leaflet'\r\nimport { getArea } from 'ol/sphere';\r\nimport axios from 'axios'\r\n//import Polygon from 'ol/geom/Polygon'\r\nexport default {\r\n    name: 'MapComponent4',\r\n    components: {ControllerPanel, ControllerQuickEdit, ControllerGoogleSearch,ControllerPanel4Mobile, ControllerQuickCreate\r\n    },\r\n    data() {\r\n        return {\r\n            flagIndicatingDataHasBeenLoadedInVariables: false,\r\n            //Usuario\r\n            is_superuser: false,\r\n            is_staff: false,\r\n            is_systemadmin: false,\r\n            is_enterpriseadmin: false,\r\n            is_coop_user: false,\r\n            //BingMap\r\n            apiKeyBing: this.$apiKeyBing,\r\n            imagerySetBing: `AerialWithLabels`,\r\n            zoom: 15,\r\n            center: [-3.8225970954841486, 40.28385074244977 ],\r\n            maxZoomBing: 20,\r\n            isActiveLoading: false,\r\n            isVisibleLoad: false,\r\n            name: 'pruebas',\r\n            //Parcelas\r\n            parcelas: {},\r\n            //Empresas sel\r\n            arrEmpresas: [],\r\n            arrCooperativas: [],\r\n            arrEmpresas4List: [],\r\n            //Sentinel layer tile controller\r\n            urlSentinel: `${this.$sentinelURL}/ogc/wms/`,\r\n            minZoom:6,\r\n            maxZoom:16,\r\n            preset:'AGRICULTURE',\r\n            layers:'AGRICULTURE',\r\n            time:`2019-01-01/${this.getNow()}`,\r\n            serverType: 'geoserver',\r\n            opacitylayer: 0.5,\r\n            transition: 0,\r\n            SentinelLayer: 'AGRICULTURE',\r\n            timestamp: 0,\r\n            timestampSentinel: 0,\r\n            timestampDrawPolygon: 0,\r\n            checkedToggleMostarTexto: false,\r\n            layersSelector: [],\r\n            //ModificarParcela\r\n            keyModificar: 0,\r\n            allParcelsOfEnterprises: [],\r\n            allParcelsOfEnterprisesFilter: [],\r\n            //if\r\n            ifQuickEdit: false,\r\n            //\r\n            parcelSelected: Object,\r\n            verErrorDraw: false,\r\n            errorDrawMsg: '',\r\n            coordinatesPoly: '',\r\n            //Crear Parcela\r\n            featuresNewPolygon: [],\r\n            verCrearParcel: true,\r\n            verCrearParcelDraw: false,\r\n            empresaSelForCreateParcel: '',\r\n            refreshDibujo: 0,\r\n            //editarParcel\r\n            valueDesc: '',\r\n            valueName: '',\r\n            areaForNewPolygon: 0,\r\n            //\r\n            user: '',\r\n            coordenadasPunto: [0, 0],\r\n            olcultarInconoUbi: false\r\n        }\r\n    },\r\n    methods: {\r\n        isMobile() {\r\n            if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        },\r\n        getNowSentinel() {\r\n            const today = new Date();\r\n            const date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n            const time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n            const dateTime = date +' '+ time;\r\n            this.timestampSentinel = dateTime;\r\n        },\r\n        getNowRefreshDrawPolygon() {\r\n            const today = new Date();\r\n            const date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n            const time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n            const dateTime = date +' '+ time;\r\n            this.timestampDrawPolygon = dateTime;\r\n        },\r\n        getNow() {\r\n            const today = new Date();\r\n            const date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n            const time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n            const dateTime = date +' '+ time;\r\n            this.timestamp = dateTime;\r\n        },\r\n        pointsStyleFunc(){\r\n            return feature => {\r\n                let baseStyle = new Style({\r\n                    fill: new Fill({\r\n                        color: \"rgba(255,255,255,0.0)\",\r\n                    }),\r\n                    stroke: new Stroke({\r\n                        color: \"rgba(0, 0, 255, 1)\",\r\n                        with: 5\r\n                    }),\r\n                    text: new Text({\r\n                        overflow: this.checkedToggleMostarTexto,\r\n                        text: `${feature.get('name')} \\n ${feature.get('description') ? feature.get('description') : ''} \\n ${feature.get('area') ? feature.get('area').toFixed(2)+'Ha' : '' } / ${feature.get('area') ? this.metricaparcela(feature.get('area'))+'Acre' : '' }`,\r\n                        font: \"14px IBM Plex Sans\",\r\n                        fill: new Fill({\r\n                            //color: \"#161616\",\r\n                            color: \"#FFFFFF\",\r\n                        }),\r\n                        stroke: new Stroke({\r\n                            color: \"#161616\",\r\n                            width: 4.5\r\n                        }),\r\n                    }),\r\n                })\r\n                return [\r\n                    baseStyle,\r\n                ]\r\n            }\r\n        },\r\n        metricaparcela(area){\r\n            const onehecttoAcre = 2.4710538146717\r\n            const acre = onehecttoAcre * area\r\n            this.metric = \"Acre\"\r\n            return  acre.toFixed(2)\r\n        \r\n        },\r\n\r\n        selecionaPolygon(po){\r\n            this.ifQuickEdit = true\r\n            this.coordinatesPoly = ''\r\n            this.verErrorDraw = true\r\n            this.verErrorDraw = true\r\n            const result = this.allParcelsOfEnterprises.filter(parcel => parcel.id == po.id_)\r\n            this.parcelSelected = result[0]\r\n            const coordenadasGeometricas = po.getGeometry().getExtent()\r\n            const ex = coordenadasGeometricas[0] + (coordenadasGeometricas[2]-coordenadasGeometricas[0])/2;\r\n            const ye = coordenadasGeometricas[1] + (coordenadasGeometricas[3]-coordenadasGeometricas[1])/2;\r\n            var source = new proj4.Proj('EPSG:3785'); \r\n            var dest = new proj4.Proj('EPSG:4326');  \r\n            const newCenter = proj4(source, dest, [ex, ye])\r\n            this.center = [newCenter[0], newCenter[1]]\r\n            const enterprise_id = po.values_.enterprise_id\r\n            this.valueName = po.values_.name\r\n            this.valueDesc = po.values_.description\r\n            this.comprobarCoordenadas(po.getGeometry().getCoordinates(), enterprise_id, po.id_)\r\n        },\r\n        terminadoNewPolygon(p){\r\n            console.info(p)\r\n            this.verCrearParcelDraw = true\r\n            this.areaForNewPolygon = (Math.round((getArea(p.feature.getGeometry())/ 10000) * 10000) / 10000)\r\n            const coordinatesEditadas = p.feature.getGeometry().getCoordinates()\r\n            this.comprobarCoordenadas(coordinatesEditadas, (this.empresaSelForCreateParcel ? this.empresaSelForCreateParcel[0].id : this.arrEmpresas[0].id), 0)\r\n        },\r\n        editado(p){\r\n            const enterprise_id = p.features.array_[0].values_.enterprise_id\r\n            const coordinatesEditadas = p.features.array_[0].getGeometry().getCoordinates()\r\n            this.areaForNewPolygon = (Math.round((getArea(p.features.array_[0].getGeometry())/ 10000) * 10000) / 10000)\r\n            //const area = (Math.round((getArea(p.features.array_[0].getGeometry()) / 10000) * 10000) / 10000)\r\n            this.comprobarCoordenadas(coordinatesEditadas, enterprise_id, p.features.array_[0].id_)\r\n            //if(this.parcelaSeleccionada){\r\n                //this.coordinatesBuenas(this.coordinatesEditadas)\r\n            //}\r\n            \r\n            //this.verErrorDraw = false\r\n        },\r\n        getBBOX(parcel){\r\n            const polygon = L.polygon(parcel.geometry.coordinates)\r\n\r\n            const bboxP = `${polygon.getBounds()._northEast.lng},${polygon.getBounds()._northEast.lat},${polygon.getBounds()._southWest.lng},${polygon.getBounds()._southWest.lat}`\r\n            return bboxP\r\n        },\r\n        getBBOX2(parcel){\r\n            const polygon = L.polygon(parcel.geometry.coordinates)\r\n\r\n            const bboxP = [polygon.getBounds()._northEast.lng,polygon.getBounds()._northEast.lat,polygon.getBounds()._southWest.lng,polygon.getBounds()._southWest.lat]\r\n            return bboxP\r\n        },\r\n        comprobarCoordenadas(coords, enterprise, idParcela){\r\n            var source = new proj4.Proj('EPSG:3785'); \r\n            var dest = new proj4.Proj('EPSG:4326'); \r\n            let newCenter = Array;\r\n            let polygonObject= 'POLYGON(('\r\n            for (var i = 0; i < coords[0].length; i++) {\r\n                newCenter = proj4(source, dest, [coords[0][i][0], coords[0][i][1]])\r\n                polygonObject += newCenter[0]+' '+newCenter[1]\r\n                if(i != (coords[0].length-1)){\r\n                    polygonObject += ', '\r\n                }\r\n            }\r\n            polygonObject += '))';\r\n\r\n            checkValidPolygon(polygonObject, enterprise)\r\n            .then(response => {\r\n                if(response.data.features.length){\r\n                    const result = response.data.features.filter(feature => {\r\n                        if(feature.id != idParcela){\r\n                            return feature\r\n                        }\r\n                    })\r\n                    if(result.length){\r\n                        let parcelsName = ''\r\n                        result.map(resultado => {\r\n                            parcelsName += resultado.properties.name + ' '\r\n                        })\r\n                        this.errorDrawMsg = this.$t('map.parcela_solapada_con') + '' + parcelsName\r\n                        this.verErrorDraw = true\r\n                        this.coordinatesPoly = ''\r\n                    }else{\r\n                        this.verErrorDraw = false\r\n                        this.errorDrawMsg = ''\r\n                        this.coordinatesPoly = polygonObject\r\n                        this.compruebaParcelaSimple(polygonObject)\r\n                    }\r\n                }else{\r\n                    this.verErrorDraw = false\r\n                    this.errorDrawMsg = ''\r\n                    this.coordinatesPoly = polygonObject\r\n                    this.compruebaParcelaSimple(polygonObject)\r\n                }\r\n            })\r\n        },\r\n        compruebaParcelaSimple(polygonObject){\r\n            let path = `${this.$apiURL}/parcel_valid/?polygon=${polygonObject}`;\r\n            axios.defaults.headers.common['Authorization'] = \"Bearer \"+sessionStorage.getItem(\"apiAccess\")\r\n            axios\r\n            .get(path)\r\n            .then(response=>{\r\n                if(response.data == \"False\"){\r\n                    this.errorDrawMsg = this.$t('map.parcela_solapada_misma')\r\n                    this.verErrorDraw = true\r\n                }else{\r\n                    this.verErrorDraw = false\r\n                    this.errorDrawMsg = ''\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n            })\r\n        },\r\n    },\r\n    mounted: function () {\r\n        \r\n        //console.info('User Logged')\r\n    },\r\n    beforeCreate(){\r\n        this.isActiveLoading = false\r\n        this.isVisibleLoad = false\r\n        //* 1 - Obtenemos la info del usuario, a que empresa pertenece y si es administrador\r\n        getProfile()\r\n        .then(response => {\r\n            const user = response.data[0]\r\n            console.info(user)\r\n            this.user = user\r\n            getPermisos(response.data[0].user)\r\n            .then(response => {\r\n                this.is_superuser = response.data.is_superuser\r\n                this.is_staff = response.data.is_staff\r\n                this.is_systemadmin = response.data.is_systemadmin\r\n                this.is_enterpriseadmin = response.data.is_enterpriseadmin\r\n                this.is_coop_user = user.cooperative_user\r\n                /*\r\n                //*Obtenemos la empresa del usuario\r\n                const enterprise_id = user.enterprise_id\r\n                getEnterprise(enterprise_id)\r\n                .then(async response => {\r\n                    this.parcelas = response.data.parcels\r\n                    await this.arrEmpresas.push(response.data)\r\n                    this.flagIndicatingDataHasBeenLoadedInVariables = false\r\n                    this.timestamp()\r\n                })\r\n                */\r\n                \r\n                if(this.is_superuser || this.is_systemadmin){\r\n                    getAllEnterprises()\r\n                    .then(async response => {\r\n                        this.arrEmpresas = [response.data[0]]\r\n                        this.arrEmpresas4List = response.data\r\n                        const arrParcels = []\r\n                        //carga de la primera empresa\r\n                        const empresaFirst = [response.data[0]]\r\n                        //response.data[0].map(enterprise => {\r\n                        empresaFirst.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                }else if((this.is_enterpriseadmin || this.is_staff) && !this.is_coop_user){ \r\n                    getEnterprise(user.enterprise_id)\r\n                    .then(async response => {\r\n                        this.arrEmpresas = [response.data]\r\n                        this.arrEmpresas4List = [response.data]\r\n                        const arrParcels = []\r\n                        response.data.parcels.features.map(parcel => {\r\n                            arrParcels.push(parcel)\r\n                        })\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                }else if(this.is_coop_user){\r\n                    getCooperative(user.enterprise_id)\r\n                    .then(response => {\r\n                        this.arrCooperativas = [response.data]\r\n                        //this.arrEmpresas = response.data.enterprises\r\n                        this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n                    })\r\n                }\r\n\r\n                if(this.is_superuser || this.is_systemadmin){\r\n                    getAllCooperatives()\r\n                    .then(async response => {\r\n                        this.arrCooperativas = response.data\r\n                    })\r\n                }\r\n                this.isActiveLoading = false\r\n                this.isVisibleLoad = false\r\n            })\r\n        })\r\n        getLayersFromSentinel().then(response => {\r\n            this.layersSelector = response.data\r\n        })\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n    #map{\r\n        width: 100%; height: 100%; position:fixed\r\n    }\r\n    \r\n    .mapa{\r\n        width: 100%; height: 100%!important; position: fixed\r\n    }\r\n    #cargando{\r\n        position:fixed\r\n    }\r\n</style>"]}]}