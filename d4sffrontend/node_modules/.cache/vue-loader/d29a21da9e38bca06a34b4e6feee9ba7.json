{"remainingRequest":"C:\\Users\\respana\\source\\D4SF\\dataforsmartfarming\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\respana\\source\\D4SF\\dataforsmartfarming\\src\\components\\adminActions\\ParcelsToCheckHasComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\respana\\source\\D4SF\\dataforsmartfarming\\src\\components\\adminActions\\ParcelsToCheckHasComponent.vue","mtime":1624457768692},{"path":"C:\\Users\\respana\\source\\D4SF\\dataforsmartfarming\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\respana\\source\\D4SF\\dataforsmartfarming\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\respana\\source\\D4SF\\dataforsmartfarming\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\respana\\source\\D4SF\\dataforsmartfarming\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ParcelsToCheckHasComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"ParcelsToCheckHasComponent.vue","sourceRoot":"src/components/adminActions","sourcesContent":["<template>\r\n    <div class=\"bx--grid\">\r\n        <div id=\"txt-explicativo\" class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <p>Check las has de la parcela</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <cv-select\r\n                    theme=\"\"\r\n                    :label=\"$t('map.listado_empresas')\"\r\n                    :hide-label=\"false\"\r\n                    :inline=\"false\"\r\n                    :disabled=\"false\"\r\n                    @change=\"seleccionaEmpresa\"\r\n                    v-model=\"selectValueEmpresa\"\r\n                >\r\n                    <cv-select-option :value=\"''\" disabled selected hidden>{{$t(\"map.sel_empresa\")}}</cv-select-option>\r\n                    <cv-select-optgroup label=\"Todas las Empresas\">\r\n                        <cv-select-option :value=\"`all`\">{{$t(\"map.most_todas_empresas\")}}</cv-select-option>\r\n                        <cv-select-option v-for=\"empresa in arrEmpresasList\" :value=\"String(empresa.id)\"  v-bind:key=\"empresa.id\">\r\n                            {{empresa.name}}\r\n                        </cv-select-option>\r\n                    </cv-select-optgroup>\r\n                    <cv-select-optgroup :label=\"`Cooperativa ${cooperativa.name}`\" v-bind:key=\"cooperativa.id\" v-for=\"cooperativa in arrCooperativas\">\r\n                        <cv-select-option :value=\"`coop_${cooperativa.id}`\">{{$t(\"map.most_todas_empresas\")}}</cv-select-option>\r\n                        <cv-select-option v-for=\"empresa in cooperativa.enterprises\" :value=\"String(empresa.id)\"  v-bind:key=\"empresa.id\">\r\n                            {{empresa.name}}\r\n                        </cv-select-option>\r\n                    </cv-select-optgroup>\r\n                </cv-select>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"bx--row\">\r\n            <div class=\"bx--col\">\r\n                <div id=\"sentinelLayersList\">\r\n                    <p style=\"font-size: 14px\">Selecciona a continuación las parcelas sobre las que quieres realizar la consulta. Puedes utilizar el buscador para encontrar la/s parcela/s que necesitas. Para poder ver el nombre de todas las parcelas, por favor utiliza el selector que encontrarás en la parte inferior de la tabla.</p>\r\n                    <br>\r\n                    <cv-data-table\r\n                        :sortable=\"false\"\r\n                        @pagination=\"actionOnPagination\"\r\n                        :pagination=\"{ \r\n                            numberOfItems: allParcelsOfEnterprisesFilter.length, \r\n                            pageSizes: [\r\n                                {\r\n                                    value: 10,\r\n                                    label: '10'\r\n                                }, \r\n                                {\r\n                                    value: 15,\r\n                                    label: '15'\r\n                                },\r\n                                {\r\n                                    value: 20,\r\n                                    label: '20'\r\n                                }, \r\n                                {\r\n                                    value: 25,\r\n                                    label: '25'\r\n                                }, \r\n                                {\r\n                                    value: allParcelsOfEnterprisesFilter.length,\r\n                                    label: 'Todas'\r\n                                }\r\n                            ] \r\n                        }\"\r\n                        :columns=\"[\r\n                            {\r\n                                key: 'name',\r\n                                label: this.$t('graficos.nombre'),\r\n                                'sortable': false\r\n                            },\r\n                            {\r\n                                key: 'description',\r\n                                label: this.$t('graficos.descrip'),\r\n                                'sortable': false\r\n                            },\r\n                            {\r\n                                key: 'heactareas en BBDD',\r\n                                label: this.$t('graficos.hectareas'),\r\n                                'sortable': false\r\n                            },\r\n                            {\r\n                                key: 'heactareas Recalculadas',\r\n                                label: this.$t('graficos.hectareas'),\r\n                                'sortable': false\r\n                            },\r\n                            {\r\n                                key: 'enterprise',\r\n                                label: 'Empresa',\r\n                                'sortable': false\r\n                            },\r\n                        ]\"\r\n                        :title=\"$t('graficos.parcel_list')\"\r\n                        v-model=\"rowSelects\"\r\n                        ref=\"tableLstadoT2MultiCoop\"\r\n                        searchLabel=\"Filter\" searchPlaceholder=\"Filter\" searchClearLabel=\"Clear filter\"\r\n                    >\r\n                        <template v-if=\"true\" slot=\"actions\">\r\n                            <cv-search :placeholder=\"$t('graficos.buscar_nombre')\" @input=\"onBuscar\"></cv-search>\r\n                        </template>\r\n                        <template v-if=\"true\" slot=\"batch-actions\">\r\n                            <cv-button @click=\"comprobar\">\r\n                                Pruebas\r\n                            </cv-button>  \r\n                        </template>\r\n                        <template slot=\"data\">\r\n                            <cv-data-table-row\r\n                                v-for=\"feature in allParcelsOfEnterprisesFilter.slice(start, start+length)\"\r\n                                :key=\"`${feature.id}`\"\r\n                                :value=\"`${feature.id}`\"\r\n                                :aria-label-for-batch-checkbox=\"`Custom aria label for row ${feature.id} batch`\"\r\n                            >\r\n                                <cv-data-table-cell>{{feature.id+' - '}}{{feature.properties.name}}</cv-data-table-cell>\r\n                                <cv-data-table-cell>{{feature.properties.description}}</cv-data-table-cell>\r\n                                <cv-data-table-cell>{{feature.properties.area.toFixed(2)}}</cv-data-table-cell>\r\n                                <cv-data-table-cell>{{getCalculateHas(feature.id)}} {{getCalculateHas(feature.id) != feature.properties.area.toFixed(2) ? '⚠' : ''}}</cv-data-table-cell>\r\n                                <cv-data-table-cell>{{getNameEnterprise(feature.properties.enterprise_id)}} </cv-data-table-cell>\r\n                            </cv-data-table-row>\r\n                        </template>\r\n                    </cv-data-table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport {getAllEnterprises, getEnterprise} from '@/crudFunctions/crudEnterprise'//getFechasSentinelForInformes\r\nimport {getCooperative} from '@/crudFunctions/crudCooperativas'\r\nimport { getArea } from 'ol/sphere';\r\nimport Feature from 'ol/Feature';\r\nimport Polygon from 'ol/geom/Polygon';\r\nexport default {\r\n    name: 'ParcelsToSentinelComponent',\r\n    components: {\r\n    },\r\n    data(){\r\n        return {\r\n            selectValueEmpresa: '',\r\n            //Empresas sel\r\n            arrEmpresas: [],\r\n            arrEmpresasList: [],\r\n            arrCooperativas: [],\r\n            allParcelsOfEnterprises: [],\r\n            allParcelsOfEnterprisesFilter: [],\r\n            start: 0,\r\n            length: 10,\r\n\r\n            rowSelects: [],\r\n            listadoParcelas: Array,\r\n            listadoParcelasFilter: Array,\r\n            rowSize: \"\",\r\n            autoWidth: false,\r\n            sortable: false,\r\n            title: \"Listado de parcelas sin Instancia en Sentinel\",\r\n            actionBarAriaLabel: \"Custom action bar aria label\",\r\n            batchCancelLabel: \"Cancel\",\r\n            zebra: true,\r\n            columns: [\r\n                {\r\n                    key: 'name',\r\n                    label: this.$t('graficos.nombre'),\r\n                },\r\n                {\r\n                    key: 'description',\r\n                    label: this.$t('graficos.descrip')\r\n                },\r\n                {\r\n                    key: 'heactareas',\r\n                    label: this.$t('graficos.hectareas'),\r\n                },\r\n                {\r\n                    key: 'enterprise',\r\n                    label: `Empresa`,\r\n                },\r\n            ],\r\n        }\r\n    },\r\n    methods: {\r\n        comprobar(){\r\n            console.info(this.rowSelects)\r\n            const result = this.allParcelsOfEnterprises.filter(parcel => this.rowSelects.includes(String(parcel.id)))\r\n            console.info(result)\r\n            console.info(result[0].geometry)\r\n            const feature = new Feature({\r\n                geometry: new Polygon(result[0].geometry.coordinates)\r\n            })\r\n            feature.getGeometry().transform('EPSG:4326', 'EPSG:3857')\r\n            console.info(feature.getGeometry())\r\n            const areaForNewPolygon = (Math.round((getArea(feature.getGeometry())/ 10000) * 10000) / 10000)\r\n            console.info(areaForNewPolygon)\r\n        },\r\n        getCalculateHas(idParcel){\r\n            const result = this.allParcelsOfEnterprises.filter(parcel => idParcel == parcel.id)\r\n            const feature = new Feature({\r\n                geometry: new Polygon(result[0].geometry.coordinates)\r\n            })\r\n            feature.getGeometry().transform('EPSG:4326', 'EPSG:3857')\r\n            return (Math.round((getArea(feature.getGeometry())/ 10000) * 10000) / 10000).toFixed(2)\r\n        },\r\n        getNameEnterprise(value){\r\n            const result = this.arrEmpresas.filter(enterprise => enterprise.id == value)\r\n            return result[0].name\r\n        },\r\n        actionOnPagination(ev){\r\n            this.start = ev.start-1\r\n            this.length = ev.length\r\n        },\r\n        onBuscar(busqueda){\r\n            if(busqueda){\r\n                const result = this.allParcelsOfEnterprises.filter(parcel => parcel.properties.name.toUpperCase().includes(busqueda.toUpperCase()))\r\n                this.allParcelsOfEnterprisesFilter = result\r\n            }else{\r\n                this.allParcelsOfEnterprisesFilter = this.allParcelsOfEnterprises\r\n            }\r\n        },\r\n        seleccionaEmpresa(empresa){\r\n            const arrParcels = []\r\n            if(empresa == 'all'){\r\n                getAllEnterprises()\r\n                    .then(async response => {\r\n                        response.data.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.arrEmpresas = response.data\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n            }else{\r\n                const result = empresa.split('_')\r\n                if(result[0] == 'coop'){\r\n                    getCooperative(result[1])\r\n                    .then(response => {\r\n                        response.data.enterprises.map(enterprise => {\r\n                            enterprise.parcels.features.map(parcel => {\r\n                                arrParcels.push(parcel)\r\n                            })\r\n                        })\r\n                        this.arrEmpresas = response.data.enterprises\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n                }else{\r\n                    getEnterprise(empresa)\r\n                    .then(async response => {\r\n                        response.data.parcels.features.map(parcel => {\r\n                            arrParcels.push(parcel)\r\n                        })\r\n                        this.arrEmpresas = [response.data]\r\n                        this.allParcelsOfEnterprises = arrParcels\r\n                        this.allParcelsOfEnterprisesFilter = arrParcels\r\n                    })\r\n                }\r\n            }\r\n        },\r\n    },\r\n    mounted: function () {\r\n        //console.info('User Logged')\r\n    },\r\n    beforeCreate(){\r\n        getAllEnterprises()\r\n        .then(async response => {\r\n            this.arrEmpresas = response.data\r\n            this.arrEmpresasList = response.data\r\n            const arrParcels = []\r\n            response.data.map(enterprise => {\r\n                enterprise.parcels.features.map(parcel => {\r\n                    arrParcels.push(parcel)\r\n                })\r\n            })\r\n            this.allParcelsOfEnterprises = arrParcels\r\n            this.allParcelsOfEnterprisesFilter = arrParcels\r\n            this.flagIndicatingDataHasBeenLoadedInVariables = true\r\n        })\r\n    }\r\n}\r\n</script>\r\n"]}]}