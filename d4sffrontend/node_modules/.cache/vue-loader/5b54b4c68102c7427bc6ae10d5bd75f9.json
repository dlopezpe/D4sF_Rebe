{"remainingRequest":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\src\\views\\AdminEnterprises.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\src\\views\\AdminEnterprises.vue","mtime":1622545923166},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\icamon.SMB\\Desktop\\Parcelas\\dataforsmartfarming\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOw0KaW1wb3J0IG5ld0VudGVycHJpc2UgZnJvbSAiLi4vY29tcG9uZW50cy9uZXdFbnRlcnByaXNlLnZ1ZSI7DQppbXBvcnQgQm9hcmQgZnJvbSAiQC92aWV3cy9Cb2FyZC52dWUiOw0KaW1wb3J0IEZvb3RlciBmcm9tICIuLi92aWV3cy9Gb290ZXIudnVlIjsNCg0KaW1wb3J0IEFsZXJ0YUdlbmVyYWwgZnJvbSAiLi4vY29tcG9uZW50cy9BbGVydGFHZW5lcmFsIjsNCmV4cG9ydCBkZWZhdWx0IHsNCiAgICBuYW1lOiAiQWRtaW5FbnRlcnByaXNlcyIsDQogICAgcHJvcHM6IHt9LA0KICAgIGNvbXBvbmVudHM6IHsNCiAgICAgICAgbmV3RW50ZXJwcmlzZSwNCiAgICAgICAgRm9vdGVyLA0KICAgICAgICBBbGVydGFHZW5lcmFsLA0KICAgICAgICBCb2FyZA0KICAgIH0sDQogICAgZGF0YSgpIHsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgIGJhc2ljUGFnaW5hdGlvbjogZmFsc2UsDQogICAgICAgICAgICB1c2VfYmF0Y2hBY3Rpb25zOiB0cnVlLA0KICAgICAgICAgICAgaGFzRXhwYW5kaW5nUm93czogZmFsc2UsDQogICAgICAgICAgICB1c2Vfc2xvdHRlZERhdGE6IHRydWUsDQogICAgICAgICAgICB2aXNpYmxlQWxlcnRhRWxpbWluYXI6IGZhbHNlLA0KICAgICAgICAgICAgc3RhcnQ6IDAsDQogICAgICAgICAgICBsZW5ndGg6IDEwLA0KICAgICAgICAgICAgY29sdW1uczM6IFsNCiAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgIGtleTogIm5hbWUiLA0KICAgICAgICAgICAgICAgICAgICBsYWJlbDogdGhpcy4kdCgnYWRtaW5FbnRlcnByaXNlLm5vbWJyZScpDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgIGtleTogImNpZiIsDQogICAgICAgICAgICAgICAgICAgIGxhYmVsOiB0aGlzLiR0KCdhZG1pbkVudGVycHJpc2UuY2lmJykNCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAga2V5OiAiaGVjdGFyZXMiLA0KICAgICAgICAgICAgICAgICAgICBsYWJlbDogdGhpcy4kdCgnYWRtaW5FbnRlcnByaXNlLmhlY3RhcmVhc19kaXNwb25pYmxlcycpDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgIGtleTogImhlY3RhcmVzVXNlZCIsDQogICAgICAgICAgICAgICAgICAgIGxhYmVsOiB0aGlzLiR0KCdhZG1pbkVudGVycHJpc2UuaGVjdGFyZWFzX3VzYWRhcycpDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIF0sDQogICAgICAgICAgICBlbnRlcnByaXNlczogW10sDQogICAgICAgIH0NCiAgICB9LA0KICAgIG1ldGhvZHM6IHsNCg0KICAgICAgICBjb3VudFBhcmNlbHMocGFyY2Vscyl7DQogICAgICAgICAgICAvL2NvbnN0IHJlZ3ggPSAnL0hhL2c7Jw0KICAgICAgICAgICAgbGV0IGhlY3RhcmVhc19kaXNwb25pYmxlcyA9IDAgICAgICAgIA0KICAgICAgICAgICAgcGFyY2Vscy5mZWF0dXJlcy5mb3JFYWNoKHBhcmNlbCA9PnsNCiAgICAgICAgICAgICAgICBoZWN0YXJlYXNfZGlzcG9uaWJsZXMgPSAoaGVjdGFyZWFzX2Rpc3BvbmlibGVzICsgcGFyY2VsLnByb3BlcnRpZXMuYXJlYSkNCiAgICAgICAgICAgIH0pDQogICAgICAgICAgICBjb25zdCB0b3RhbCA9IE1hdGgucm91bmQoKGhlY3RhcmVhc19kaXNwb25pYmxlcyArIE51bWJlci5FUFNJTE9OKSAqIDEwMCkgLyAxMDANCiAgICAgICAgICAgIHJldHVybiB0b3RhbC50b1N0cmluZygpLnJlcGxhY2UoJy4nLCAnLCcpDQogICAgICAgICAgICANCiAgICAgICAgfSwNCiAgICAgICAgc2hvd0FsZXJ0KCl7DQogICAgICAgICAgICB0aGlzLm1lbnNhamVBbGVydGEgPSAiRW4gZGVzYXJyb2xsbyINCiAgICAgICAgICAgIHRoaXMudGlwb0FsZXJ0YSA9ICdpbmZvJw0KICAgICAgICAgICAgdGhpcy4kcmVmcy5hbGVydGFHZW5lcmFsLnZlckFsZXJ0YSgpDQogICAgICAgIH0sDQogICAgICAgIGFjdGlvbk9uUGFnaW5hdGlvbihldil7DQogICAgICAgICAgICB0aGlzLnN0YXJ0ID0gZXYuc3RhcnQtMQ0KICAgICAgICAgICAgdGhpcy5sZW5ndGggPSBldi5sZW5ndGgNCiAgICAgICAgfSwNCiAgICAgICAgb2J0ZW5lckxpc3RhRW1wcmVzYXMoKXsNCiAgICAgICAgICAgIGNvbnN0IHBhdGggPSBgJHt0aGlzLiRhcGlVUkx9L2VudGVycHJpc2VzL2A7DQogICAgICAgICAgICBheGlvcy5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vblsnQXV0aG9yaXphdGlvbiddID0gIkJlYXJlciAiK3Nlc3Npb25TdG9yYWdlLmdldEl0ZW0oImFwaUFjY2VzcyIpDQogICAgICAgICAgICBheGlvcw0KICAgICAgICAgICAgLmdldChwYXRoKQ0KICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gew0KICAgICAgICAgICAgICAgIHRoaXMuZW50ZXJwcmlzZXMgPSByZXNwb25zZS5kYXRhDQogICAgICAgICAgICB9KS5jYXRjaChlcnJvciA9PnsNCiAgICAgICAgICAgICAgICBjb25zb2xlLmluZm8oZXJyb3IpDQogICAgICAgICAgICB9KQ0KICAgICAgICB9LA0KICAgICAgICBlZGl0YXJFbXByZXNhKCl7DQogICAgICAgICAgICBjb25zdCByb3dTZWxlY2Npb25hZG8gPSB0aGlzLiRyZWZzLnRhYmxlLnNlbGVjdGVkUm93cw0KICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goYC9lZGl0LWVudGVycHJpc2U/ZW50ZXJwcmlzZT0ke3Jvd1NlbGVjY2lvbmFkb31gKTsNCiAgICAgICAgfSwNCiAgICAgICAgbnVldmFFbXByZXNhKCl7DQogICAgICAgICAgICBjb25zdCByb3dTZWxlY2Npb25hZG8gPSB0aGlzLiRyZWZzLnRhYmxlLnNlbGVjdGVkUm93czsNCiAgICAgICAgICAgIGlmIChyb3dTZWxlY2Npb25hZG8ubGVuZ3RoID4gMSkgew0KICAgICAgICAgICAgICAgIHRoaXMubWVuc2FqZUFsZXJ0YSA9IGAke3RoaXMuJHQoJ2FkbWluRW50ZXJwcmlzZS5zb2xvX3VuYV9lbXByZXNhJyl9YDsNCiAgICAgICAgICAgICAgICB0aGlzLiRyZWZzLmFsZXJ0YS52ZXJBbGVydGEoKQ0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICB0aGlzLnVzZXJTZWxlY2Npb25hZG8gPSByb3dTZWxlY2Npb25hZG9bMF0NCiAgICAgICAgICAgICAgICB0aGlzLiRyZWZzLm1vZGFsLm9wZW5Nb2RhbCgpDQogICAgICAgICAgICB9DQogICAgICAgICAgICANCiAgICAgICAgfSwNCiAgICAgICAgZWxpbWluYXJFbXByZXNhTW9kYWwoKXsNCiAgICAgICAgICAgIHRoaXMuJHJlZnMuYWxlcnRhX2VsaW1pbmFyLmRhdGFWaXNpYmxlID0gdHJ1ZQ0KICAgICAgICB9LA0KICAgICAgICBlbGltaW5hclVzdWFyaW8oKXsNCiAgICAgICAgICAgIGNvbnN0IHJvd1NlbGVjY2lvbmFkbyA9IHRoaXMuJHJlZnMudGFibGUuc2VsZWN0ZWRSb3dzDQogICAgICAgICAgICBsZXQgZmxhZyA9IGZhbHNlDQogICAgICAgICAgICByb3dTZWxlY2Npb25hZG8uZm9yRWFjaChlbGVtZW50ID0+IHsNCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlbGVtZW50KQ0KICAgICAgICAgICAgICAgIGNvbnN0IHBhdGggPSBgJHt0aGlzLiRhcGlVUkx9L2VudGVycHJpc2VzLyR7ZWxlbWVudH0vYA0KICAgICAgICAgICAgICAgIGF4aW9zDQogICAgICAgICAgICAgICAgLmRlbGV0ZShwYXRoKQ0KICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5vYnRlbmVyTGlzdGFFbXByZXNhcygpOw0KICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICAgLmNhdGNoKHJlc3BvbnNlID0+ew0KICAgICAgICAgICAgICAgICAgICBmbGFnID0gdHJ1ZQ0KICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5lcnJvcikNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgaWYoZmxhZyl7DQogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignZXJyb3InKQ0KICAgICAgICAgICAgICAgIHRoaXMubWVuc2FqZUFsZXJ0YSA9IGAke3RoaXMuJHQoJ2FkbWluRW50ZXJwcmlzZS5kZWxfZW1wcmVzYV9lcnJvcicpfWA7DQogICAgICAgICAgICAgICAgdGhpcy4kcmVmcy5hbGVydGEudmVyQWxlcnRhKCkNCiAgICAgICAgICAgIH1lbHNlew0KICAgICAgICAgICAgICAgIHRoaXMuJHJlZnMuYWxlcnRhX2VsaW1pbmFyLmhpZGUoKQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfSwNCiAgICBjcmVhdGVkKCl7DQogICAgICAgIHRoaXMub2J0ZW5lckxpc3RhRW1wcmVzYXMoKQ0KICAgIH0sDQogICAgbW91bnRlZCgpew0KDQogICAgfQ0KfQ0K"},{"version":3,"sources":["AdminEnterprises.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"AdminEnterprises.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div>\r\n        <Board />\r\n        <div class=\"bx--grid\" id=\"grid-admin\">\r\n            <div class=\"group-list\">\r\n                <cv-data-table\r\n                    :sortable=\"false\"\r\n                    :columns=\"[\r\n                {\r\n                    key: 'name',\r\n                    label: this.$t('adminEnterprise.nombre')\r\n                },\r\n                {\r\n                    key: 'cif',\r\n                    label: this.$t('adminEnterprise.cif')\r\n                },\r\n                {\r\n                    key: 'hectares',\r\n                    label: this.$t('adminEnterprise.hectareas_disponibles')\r\n                },\r\n                {\r\n                    key: 'hectaresUsed',\r\n                    label: this.$t('adminEnterprise.hectareas_usadas')\r\n                },\r\n            ]\"\r\n                    :title=\"$t('adminEnterprise.listado_empresas')\"\r\n                    ref=\"table\"\r\n                    :pagination=\"{ numberOfItems: enterprises.length, pageSizes: [10, 15, 20, 25, enterprises.length] }\" @pagination=\"actionOnPagination\"\r\n                >\r\n                    <template v-if=\"true\" slot=\"actions\">\r\n                        <cv-button small @click=\"nuevaEmpresa\">{{$t(\"adminEnterprise.add_empresa\")}}</cv-button>\r\n                    </template>\r\n                    <template v-if=\"use_batchActions\" slot=\"batch-actions\">\r\n                        <cv-button @click=\"eliminarEmpresaModal\">\r\n                            {{$t(\"adminEnterprise.eliminar\")}}\r\n                            <TrashCan32 class=\"bx--btn__icon\" />\r\n                        </cv-button>\r\n                        <cv-button @click=\"editarEmpresa\">\r\n                            {{$t(\"adminEnterprise.editar\")}}\r\n                            <Edit32 class=\"bx--btn__icon\" />\r\n                        </cv-button>\r\n                    </template>\r\n                    <template slot=\"data\">\r\n                        <cv-data-table-row\r\n                            v-for=\"enterprise in enterprises.slice(start, start+length)\"\r\n                            :key=\"`${enterprise.id}`\"\r\n                            :value=\"`${enterprise.id}`\"\r\n                            :aria-label-for-batch-checkbox=\"`Custom aria label for row ${enterprise.id} batch`\"\r\n                        >\r\n                            <cv-data-table-cell>{{enterprise.name}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{enterprise.cif}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{enterprise.hectares_available}}</cv-data-table-cell>\r\n                            <cv-data-table-cell>{{countParcels(enterprise.parcels)}}</cv-data-table-cell>\r\n                        </cv-data-table-row>\r\n                    </template>\r\n                </cv-data-table>\r\n            </div>\r\n            <newEnterprise ref=\"modal\"/>\r\n            <AlertaGeneral ref=\"alertaGeneral\" :tituloAlert=\"mensajeAlerta\" :tipoAlert=\"tipoAlerta\" />\r\n            <cv-modal\r\n            ref=\"alerta_eliminar\"\r\n            kind=\"danger\"\r\n            :visible=\"visibleAlertaEliminar\"\r\n            @primary-click=\"eliminarUsuario\">\r\n                <template slot=\"label\">{{$t(\"adminEnterprise.seguro\")}}</template>\r\n                <template slot=\"title\">{{$t(\"adminEnterprise.eliminar\")}}</template>\r\n                <template slot=\"content\">\r\n                <p>{{$t(\"adminEnterprise.seguro_enterprise_del\")}}</p>\r\n                </template>\r\n                <template slot=\"secondary-button\">{{$t(\"adminEnterprise.cancelar\")}}</template>\r\n                <template slot=\"primary-button\">{{$t(\"adminEnterprise.eliminar\")}}</template>\r\n            </cv-modal>\r\n        \r\n        </div>\r\n        <Footer/>\r\n    </div>\r\n    \r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nimport newEnterprise from \"../components/newEnterprise.vue\";\r\nimport Board from \"@/views/Board.vue\";\r\nimport Footer from \"../views/Footer.vue\";\r\n\r\nimport AlertaGeneral from \"../components/AlertaGeneral\";\r\nexport default {\r\n    name: \"AdminEnterprises\",\r\n    props: {},\r\n    components: {\r\n        newEnterprise,\r\n        Footer,\r\n        AlertaGeneral,\r\n        Board\r\n    },\r\n    data() {\r\n        return {\r\n            basicPagination: false,\r\n            use_batchActions: true,\r\n            hasExpandingRows: false,\r\n            use_slottedData: true,\r\n            visibleAlertaEliminar: false,\r\n            start: 0,\r\n            length: 10,\r\n            columns3: [\r\n                {\r\n                    key: \"name\",\r\n                    label: this.$t('adminEnterprise.nombre')\r\n                },\r\n                {\r\n                    key: \"cif\",\r\n                    label: this.$t('adminEnterprise.cif')\r\n                },\r\n                {\r\n                    key: \"hectares\",\r\n                    label: this.$t('adminEnterprise.hectareas_disponibles')\r\n                },\r\n                {\r\n                    key: \"hectaresUsed\",\r\n                    label: this.$t('adminEnterprise.hectareas_usadas')\r\n                },\r\n            ],\r\n            enterprises: [],\r\n        }\r\n    },\r\n    methods: {\r\n\r\n        countParcels(parcels){\r\n            //const regx = '/Ha/g;'\r\n            let hectareas_disponibles = 0        \r\n            parcels.features.forEach(parcel =>{\r\n                hectareas_disponibles = (hectareas_disponibles + parcel.properties.area)\r\n            })\r\n            const total = Math.round((hectareas_disponibles + Number.EPSILON) * 100) / 100\r\n            return total.toString().replace('.', ',')\r\n            \r\n        },\r\n        showAlert(){\r\n            this.mensajeAlerta = \"En desarrollo\"\r\n            this.tipoAlerta = 'info'\r\n            this.$refs.alertaGeneral.verAlerta()\r\n        },\r\n        actionOnPagination(ev){\r\n            this.start = ev.start-1\r\n            this.length = ev.length\r\n        },\r\n        obtenerListaEmpresas(){\r\n            const path = `${this.$apiURL}/enterprises/`;\r\n            axios.defaults.headers.common['Authorization'] = \"Bearer \"+sessionStorage.getItem(\"apiAccess\")\r\n            axios\r\n            .get(path)\r\n            .then(response => {\r\n                this.enterprises = response.data\r\n            }).catch(error =>{\r\n                console.info(error)\r\n            })\r\n        },\r\n        editarEmpresa(){\r\n            const rowSeleccionado = this.$refs.table.selectedRows\r\n            this.$router.push(`/edit-enterprise?enterprise=${rowSeleccionado}`);\r\n        },\r\n        nuevaEmpresa(){\r\n            const rowSeleccionado = this.$refs.table.selectedRows;\r\n            if (rowSeleccionado.length > 1) {\r\n                this.mensajeAlerta = `${this.$t('adminEnterprise.solo_una_empresa')}`;\r\n                this.$refs.alerta.verAlerta()\r\n            } else {\r\n                this.userSeleccionado = rowSeleccionado[0]\r\n                this.$refs.modal.openModal()\r\n            }\r\n            \r\n        },\r\n        eliminarEmpresaModal(){\r\n            this.$refs.alerta_eliminar.dataVisible = true\r\n        },\r\n        eliminarUsuario(){\r\n            const rowSeleccionado = this.$refs.table.selectedRows\r\n            let flag = false\r\n            rowSeleccionado.forEach(element => {\r\n                console.log(element)\r\n                const path = `${this.$apiURL}/enterprises/${element}/`\r\n                axios\r\n                .delete(path)\r\n                .then(() => {\r\n                    this.obtenerListaEmpresas();\r\n                })\r\n                .catch(response =>{\r\n                    flag = true\r\n                    console.log(response.error)\r\n                });\r\n            });\r\n            if(flag){\r\n                console.error('error')\r\n                this.mensajeAlerta = `${this.$t('adminEnterprise.del_empresa_error')}`;\r\n                this.$refs.alerta.verAlerta()\r\n            }else{\r\n                this.$refs.alerta_eliminar.hide()\r\n            }\r\n        }\r\n    },\r\n    created(){\r\n        this.obtenerListaEmpresas()\r\n    },\r\n    mounted(){\r\n\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n    #grid-admin{\r\n        margin-bottom: 50px;\r\n    }\r\n</style>"]}]}