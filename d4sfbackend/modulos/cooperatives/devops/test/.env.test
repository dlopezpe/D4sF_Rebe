# Imagenes del Postgres, PostGis y PgAdmin
PGADMIN_IMAGE=dpage/pgadmin4:8.3
POSTGIS_IMAGE=postgis/postgis:14-3.4

ENVIRONMENT=test
PYTHONPATH=/d4sfbackend

# PostgreSQL 14 & Postgis 3.4
DB_DRIVER=django.contrib.gis.db.backends.postgis
POSTGRES_HOST=82.223.104.97
POSTGRES_PORT=5432
POSTGRES_DB=dataforsmartfarming_testing_new
POSTGRES_USER=dataforsmartfarmingbackend
POSTGRES_PASSWORD=Cm&O8nOlKZlb

# PgAdmin 8.3
PGADMIN_DEFAULT_EMAIL="admin@pgadmin.com"
PGADMIN_DEFAULT_PASSWORD="Pallas33"
PGADMIN_LISTEN_PORT=5050
PGADMIN_PORT=15432

# Project namespace (defaults to the current folder name if not set)
COMPOSE_PROJECT_NAME=ds4f

#OSGeo4W
GDAL_LIBRARY_PATH=C:\OSGeo4W

#Django Backend

#Secret Key Django for TESTING generate by https://djecrety.ir/
DJANGO_SECRET_KEY=5g$(boee&8dmoo)2_hf1*h*7w95moz7x_u+h=i=gtrz)^#0k2$

DEBUG=True

ALLOWED_HOSTS=127.0.0.1,localhost

CORS_ORIGIN_WHITELIST=http://localhost:8080,https://localhost:8080,http://localhost:8081,

#Backend Logging

LOG_LEVEL=DEBUG

# Nombre del archivo de registro de los logs
LOG_FILENAME=DS4F_backend_

# Tamaño máximo del archivo en bytes (1 MB) - 1*1024*1024
MAX_LOG_SIZE_BYTES=1048576

# Número de copias de respaldo
BACKUP_COUNT=10

ENCODING=utf-8
DJANGO_LOG_LEVEL=INFO

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/
STATIC_URL='/media/parcels/'
PARCEL_FOLDER='media/parcels/'
SHAPES_FOLDER='media/shapes/'
CAMPANA_FOLDER='media/campana/'
SITE_URL='http://localhost:8080/'

#Email configuration
ENABLED_EMAIL=False
EMAIL_HOST=smtp.strato.com
EMAIL_PORT=465
EMAIL_HOST_USER=soporte@d4smartfarming.com
EMAIL_HOST_PASSWORD=Ucbpablo01
DEFAULT_FROM_EMAIL=soporte@d4smartfarming.com
EMAIL_USE_TLS=False
EMAIL_USE_SSL=True

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/
LANGUAGE_CODE=en-us
TIME_ZONE=Europe/Madrid
USE_I18N=True
USE_L10N=True
USE_TZ=True

#Sentinel
URL_API_SENTINEL_INSTANCES=https://services.sentinel-hub.com/configuration/v1/wms/instances/
URL_API_SENTINEL_WMS=https://services.sentinel-hub.com/ogc/wms/
URL_API_SENTINEL_TOKEN=https://services.sentinel-hub.com/oauth/token

#Secrets sentinel
CLIENT_ID=33467c23-fada-4405-8a5b-33ee38169273
CLIENT_SECRET=&O97/<>sWmmUrI2KctxxVf9iCQi*~eN|:I6R%o6:

#DATASETS
URL_API_SENTINEL_DATA_PRODUCTS_1242=https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C/dataproducts/1242
URL_API_SENTINEL_DATA_PRODUCTS_647=https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C/dataproducts/647
URL_API_SENTINEL_DATA_SETS=https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C
URL_API_SENTINEL_DATA_SOURCE=https://services.sentinel-hub.com/configuration/v1/datasets/S2L1C/sources/1

#LAYERS
FALSE_LAYERS_ = ?SERVICE=WMS&VERSION=1.3.0&REQUEST=GetMap&FORMAT=image%2Fpng&TRANSPARENT=false&LAYERS=
CRS_=&CRS=EPSG%3A4326&WIDTH=2248&HEIGHT=1449&MAXCC=100&BBOX=
TIME_=&TIME=2019-01-01%2F
EVAL_SCRIPT=//VERSION=3\n\nlet index = (B8A - B11)/(B8A + B11);\n\nlet val = colorBlend(index, [-0.8, -0.24, -0.032, 0.032, 0.24, 0.8], [[0.5,0,0], [1,0,0], [1,1,0], [0,1,1], [0,0,1], [0,0,0.5]]);\nval.push(dataMask);\nreturn val;\n\n
